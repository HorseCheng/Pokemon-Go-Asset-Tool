/*
* Copyright 2016-2021 --=FurtiF=--.
*
* Licensed under the
*	Educational Community License, Version 2.0 (the "License"); you may
*	not use this file except in compliance with the License. You may
*	obtain a copy of the License at
*
*	http://www.osedu.org/licenses/ECL-2.0
*
*	Unless required by applicable law or agreed to in writing,
*	software distributed under the License is distributed on an "AS IS"
*	BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
*	or implied. See the License for the specific language governing
*	permissions and limitations under the License.
*
* Note: For references only.
*
*/

syntax = "proto3";
package POGOProtos.Rpc;

message ProgressTokenDataProto {
	enum RaidStateFunction {
		NONE_RAID_STATE = 0;
		EXIT_GYM_RAID_STATE = 1;
	}

	enum RaidResolveUicontrollerFunction {
		NONE_RAID_RESOLVE_UI_CONTROLLER = 0;
		INIT_RAID_RESOLVE_UI_CONTROLLER = 1;
		CLOSE_RAID_RESOLVE_UI_CONTROLLER = 2;
	}

	enum RaidLobbyStateFunction {
		NONE_RAID_LOBBY_STATE = 0;
		ENTER_RAID_LOBBY_STATE = 1;
		EXIT_RAID_LOBBY_STATE = 2;
		CREATE_LOBBY = 3;
		CREATE_LOBBY_FOR_REAL = 4;
		START_RAID_BATTLE_STATE = 5;
		CANCEL_RAID_BATTLE_TRANSITION = 6;
	}

	oneof Function {
		GymRootControllerFunction gym_root_controller_function = 2;
		RaidStateFunction raid_state_function = 3;
		RaidLobbyStateFunction raid_lobby_state_function = 4;
		RaidLobbyGuiControllerFunction raid_lobby_gui_controller_function = 5;
		RaidBattleStateFunction raid_battle_state_function = 6;
		RaidResolveStateFunction raid_resolve_state_function = 7;
		RaidResolveUicontrollerFunction raid_resolve_uicontroller_function = 8;
		EncounterStateFunction encounter_state_function = 9;
		MapExploreStateFunction map_explore_state_function = 10;
	}

	enum RaidResolveStateFunction {
		NONE_RAID_RESOLVE_STATE = 0;
		ENTER_RAID_RESOLVE_STATE = 1;
		EXIT_RAID_RESOLVE_STATE = 2;
		INIT_RAID_RESOLVE_STATE = 3;
	}

	enum MapExploreStateFunction {
		NONE_MAP_EXPLORE_STATE = 0;
		GYM_ROOT_COMPLETE = 1;
	}

	enum GymRootControllerFunction {
		NONE_GYM_GYM_ROOT_CONTROLLER = 0;
		EXIT_GYM_GYM_ROOT_CONTROLLER = 1;
	}

	enum RaidLobbyGuiControllerFunction {
		NONE_RAID_LOBBY_GUI_CONTROLLER = 0;
		INIT_RAID_LOBBY_GUI_CONTROLLER = 1;
		SET_DEPENDANT_VISUALS = 2;
		START_LOBBY_INTRO = 3;
		LOBBY_INTRO = 4;
		ON_LOBBY_INTRO_COMPLETE = 5;
		SHOW_BATTLE_PREP_GUI = 6;
		HANDLE_DISMISS_COMPLETE = 7;
		START_TIMEOUT_SCREEN = 8;
		REJOIN_BATTLE = 9;
		UPDATE_AVATARS = 10;
		START_POLLING_GET_RAID_DETAILS = 11;
		PLAY_BATTLE_INTRO = 12;
		LEAVE_LOBBY = 13;
		ON_POKEMON_INVENTORY_OPENED = 14;
		ON_CLICK_INVENTORY = 15;
		ON_TAP = 16;
		HANDLE_RAID_BATTLE_COMPLETE = 17;
	}

	enum RaidBattleStateFunction {
		NONE_RAID_BATTLE_STATE = 0;
		ENTER_RAID_BATTLE_STATE = 1;
		EXIT_RAID_BATTLE_STATE = 2;
		OBSERVE_BATTLE_FRAMES = 3;
		START_RAID_BATTLE = 4;
		START_RAID_BATTLE_WHEN_READY = 5;
		END_BATTLE_WHEN_READY = 6;
	}

	enum EncounterStateFunction {
		NONE_ENCOUNTER_STATE = 0;
		SETUP_ENCOUNTER = 1;
		BEGIN_ENCOUNTER_APPROACH = 2;
		ENCOUNTER_STATE_COMPLETE = 3;
		EXIT_ENCOUNTER_STATE = 4;
	}

	int32 ob_progress_token_int32 = 1;
}
