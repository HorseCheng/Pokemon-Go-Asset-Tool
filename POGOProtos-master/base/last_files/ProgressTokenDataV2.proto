/*
* Copyright 2016-2022 --=FurtiF=--.
*
* Licensed under the
*	Educational Community License, Version 2.0 (the "License"); you may
*	not use this file except in compliance with the License. You may
*	obtain a copy of the License at
*
*	http://www.osedu.org/licenses/ECL-2.0
*
*	Unless required by applicable law or agreed to in writing,
*	software distributed under the License is distributed on an "AS IS"
*	BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
*	or implied. See the License for the specific language governing
*	permissions and limitations under the License.
*
* Note: For references only.
*
*/

syntax = "proto3";
package POGOProtos.Rpc;

message ProgressTokenDataV2 {
	oneof CombatFunction {
		CombatActiveStateFunctionProto combat_active_state_function = 2;
		CombatEndStateFunctionProto combat_end_state_function = 3;
		CombatReadyStateFunctionProto combat_ready_state_function = 4;
		CombatSwapStateFunctionProto combat_swap_state_function = 5;
		CombatSpecialMoveStateFunctionProto combat_special_move_state_function = 6;
		CombatWaitForPlayerStateFunctionProto combat_wait_for_player_state_function = 7;
		CombatPresentationDirectorFunctionProto combat_presentation_director_function = 8;
		CombatDirectorV2FunctionProto combat_director_v2_function = 9;
		CombatStateV2FunctionProto combat_state_v2_function = 10;
		CombatPokemonFunctionProto combat_pokemon_function = 11;
	}

	enum CombatPokemonFunctionProto {
		OBSERVE_ACTION = 0;
		EXECUTE_ACTION = 1;
		PAUSE_UPDATES = 2;
	}

	enum CombatSwapStateFunctionProto {
		NONE_COMBAT_SWAP_STATE = 0;
		ENTER_COMBAT_SWAP_STATE = 1;
		EXIT_COMBAT_SWAP_STATE = 2;
		DO_WORK_COMBAT_SWAP_STATE = 3;
	}

	enum CombatStateV2FunctionProto {
		NONE_COMBAT_STATE_V2 = 0;
		OBSERVE_COMBAT_STATE = 1;
		DELAY_SPECIAL_TRANSITION = 2;
	}

	enum CombatSpecialMoveStateFunctionProto {
		NONE_COMBAT_SPECIAL_MOVE_STATE = 0;
		ENTER_COMBAT_SPECIAL_MOVE_STATE = 1;
		EXIT_COMBAT_SPECIAL_MOVE_STATE = 2;
		DO_WORK_COMBAT_SPECIAL_MOVE_STATE = 3;
		PERFORM_FLY_IN = 4;
		PERFORM_FLY_OUT = 5;
	}

	enum CombatActiveStateFunctionProto {
		NONE_COMBAT_ACTIVE_STATE = 0;
		ENTER_COMBAT_ACTIVE_STATE = 1;
		EXIT_COMBAT_ACTIVE_STATE = 2;
		DO_WORK_COMBAT_ACTIVE_STATE = 3;
	}

	enum CombatReadyStateFunctionProto {
		NONE_COMBAT_READY_STATE = 0;
		ENTER_COMBAT_READY_STATE = 1;
		EXIT_COMBAT_READY_STATE = 2;
		DO_WORK_COMBAT_READY_STATE = 3;
	}

	enum CombatEndStateFunctionProto {
		NONE_COMBAT_END_STATE = 0;
		ENTER_COMBAT_END_STATE = 1;
		EXIT_COMBAT_END_STATE = 2;
		DO_WORK_COMBAT_END_STATE = 3;
	}

	enum CombatDirectorV2FunctionProto {
		NONE_COMBAT_DIRECTOR_V2 = 0;
		TRY_START_COMBAT = 1;
		START_COMBAT_ERROR = 2;
		RECEIVE_COMBAT_UPDATE = 3;
		TRY_FAST_ATTACK = 4;
		SWAP_POKEMON_TO = 5;
		QUEUE_SPECIAL_ATTACK = 6;
		TRY_SPECIAL_ATTACK = 7;
		TRY_EXECUTE_BUFFERED_ACTION = 8;
		CAN_ACT_ON_TURN = 9;
		CAN_PERFORM_ATTACK = 10;
		CHECK_OPPONENT_CHARGE_MOVE_CHANCE = 11;
	}

	enum CombatWaitForPlayerStateFunctionProto {
		NONE_COMBAT_WAIT_FOR_PLAYER_STATE = 0;
		ENTER_COMBAT_WAIT_FOR_PLAYER_STATE = 1;
		EXIT_COMBAT_WAIT_FOR_PLAYER_STATE = 2;
		DO_WORK_COMBAT_WAIT_FOR_PLAYER_STATE = 3;
	}

	enum CombatPresentationDirectorFunctionProto {
		NONE_COMBAT_PRESENTATION_DIRECTOR = 0;
		PLAY_MINI_GAME = 1;
	}

	int32 ob_int32 = 1;
}
