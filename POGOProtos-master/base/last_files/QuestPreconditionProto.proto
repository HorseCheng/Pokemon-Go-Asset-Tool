/*
* Copyright 2016-2021 --=FurtiF=--.
*
* Licensed under the
*	Educational Community License, Version 2.0 (the "License"); you may
*	not use this file except in compliance with the License. You may
*	obtain a copy of the License at
*
*	http://www.osedu.org/licenses/ECL-2.0
*
*	Unless required by applicable law or agreed to in writing,
*	software distributed under the License is distributed on an "AS IS"
*	BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
*	or implied. See the License for the specific language governing
*	permissions and limitations under the License.
*
* Note: For references only.
*
*/

syntax = "proto3";
package POGOProtos.Rpc;

import "Team.proto";
import "HoloBadgeType.proto";

message QuestPreconditionProto {
	oneof Condition {
		string quest_template_id = 2;
		Level level = 3;
		Medal medal = 4;
		Quests quests = 5;
		MonthYearBucket month_year_bucket = 6;
		Group group = 7;
		StorylineProgressConditionProto story_line = 8;
		Team team = 9;
	}

	message Team {
		Operator operator = 1;
		Team team = 2;
	}

	enum Operator {
		UNSET = 0;
		EQUALS = 1;
		GREATER_THAN = 2;
		LESS_THAN = 3;
		NOT_EQUALS = 4;
	}

	enum QuestPreconditionType {
		QUEST_PRECONDITION_UNSET_QUESTPRECONDITIONTYPE = 0;
		QUEST_PRECONDITION_QUEST = 1;
		QUEST_PRECONDITION_LEVEL = 2;
		QUEST_PRECONDITION_MEDAL = 3;
		QUEST_PRECONDITION_IS_MINOR = 4;
		QUEST_PRECONDITION_EXCLUSIVE_QUESTS = 5;
		QUEST_PRECONDITION_NEVER = 6;
		QUEST_PRECONDITION_RECEIVED_ANY_LISTED_QUEST = 7;
		QUEST_PRECONDITION_MONTH_YEAR_BUCKET = 8;
		QUEST_PRECONDITION_EXCLUSIVE_IN_PROGRESS_GROUP = 9;
		QUEST_PRECONDITION_STORYLINE_PROGRESS = 10;
		QUEST_PRECONDITION_TEAM = 11;
	}

	message Group {
		enum Name {
			UNSET_NAME = 0;
			GIOVANNI = 1;
		}

		Name name = 1;
	}

	message Level {
		Operator operator = 1;
		int32 level = 2;
	}

	message Medal {
		HoloBadgeType type = 1;
		Operator operator = 2;
		int32 badge_rank = 3;
	}

	message MonthYearBucket {
		int32 year = 1;
		int32 month = 2;
	}

	message Quests {
		repeated string quest_template_ids = 1;
	}

	message StorylineProgressConditionProto {
		repeated string mandatory_quest_template_id = 1;
		repeated string optional_quest_template_id = 2;
		int32 optional_quests_completed_min = 3;
		int32 optional_quests_completed_max = 4;
	}

	QuestPreconditionType type = 1;
}
