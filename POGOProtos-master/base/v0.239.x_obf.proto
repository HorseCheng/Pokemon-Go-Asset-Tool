/*
* Copyright 2016-2022 --=FurtiF=--.
*
* Licensed under the
*	Educational Community License, Version 2.0 (the "License"); you may
*	not use this file except in compliance with the License. You may
*	obtain a copy of the License at
*
*	http://www.osedu.org/licenses/ECL-2.0
*
*	Unless required by applicable law or agreed to in writing,
*	software distributed under the License is distributed on an "AS IS"
*	BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
*	or implied. See the License for the specific language governing
*	permissions and limitations under the License.
*/

syntax = "proto3";
package POGOProtos.Rpc;

enum ADELCOJBGFA {
	ADELCOJBGFA_UPGRADE_UNSET = 0;
	ADELCOJBGFA_INCREASE_ITEM_STORAGE = 1;
	ADELCOJBGFA_INCREASE_POKEMON_STORAGE = 2;
}

enum AEKJDLCIPPD {
	AEKJDLCIPPD_EGG_TYPE_UNSET = 0;
	AEKJDLCIPPD_EGG_TYPE_SHADOW = 1;
}

enum AOGNGKLAGMF {
	AOGNGKLAGMF_BUDDY_ACTIVITY_UNSET = 0;
	AOGNGKLAGMF_BUDDY_ACTIVITY_FEED = 1;
	AOGNGKLAGMF_BUDDY_ACTIVITY_PET = 2;
	AOGNGKLAGMF_BUDDY_ACTIVITY_SNAPSHOT = 3;
	AOGNGKLAGMF_BUDDY_ACTIVITY_WALK = 4;
	AOGNGKLAGMF_BUDDY_ACTIVITY_NEW_POIS = 5;
	AOGNGKLAGMF_BUDDY_ACTIVITY_GYM_BATTLE = 6;
	AOGNGKLAGMF_BUDDY_ACTIVITY_RAID_BATTLE = 7;
	AOGNGKLAGMF_BUDDY_ACTIVITY_NPC_BATTLE = 8;
	AOGNGKLAGMF_BUDDY_ACTIVITY_PVP_BATTLE = 9;
	AOGNGKLAGMF_BUDDY_ACTIVITY_OPEN_SOUVENIRS = 10;
	AOGNGKLAGMF_BUDDY_ACTIVITY_OPEN_CONSUMABLES = 11;
	AOGNGKLAGMF_BUDDY_ACTIVITY_INVASION_GRUNT = 12;
	AOGNGKLAGMF_BUDDY_ACTIVITY_INVASION_LEADER = 13;
	AOGNGKLAGMF_BUDDY_ACTIVITY_INVASION_GIOVANNI = 14;
	AOGNGKLAGMF_BUDDY_ACTIVITY_ATTRACTIVE_POI = 15;
	AOGNGKLAGMF_BUDDY_ACTIVITY_VISIT_POWERED_UP_FORT = 16;
}

enum AssetTelemetryIds {
	ASSET_TELEMETRY_IDS_UNDEFINED_ASSET_EVENT = 0;
	ASSET_TELEMETRY_IDS_DOWNLOAD_START = 1;
	ASSET_TELEMETRY_IDS_DOWNLOAD_FINISHED = 2;
	ASSET_TELEMETRY_IDS_DOWNLOAD_FAILED = 3;
	ASSET_TELEMETRY_IDS_ASSET_RETRIEVED_FROM_CACHE = 4;
	ASSET_TELEMETRY_IDS_CACHE_THRASH = 5;
}

enum AvatarCustomizationTelemetryIds {
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_UNDEFINED_AVATAR_CUSTOMIZATION = 0;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_EQUIP_ITEM = 1;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_OPEN_FEATURES = 2;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_OPEN_STORE = 3;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_PURCHASE_ITEM = 4;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_PURCHASE_ERROR = 5;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_SELECT_ITEM_GROUP = 6;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_SELECT_SLOT = 7;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_SELECT_COLOR = 8;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_SHOW_QUICK_SHOP = 9;
}

enum BFABHCMKGCB {
	BFABHCMKGCB_ITEM_UNKNOWN = 0;
	BFABHCMKGCB_ITEM_POKE_BALL = 1;
	BFABHCMKGCB_ITEM_GREAT_BALL = 2;
	BFABHCMKGCB_ITEM_ULTRA_BALL = 3;
	BFABHCMKGCB_ITEM_MASTER_BALL = 4;
	BFABHCMKGCB_ITEM_PREMIER_BALL = 5;
	BFABHCMKGCB_ITEM_POTION = 101;
	BFABHCMKGCB_ITEM_SUPER_POTION = 102;
	BFABHCMKGCB_ITEM_HYPER_POTION = 103;
	BFABHCMKGCB_ITEM_MAX_POTION = 104;
	BFABHCMKGCB_ITEM_REVIVE = 201;
	BFABHCMKGCB_ITEM_MAX_REVIVE = 202;
	BFABHCMKGCB_ITEM_LUCKY_EGG = 301;
	BFABHCMKGCB_ITEM_INCENSE_ORDINARY = 401;
	BFABHCMKGCB_ITEM_INCENSE_SPICY = 402;
	BFABHCMKGCB_ITEM_INCENSE_COOL = 403;
	BFABHCMKGCB_ITEM_INCENSE_FLORAL = 404;
	BFABHCMKGCB_ITEM_INCENSE_BELUGA_BOX = 405;
	BFABHCMKGCB_ITEM_TROY_DISK = 501;
	BFABHCMKGCB_ITEM_TROY_DISK_GLACIAL = 502;
	BFABHCMKGCB_ITEM_TROY_DISK_MOSSY = 503;
	BFABHCMKGCB_ITEM_TROY_DISK_MAGNETIC = 504;
	BFABHCMKGCB_ITEM_TROY_DISK_RAINY = 505;
	BFABHCMKGCB_ITEM_X_ATTACK = 602;
	BFABHCMKGCB_ITEM_X_DEFENSE = 603;
	BFABHCMKGCB_ITEM_X_MIRACLE = 604;
	BFABHCMKGCB_ITEM_RAZZ_BERRY = 701;
	BFABHCMKGCB_ITEM_BLUK_BERRY = 702;
	BFABHCMKGCB_ITEM_NANAB_BERRY = 703;
	BFABHCMKGCB_ITEM_WEPAR_BERRY = 704;
	BFABHCMKGCB_ITEM_PINAP_BERRY = 705;
	BFABHCMKGCB_ITEM_GOLDEN_RAZZ_BERRY = 706;
	BFABHCMKGCB_ITEM_GOLDEN_NANAB_BERRY = 707;
	BFABHCMKGCB_ITEM_GOLDEN_PINAP_BERRY = 708;
	BFABHCMKGCB_ITEM_POFFIN = 709;
	BFABHCMKGCB_ITEM_SPECIAL_CAMERA = 801;
	BFABHCMKGCB_ITEM_STICKER_INVENTORY = 802;
	BFABHCMKGCB_ITEM_POSTCARD_INVENTORY = 803;
	BFABHCMKGCB_ITEM_INCUBATOR_BASIC_UNLIMITED = 901;
	BFABHCMKGCB_ITEM_INCUBATOR_BASIC = 902;
	BFABHCMKGCB_ITEM_INCUBATOR_SUPER = 903;
	BFABHCMKGCB_ITEM_POKEMON_STORAGE_UPGRADE = 1001;
	BFABHCMKGCB_ITEM_ITEM_STORAGE_UPGRADE = 1002;
	BFABHCMKGCB_ITEM_SUN_STONE = 1101;
	BFABHCMKGCB_ITEM_KINGS_ROCK = 1102;
	BFABHCMKGCB_ITEM_METAL_COAT = 1103;
	BFABHCMKGCB_ITEM_DRAGON_SCALE = 1104;
	BFABHCMKGCB_ITEM_UP_GRADE = 1105;
	BFABHCMKGCB_ITEM_GEN4_EVOLUTION_STONE = 1106;
	BFABHCMKGCB_ITEM_GEN5_EVOLUTION_STONE = 1107;
	BFABHCMKGCB_ITEM_MOVE_REROLL_FAST_ATTACK = 1201;
	BFABHCMKGCB_ITEM_MOVE_REROLL_SPECIAL_ATTACK = 1202;
	BFABHCMKGCB_ITEM_MOVE_REROLL_ELITE_FAST_ATTACK = 1203;
	BFABHCMKGCB_ITEM_MOVE_REROLL_ELITE_SPECIAL_ATTACK = 1204;
	BFABHCMKGCB_ITEM_RARE_CANDY = 1301;
	BFABHCMKGCB_ITEM_XL_RARE_CANDY = 1302;
	BFABHCMKGCB_ITEM_FREE_RAID_TICKET = 1401;
	BFABHCMKGCB_ITEM_PAID_RAID_TICKET = 1402;
	BFABHCMKGCB_ITEM_LEGENDARY_RAID_TICKET = 1403;
	BFABHCMKGCB_ITEM_STAR_PIECE = 1404;
	BFABHCMKGCB_ITEM_FRIEND_GIFT_BOX = 1405;
	BFABHCMKGCB_ITEM_TEAM_CHANGE = 1406;
	BFABHCMKGCB_ITEM_ROUTE_MAKER = 1407;
	BFABHCMKGCB_ITEM_REMOTE_RAID_TICKET = 1408;
	BFABHCMKGCB_ITEM_LEADER_MAP_FRAGMENT = 1501;
	BFABHCMKGCB_ITEM_LEADER_MAP = 1502;
	BFABHCMKGCB_ITEM_GIOVANNI_MAP = 1503;
	BFABHCMKGCB_ITEM_GLOBAL_EVENT_TICKET = 1600;
	BFABHCMKGCB_ITEM_EVENT_TICKET_PINK = 1601;
	BFABHCMKGCB_ITEM_EVENT_TICKET_GRAY = 1602;
	BFABHCMKGCB_ITEM_GLOBAL_EVENT_TICKET_TO_GIFT = 1603;
	BFABHCMKGCB_ITEM_EVENT_TICKET_PINK_TO_GIFT = 1604;
	BFABHCMKGCB_ITEM_EVENT_TICKET_GRAY_TO_GIFT = 1605;
}

enum BMIPJFMKCPG {
	BMIPJFMKCPG_POKEMON_ENC_MOVEMENT_STATIC = 0;
	BMIPJFMKCPG_POKEMON_ENC_MOVEMENT_JUMP = 1;
	BMIPJFMKCPG_POKEMON_ENC_MOVEMENT_VERTICAL = 2;
	BMIPJFMKCPG_POKEMON_ENC_MOVEMENT_PSYCHIC = 3;
	BMIPJFMKCPG_POKEMON_ENC_MOVEMENT_ELECTRIC = 4;
	BMIPJFMKCPG_POKEMON_ENC_MOVEMENT_FLYING = 5;
	BMIPJFMKCPG_POKEMON_ENC_MOVEMENT_HOVERING = 6;
}

enum BattlePartyTelemetryIds {
	BATTLE_PARTY_TELEMETRY_IDS_UNDEFINED_BATTLE_PARTY_EVENT = 0;
	BATTLE_PARTY_TELEMETRY_IDS_ADD = 1;
	BATTLE_PARTY_TELEMETRY_IDS_REMOVE = 2;
	BATTLE_PARTY_TELEMETRY_IDS_GYM_BATTLE = 3;
	BATTLE_PARTY_TELEMETRY_IDS_RAID_BATTLE = 4;
	BATTLE_PARTY_TELEMETRY_IDS_BATTLE_POKEMON_CHANGED = 5;
}

enum CJEONPOMPLE {
	CJEONPOMPLE_UNDEFINED = 0;
	CJEONPOMPLE_REFERRER = 1;
	CJEONPOMPLE_NEW_REFEREE = 2;
	CJEONPOMPLE_LAPSED_REFEREE = 3;
}

enum CJOFDMIDIFC {
	CJOFDMIDIFC_AD_FEEDBACK_NOT_INTERESTED_REASON_INVALID = 0;
	CJOFDMIDIFC_AD_FEEDBACK_NOT_INTERESTED_REASON_NOT_RELEVANT = 1;
	CJOFDMIDIFC_AD_FEEDBACK_NOT_INTERESTED_REASON_SEEN_TOO_OFTEN = 2;
}

enum CLDFDLHPJDE {
	CLDFDLHPJDE_GYM = 0;
	CLDFDLHPJDE_CHECKPOINT = 1;
}

enum COPMENHFKJN {
	COPMENHFKJN_BOTH = 0;
	COPMENHFKJN_IN_PERSON = 1;
	COPMENHFKJN_REMOTE = 2;
}

enum DCAECPGGPON {
	DCAECPGGPON_BADGE_UNSET = 0;
	DCAECPGGPON_BADGE_TRAVEL_KM = 1;
	DCAECPGGPON_BADGE_POKEDEX_ENTRIES = 2;
	DCAECPGGPON_BADGE_CAPTURE_TOTAL = 3;
	DCAECPGGPON_BADGE_DEFEATED_FORT = 4;
	DCAECPGGPON_BADGE_EVOLVED_TOTAL = 5;
	DCAECPGGPON_BADGE_HATCHED_TOTAL = 6;
	DCAECPGGPON_BADGE_ENCOUNTERED_TOTAL = 7;
	DCAECPGGPON_BADGE_POKESTOPS_VISITED = 8;
	DCAECPGGPON_BADGE_UNIQUE_POKESTOPS = 9;
	DCAECPGGPON_BADGE_POKEBALL_THROWN = 10;
	DCAECPGGPON_BADGE_BIG_MAGIKARP = 11;
	DCAECPGGPON_BADGE_DEPLOYED_TOTAL = 12;
	DCAECPGGPON_BADGE_BATTLE_ATTACK_WON = 13;
	DCAECPGGPON_BADGE_BATTLE_TRAINING_WON = 14;
	DCAECPGGPON_BADGE_BATTLE_DEFEND_WON = 15;
	DCAECPGGPON_BADGE_PRESTIGE_RAISED = 16;
	DCAECPGGPON_BADGE_PRESTIGE_DROPPED = 17;
	DCAECPGGPON_BADGE_TYPE_NORMAL = 18;
	DCAECPGGPON_BADGE_TYPE_FIGHTING = 19;
	DCAECPGGPON_BADGE_TYPE_FLYING = 20;
	DCAECPGGPON_BADGE_TYPE_POISON = 21;
	DCAECPGGPON_BADGE_TYPE_GROUND = 22;
	DCAECPGGPON_BADGE_TYPE_ROCK = 23;
	DCAECPGGPON_BADGE_TYPE_BUG = 24;
	DCAECPGGPON_BADGE_TYPE_GHOST = 25;
	DCAECPGGPON_BADGE_TYPE_STEEL = 26;
	DCAECPGGPON_BADGE_TYPE_FIRE = 27;
	DCAECPGGPON_BADGE_TYPE_WATER = 28;
	DCAECPGGPON_BADGE_TYPE_GRASS = 29;
	DCAECPGGPON_BADGE_TYPE_ELECTRIC = 30;
	DCAECPGGPON_BADGE_TYPE_PSYCHIC = 31;
	DCAECPGGPON_BADGE_TYPE_ICE = 32;
	DCAECPGGPON_BADGE_TYPE_DRAGON = 33;
	DCAECPGGPON_BADGE_TYPE_DARK = 34;
	DCAECPGGPON_BADGE_TYPE_FAIRY = 35;
	DCAECPGGPON_BADGE_SMALL_RATTATA = 36;
	DCAECPGGPON_BADGE_PIKACHU = 37;
	DCAECPGGPON_BADGE_UNOWN = 38;
	DCAECPGGPON_BADGE_POKEDEX_ENTRIES_GEN2 = 39;
	DCAECPGGPON_BADGE_RAID_BATTLE_WON = 40;
	DCAECPGGPON_BADGE_LEGENDARY_BATTLE_WON = 41;
	DCAECPGGPON_BADGE_BERRIES_FED = 42;
	DCAECPGGPON_BADGE_HOURS_DEFENDED = 43;
	DCAECPGGPON_BADGE_PLACE_HOLDER = 44;
	DCAECPGGPON_BADGE_POKEDEX_ENTRIES_GEN3 = 45;
	DCAECPGGPON_BADGE_CHALLENGE_QUESTS = 46;
	DCAECPGGPON_BADGE_MEW_ENCOUNTER = 47;
	DCAECPGGPON_BADGE_MAX_LEVEL_FRIENDS = 48;
	DCAECPGGPON_BADGE_TRADING = 49;
	DCAECPGGPON_BADGE_TRADING_DISTANCE = 50;
	DCAECPGGPON_BADGE_POKEDEX_ENTRIES_GEN4 = 51;
	DCAECPGGPON_BADGE_GREAT_LEAGUE = 52;
	DCAECPGGPON_BADGE_ULTRA_LEAGUE = 53;
	DCAECPGGPON_BADGE_MASTER_LEAGUE = 54;
	DCAECPGGPON_BADGE_PHOTOBOMB = 55;
	DCAECPGGPON_BADGE_POKEDEX_ENTRIES_GEN5 = 56;
	DCAECPGGPON_BADGE_POKEMON_PURIFIED = 57;
	DCAECPGGPON_BADGE_ROCKET_GRUNTS_DEFEATED = 58;
	DCAECPGGPON_BADGE_ROCKET_GIOVANNI_DEFEATED = 59;
	DCAECPGGPON_BADGE_BUDDY_BEST = 60;
	DCAECPGGPON_BADGE_POKEDEX_ENTRIES_GEN6 = 61;
	DCAECPGGPON_BADGE_POKEDEX_ENTRIES_GEN7 = 62;
	DCAECPGGPON_BADGE_POKEDEX_ENTRIES_GEN8 = 63;
	DCAECPGGPON_BADGE_7_DAY_STREAKS = 64;
	DCAECPGGPON_BADGE_UNIQUE_RAID_BOSSES_DEFEATED = 65;
	DCAECPGGPON_BADGE_RAIDS_WITH_FRIENDS = 66;
	DCAECPGGPON_BADGE_POKEMON_CAUGHT_AT_YOUR_LURES = 67;
	DCAECPGGPON_BADGE_WAYFARER = 68;
	DCAECPGGPON_BADGE_TOTAL_MEGA_EVOS = 69;
	DCAECPGGPON_BADGE_UNIQUE_MEGA_EVOS = 70;
	DCAECPGGPON_DEPRECATED_0 = 71;
	DCAECPGGPON_BADGE_ROUTE_ACCEPTED = 72;
	DCAECPGGPON_BADGE_TRAINERS_REFERRED = 73;
	DCAECPGGPON_BADGE_POKESTOPS_SCANNED = 74;
	DCAECPGGPON_BADGE_RAID_BATTLE_STAT = 76;
	DCAECPGGPON_BADGE_TOTAL_ROUTE_PLAY = 77;
	DCAECPGGPON_BADGE_UNIQUE_ROUTE_PLAY = 78;
	DCAECPGGPON_BADGE_DYNAMIC_MIN = 1000;
	DCAECPGGPON_BADGE_MINI_COLLECTION = 1002;
	DCAECPGGPON_BADGE_EVENT_MIN = 2000;
	DCAECPGGPON_BADGE_CHICAGO_FEST_JULY_2017 = 2001;
	DCAECPGGPON_BADGE_PIKACHU_OUTBREAK_YOKOHAMA_2017 = 2002;
	DCAECPGGPON_BADGE_SAFARI_ZONE_EUROPE_2017 = 2003;
	DCAECPGGPON_BADGE_SAFARI_ZONE_EUROPE_2017_10_07 = 2004;
	DCAECPGGPON_BADGE_SAFARI_ZONE_EUROPE_2017_10_14 = 2005;
	DCAECPGGPON_BADGE_CHICAGO_FEST_JULY_2018_SAT_NORTH = 2006;
	DCAECPGGPON_BADGE_CHICAGO_FEST_JULY_2018_SAT_SOUTH = 2007;
	DCAECPGGPON_BADGE_CHICAGO_FEST_JULY_2018_SUN_NORTH = 2008;
	DCAECPGGPON_BADGE_CHICAGO_FEST_JULY_2018_SUN_SOUTH = 2009;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_0 = 2010;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_1 = 2011;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_2 = 2012;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_3 = 2013;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_4 = 2014;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_5 = 2015;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_6 = 2016;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_7 = 2017;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_8 = 2018;
	DCAECPGGPON_BADGE_APAC_PARTNER_JULY_2018_9 = 2019;
	DCAECPGGPON_BADGE_YOKOSUKA_29_AUG_2018_MIKASA = 2020;
	DCAECPGGPON_BADGE_YOKOSUKA_29_AUG_2018_VERNY = 2021;
	DCAECPGGPON_BADGE_YOKOSUKA_29_AUG_2018_KURIHAMA = 2022;
	DCAECPGGPON_BADGE_YOKOSUKA_30_AUG_2018_MIKASA = 2023;
	DCAECPGGPON_BADGE_YOKOSUKA_30_AUG_2018_VERNY = 2024;
	DCAECPGGPON_BADGE_YOKOSUKA_30_AUG_2018_KURIHAMA = 2025;
	DCAECPGGPON_BADGE_YOKOSUKA_31_AUG_2018_MIKASA = 2026;
	DCAECPGGPON_BADGE_YOKOSUKA_31_AUG_2018_VERNY = 2027;
	DCAECPGGPON_BADGE_YOKOSUKA_31_AUG_2018_KURIHAMA = 2028;
	DCAECPGGPON_BADGE_YOKOSUKA_1_SEP_2018_MIKASA = 2029;
	DCAECPGGPON_BADGE_YOKOSUKA_1_SEP_2018_VERNY = 2030;
	DCAECPGGPON_BADGE_YOKOSUKA_1_SEP_2018_KURIHAMA = 2031;
	DCAECPGGPON_BADGE_YOKOSUKA_2_SEP_2018_MIKASA = 2032;
	DCAECPGGPON_BADGE_YOKOSUKA_2_SEP_2018_VERNY = 2033;
	DCAECPGGPON_BADGE_YOKOSUKA_2_SEP_2018_KURIHAMA = 2034;
	DCAECPGGPON_BADGE_TOP_BANANA_1 = 2035;
	DCAECPGGPON_BADGE_TOP_BANANA_2 = 2036;
	DCAECPGGPON_BADGE_TOP_BANANA_3 = 2037;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_0 = 2038;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_1 = 2039;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_2 = 2040;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_3 = 2041;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_4 = 2042;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_5 = 2043;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_6 = 2044;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_7 = 2045;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_8 = 2046;
	DCAECPGGPON_BADGE_PARTNER_EVENT_2019_9 = 2047;
	DCAECPGGPON_BADGE_SENTOSA_18_APR_2019 = 2048;
	DCAECPGGPON_BADGE_SENTOSA_19_APR_2019 = 2049;
	DCAECPGGPON_BADGE_SENTOSA_20_APR_2019 = 2050;
	DCAECPGGPON_BADGE_SENTOSA_21_APR_2019 = 2051;
	DCAECPGGPON_BADGE_SENTOSA_22_APR_2019 = 2052;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_00 = 2053;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_01 = 2054;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_02 = 2055;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_03 = 2056;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_04 = 2057;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_05 = 2058;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_06 = 2059;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_07 = 2060;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_08 = 2061;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_09 = 2062;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_10 = 2063;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_11 = 2064;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_12 = 2065;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_13 = 2066;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_14 = 2067;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_15 = 2068;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_16 = 2069;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_17 = 2070;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_18 = 2071;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_19 = 2072;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_20 = 2073;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_21 = 2074;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_22 = 2075;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_23 = 2076;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_24 = 2077;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_25 = 2078;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_26 = 2079;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_27 = 2080;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_28 = 2081;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_29 = 2082;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_30 = 2083;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_31 = 2084;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_32 = 2085;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_33 = 2086;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_34 = 2087;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_35 = 2088;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_36 = 2089;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_37 = 2090;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_38 = 2091;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_39 = 2092;
	DCAECPGGPON_BADGE_CITY_EXPLORER_PASS_40 = 2093;
	DCAECPGGPON_BADGE_AIR_ADVENTURES_OKINAWA_00 = 2094;
	DCAECPGGPON_BADGE_AIR_ADVENTURES_OKINAWA_RELEASE = 2095;
	DCAECPGGPON_BADGE_DYNAMIC_EVENT_MIN = 5000;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_00_NORTH_GENERAL = 5001;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_00_NORTH_EARLYACCESS = 5002;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_00_SOUTH_GENERAL = 5003;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_00_SOUTH_EARLYACCESS = 5004;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_01_NORTH_GENERAL = 5005;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_01_NORTH_EARLYACCESS = 5006;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_01_SOUTH_GENERAL = 5007;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_01_SOUTH_EARLYACCESS = 5008;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_02_NORTH_GENERAL = 5009;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_02_NORTH_EARLYACCESS = 5010;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_02_SOUTH_GENERAL = 5011;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_02_SOUTH_EARLYACCESS = 5012;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_03_NORTH_GENERAL = 5013;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_03_NORTH_EARLYACCESS = 5014;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_03_SOUTH_GENERAL = 5015;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_03_SOUTH_EARLYACCESS = 5016;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_04_NORTH_GENERAL = 5017;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_04_NORTH_EARLYACCESS = 5018;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_04_SOUTH_GENERAL = 5019;
	DCAECPGGPON_BADGE_GOFEST_2019_AMERICAS_DAY_04_SOUTH_EARLYACCESS = 5020;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_00_GENERAL = 5021;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_00_EARLYACCESS = 5022;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_01_GENERAL = 5023;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_01_EARLYACCESS = 5024;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_02_GENERAL = 5025;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_02_EARLYACCESS = 5026;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_03_GENERAL = 5027;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_03_EARLYACCESS = 5028;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_04_GENERAL = 5029;
	DCAECPGGPON_BADGE_GOFEST_2019_EMEA_DAY_04_EARLYACCESS = 5030;
	DCAECPGGPON_BADGE_GOFEST_2019_APAC_DAY_00_GENERAL = 5031;
	DCAECPGGPON_BADGE_GOFEST_2019_APAC_DAY_01_GENERAL = 5032;
	DCAECPGGPON_BADGE_GOFEST_2019_APAC_DAY_02_GENERAL = 5033;
	DCAECPGGPON_BADGE_GOFEST_2019_APAC_DAY_03_GENERAL = 5034;
	DCAECPGGPON_BADGE_GOFEST_2019_APAC_DAY_04_GENERAL = 5035;
	DCAECPGGPON_BADGE_GOFEST_2019_APAC_DAY_05_GENERAL = 5036;
	DCAECPGGPON_BADGE_GOFEST_2019_APAC_DAY_06_GENERAL = 5037;
	DCAECPGGPON_BADGE_GOFEST_2019_APAC_DAY_07_GENERAL = 5038;
	DCAECPGGPON_BADGE_SAFARIZONE_2019_MONTREAL_DAY_00_GENERAL = 5039;
	DCAECPGGPON_BADGE_SAFARIZONE_2019_MONTREAL_DAY_00_EARLYACCESS = 5040;
	DCAECPGGPON_BADGE_SAFARIZONE_2019_MONTREAL_DAY_01_GENERAL = 5041;
	DCAECPGGPON_BADGE_SAFARIZONE_2019_MONTREAL_DAY_01_EARLYACCESS = 5042;
	DCAECPGGPON_BADGE_SAFARIZONE_2019_MONTREAL_DAY_02_GENERAL = 5043;
	DCAECPGGPON_BADGE_SAFARIZONE_2019_MONTREAL_DAY_02_EARLYACCESS = 5044;
	DCAECPGGPON_BADGE_SAFARIZONE_2019_MONTREAL_DAY_03_GENERAL = 5045;
	DCAECPGGPON_BADGE_SAFARIZONE_2019_MONTREAL_DAY_03_EARLYACCESS = 5046;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_STLOUIS_DAY_00_GENERAL = 5047;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_STLOUIS_DAY_00_EARLYACCESS = 5048;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_STLOUIS_DAY_01_GENERAL = 5049;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_STLOUIS_DAY_01_EARLYACCESS = 5050;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_STLOUIS_DAY_02_GENERAL = 5051;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_STLOUIS_DAY_02_EARLYACCESS = 5052;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_STLOUIS_DAY_03_GENERAL = 5053;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_STLOUIS_DAY_03_EARLYACCESS = 5054;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_00_GENERAL = 5055;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_00_EARLYACCESS = 5056;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_01_GENERAL = 5057;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_01_EARLYACCESS = 5058;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_02_GENERAL = 5059;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_02_EARLYACCESS = 5060;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_03_GENERAL = 5061;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_03_EARLYACCESS = 5062;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_00_GENERAL = 5063;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_00_EARLYACCESS = 5064;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_01_GENERAL = 5065;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_01_EARLYACCESS = 5066;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_02_GENERAL = 5067;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_02_EARLYACCESS = 5068;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_03_GENERAL = 5069;
	DCAECPGGPON_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_03_EARLYACCESS = 5070;
	DCAECPGGPON_BADGE_GOFEST_2020_TEST = 5071;
	DCAECPGGPON_BADGE_GOFEST_2020_GLOBAL = 5072;
	DCAECPGGPON_BADGE_GOTOUR_2021_GREEN_TEST = 5073;
	DCAECPGGPON_BADGE_GOTOUR_2021_RED_TEST = 5074;
	DCAECPGGPON_BADGE_GOTOUR_2021_GREEN_GLOBAL = 5075;
	DCAECPGGPON_BADGE_GOTOUR_2021_RED_GLOBAL = 5076;
	DCAECPGGPON_BADGE_GLOBAL_TICKETED_EVENT = 5100;
	DCAECPGGPON_BADGE_EVENT_0001 = 5201;
	DCAECPGGPON_BADGE_EVENT_0002 = 5202;
	DCAECPGGPON_BADGE_EVENT_0003 = 5203;
	DCAECPGGPON_BADGE_EVENT_0004 = 5204;
	DCAECPGGPON_BADGE_EVENT_0005 = 5205;
	DCAECPGGPON_BADGE_EVENT_0006 = 5206;
	DCAECPGGPON_BADGE_EVENT_0007 = 5207;
	DCAECPGGPON_BADGE_EVENT_0008 = 5208;
	DCAECPGGPON_BADGE_EVENT_0009 = 5209;
	DCAECPGGPON_BADGE_EVENT_0010 = 5210;
	DCAECPGGPON_BADGE_EVENT_0011 = 5211;
	DCAECPGGPON_BADGE_EVENT_0012 = 5212;
	DCAECPGGPON_BADGE_EVENT_0013 = 5213;
	DCAECPGGPON_BADGE_EVENT_0014 = 5214;
	DCAECPGGPON_BADGE_EVENT_0015 = 5215;
	DCAECPGGPON_BADGE_EVENT_0016 = 5216;
	DCAECPGGPON_BADGE_EVENT_0017 = 5217;
	DCAECPGGPON_BADGE_EVENT_0018 = 5218;
	DCAECPGGPON_BADGE_EVENT_0019 = 5219;
	DCAECPGGPON_BADGE_EVENT_0020 = 5220;
	DCAECPGGPON_BADGE_EVENT_0021 = 5221;
	DCAECPGGPON_BADGE_EVENT_0022 = 5222;
	DCAECPGGPON_BADGE_EVENT_0023 = 5223;
	DCAECPGGPON_BADGE_EVENT_0024 = 5224;
	DCAECPGGPON_BADGE_EVENT_0025 = 5225;
	DCAECPGGPON_BADGE_EVENT_0026 = 5226;
	DCAECPGGPON_BADGE_EVENT_0027 = 5227;
	DCAECPGGPON_BADGE_EVENT_0028 = 5228;
	DCAECPGGPON_BADGE_EVENT_0029 = 5229;
	DCAECPGGPON_BADGE_EVENT_0030 = 5230;
	DCAECPGGPON_BADGE_LEVEL_40 = 5231;
	DCAECPGGPON_BADGE_GOFEST_2021_TEST = 5232;
	DCAECPGGPON_BADGE_GOFEST_2021_GLOBAL = 5233;
	DCAECPGGPON_BADGE_TRADING_CARD_0001 = 5234;
	DCAECPGGPON_BADGE_TRADING_CARD_0002 = 5235;
	DCAECPGGPON_BADGE_TRADING_CARD_0003 = 5236;
	DCAECPGGPON_BADGE_TRADING_CARD_0004 = 5237;
	DCAECPGGPON_BADGE_TRADING_CARD_0005 = 5238;
	DCAECPGGPON_BADGE_TRADING_CARD_0006 = 5239;
	DCAECPGGPON_BADGE_TRADING_CARD_0007 = 5240;
	DCAECPGGPON_BADGE_TRADING_CARD_0008 = 5241;
	DCAECPGGPON_BADGE_TRADING_CARD_0009 = 5242;
	DCAECPGGPON_BADGE_TRADING_CARD_0010 = 5243;
	DCAECPGGPON_BADGE_GOFEST_2022_TEST = 5244;
	DCAECPGGPON_BADGE_GOFEST_2022_GLOBAL = 5245;
	DCAECPGGPON_BADGE_GOTOUR_2022_GOLD_TEST = 5246;
	DCAECPGGPON_BADGE_GOTOUR_2022_SILVER_TEST = 5247;
	DCAECPGGPON_BADGE_GOTOUR_2022_GOLD_GLOBAL = 5248;
	DCAECPGGPON_BADGE_GOTOUR_2022_SILVER_GLOBAL = 5249;
	DCAECPGGPON_BADGE_GOTOUR_2022_LIVE_A_TEST = 5250;
	DCAECPGGPON_BADGE_GOTOUR_2022_LIVE_A_GLOBAL = 5251;
	DCAECPGGPON_BADGE_GOTOUR_2022_LIVE_B_TEST = 5252;
	DCAECPGGPON_BADGE_GOTOUR_2022_LIVE_B_GLOBAL = 5253;
	DCAECPGGPON_BADGE_EVENT_0031 = 5254;
	DCAECPGGPON_BADGE_EVENT_0032 = 5255;
	DCAECPGGPON_BADGE_EVENT_0033 = 5256;
	DCAECPGGPON_BADGE_EVENT_0034 = 5257;
	DCAECPGGPON_BADGE_EVENT_0035 = 5258;
	DCAECPGGPON_BADGE_EVENT_0036 = 5259;
	DCAECPGGPON_BADGE_EVENT_0037 = 5260;
	DCAECPGGPON_BADGE_EVENT_0038 = 5261;
	DCAECPGGPON_BADGE_EVENT_0039 = 5262;
	DCAECPGGPON_BADGE_EVENT_0040 = 5263;
	DCAECPGGPON_BADGE_EVENT_0041 = 5264;
	DCAECPGGPON_BADGE_EVENT_0042 = 5265;
	DCAECPGGPON_BADGE_EVENT_0043 = 5266;
	DCAECPGGPON_BADGE_EVENT_0044 = 5267;
	DCAECPGGPON_BADGE_EVENT_0045 = 5268;
	DCAECPGGPON_BADGE_EVENT_0046 = 5269;
	DCAECPGGPON_BADGE_EVENT_0047 = 5270;
	DCAECPGGPON_BADGE_EVENT_0048 = 5271;
	DCAECPGGPON_BADGE_EVENT_0049 = 5272;
	DCAECPGGPON_BADGE_EVENT_0050 = 5273;
	DCAECPGGPON_BADGE_EVENT_0051 = 5274;
	DCAECPGGPON_BADGE_EVENT_0052 = 5275;
	DCAECPGGPON_BADGE_EVENT_0053 = 5276;
	DCAECPGGPON_BADGE_EVENT_0054 = 5277;
	DCAECPGGPON_BADGE_EVENT_0055 = 5278;
	DCAECPGGPON_BADGE_EVENT_0056 = 5279;
	DCAECPGGPON_BADGE_EVENT_0057 = 5280;
	DCAECPGGPON_BADGE_EVENT_0058 = 5281;
	DCAECPGGPON_BADGE_EVENT_0059 = 5282;
	DCAECPGGPON_BADGE_EVENT_0060 = 5283;
	DCAECPGGPON_BADGE_EVENT_0061 = 5284;
	DCAECPGGPON_BADGE_EVENT_0062 = 5285;
	DCAECPGGPON_BADGE_SAFARIZONE_2022_SEVILLE_DAY_00_GENERAL = 5286;
	DCAECPGGPON_BADGE_SAFARIZONE_2022_SEVILLE_DAY_00_EARLYACCESS = 5287;
	DCAECPGGPON_BADGE_SAFARIZONE_2022_SEVILLE_DAY_01_GENERAL = 5288;
	DCAECPGGPON_BADGE_SAFARIZONE_2022_SEVILLE_DAY_01_EARLYACCESS = 5289;
	DCAECPGGPON_BADGE_SAFARIZONE_2022_SEVILLE_DAY_02_GENERAL = 5290;
	DCAECPGGPON_BADGE_SAFARIZONE_2022_SEVILLE_DAY_02_EARLYACCESS = 5291;
	DCAECPGGPON_BADGE_SAFARIZONE_2022_SEVILLE_DAY_03_GENERAL = 5292;
	DCAECPGGPON_BADGE_SAFARIZONE_2022_SEVILLE_DAY_03_EARLYACCESS = 5293;
	DCAECPGGPON_DEPRECATED_1 = 5300;
	DCAECPGGPON_DEPRECATED_2 = 5301;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_TEST_GENERAL = 5302;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_TEST_EARLYACCESS = 5303;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_DAY_01_GENERAL = 5304;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_DAY_01_EARLYACCESS = 5305;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_DAY_02_GENERAL = 5306;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_DAY_02_EARLYACCESS = 5307;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_DAY_03_GENERAL = 5308;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_DAY_03_EARLYACCESS = 5309;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_TEST_PARK_MORNING = 5310;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_TEST_PARK_AFTERNOON = 5311;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_TEST_CITY_MORNING = 5312;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_TEST_CITY_AFTERNOON = 5313;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_01_PARK_MORNING = 5314;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_01_PARK_AFTERNOON = 5315;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_01_CITY_MORNING = 5316;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_01_CITY_AFTERNOON = 5317;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_02_PARK_MORNING = 5318;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_02_PARK_AFTERNOON = 5319;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_02_CITY_MORNING = 5320;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_02_CITY_AFTERNOON = 5321;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_03_PARK_MORNING = 5322;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_03_PARK_AFTERNOON = 5323;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_03_CITY_MORNING = 5324;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_DAY_03_CITY_AFTERNOON = 5325;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_TEST_PARK_MORNING = 5326;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_TEST_PARK_AFTERNOON = 5327;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_TEST_CITY_MORNING = 5328;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_TEST_CITY_AFTERNOON = 5329;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_01_PARK_MORNING = 5330;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_01_PARK_AFTERNOON = 5331;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_01_CITY_MORNING = 5332;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_01_CITY_AFTERNOON = 5333;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_02_PARK_MORNING = 5334;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_02_PARK_AFTERNOON = 5335;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_02_CITY_MORNING = 5336;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_02_CITY_AFTERNOON = 5337;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_03_PARK_MORNING = 5338;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_03_PARK_AFTERNOON = 5339;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_03_CITY_MORNING = 5340;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_DAY_03_CITY_AFTERNOON = 5341;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_ADDON_HATCH_TEST = 5342;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_ADDON_HATCH = 5343;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_ADDON_RAID_TEST = 5344;
	DCAECPGGPON_BADGE_GOFEST_2022_BERLIN_ADDON_RAID = 5345;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_ADDON_HATCH_TEST = 5346;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_ADDON_HATCH = 5347;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_ADDON_RAID_TEST = 5348;
	DCAECPGGPON_BADGE_GOFEST_2022_SEATTLE_ADDON_RAID = 5349;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_ADDON_HATCH_TEST = 5350;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_ADDON_HATCH = 5351;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_ADDON_RAID_TEST = 5352;
	DCAECPGGPON_BADGE_GOFEST_2022_SAPPORO_ADDON_RAID = 5353;
}

enum DECNNEMNNKP {
	DECNNEMNNKP_POKEMON_CLASS_NORMAL = 0;
	DECNNEMNNKP_POKEMON_CLASS_LEGENDARY = 1;
	DECNNEMNNKP_POKEMON_CLASS_MYTHIC = 2;
	DECNNEMNNKP_POKEMON_CLASS_ULTRA_BEAST = 3;
}

enum DGHCAOAEEAG {
	DGHCAOAEEAG_FORT_POWER_UP_LEVEL_UNSET = 0;
	DGHCAOAEEAG_FORT_POWER_UP_LEVEL_0 = 1;
	DGHCAOAEEAG_FORT_POWER_UP_LEVEL_1 = 2;
	DGHCAOAEEAG_FORT_POWER_UP_LEVEL_2 = 3;
	DGHCAOAEEAG_FORT_POWER_UP_LEVEL_3 = 4;
}

enum DKGLGEIAEOJ {
	DKGLGEIAEOJ_UNDEFINED_USERNAME_ENTRY_MODE = 0;
	DKGLGEIAEOJ_NEW_USER = 1;
	DKGLGEIAEOJ_CHANGE_BANNED_NAME = 2;
	DKGLGEIAEOJ_EXISTING_USER_CHANGE_NAME = 3;
}

enum DOGJIKDPNLK {
	DOGJIKDPNLK_WASABI_AD_FOUND = 0;
	DOGJIKDPNLK_NO_CAMPAIGNS_FOUND = 1;
	DOGJIKDPNLK_USER_NOT_ELIGIBLE = 2;
}

enum DeviceServiceTelemetryIds {
	DEVICE_SERVICE_TELEMETRY_IDS_UNDEFINED_DEVICE_SERVICE = 0;
	DEVICE_SERVICE_TELEMETRY_IDS_FITNESS = 1;
	DEVICE_SERVICE_TELEMETRY_IDS_SMART_WATCH = 2;
	DEVICE_SERVICE_TELEMETRY_IDS_SFIDA = 3;
	DEVICE_SERVICE_TELEMETRY_IDS_AWARENESS = 4;
	DEVICE_SERVICE_TELEMETRY_IDS_ADVENTURE_SYNC = 5;
	DEVICE_SERVICE_TELEMETRY_IDS_SENSOR = 6;
}

enum EALPMHIPLJK {
	EALPMHIPLJK_SECTION_UNSET = 0;
	EALPMHIPLJK_SECTION_VS_SEEKER = 1;
	EALPMHIPLJK_SECTION_CURR_SEASON = 2;
	EALPMHIPLJK_SECTION_LAST_SEASON = 3;
	EALPMHIPLJK_SECTION_NEARBY = 4;
	EALPMHIPLJK_SECTION_TEAM_LEADERS = 5;
	EALPMHIPLJK_SECTION_QR_CODE = 6;
}

enum ECBJDBHKDAE {
	ECBJDBHKDAE_SPAWN_POINT = 0;
	ECBJDBHKDAE_INCENSE = 1;
	ECBJDBHKDAE_DISK = 2;
	ECBJDBHKDAE_POST_RAID = 3;
	ECBJDBHKDAE_STORY_QUEST = 4;
	ECBJDBHKDAE_QUEST_STAMP_CARD = 5;
	ECBJDBHKDAE_CHALLENGE_QUEST = 6;
	ECBJDBHKDAE_PHOTOBOMB = 7;
	ECBJDBHKDAE_INVASION = 8;
	ECBJDBHKDAE_VS_SEEKER_REWARD = 9;
	ECBJDBHKDAE_TIMED_STORY_QUEST = 10;
	ECBJDBHKDAE_DAILY_BONUS = 11;
	ECBJDBHKDAE_REFERRAL_QUEST = 12;
	ECBJDBHKDAE_TIMED_MINI_COLLECTION_QUEST = 13;
	ECBJDBHKDAE_POWER_UP_POKESTOP = 14;
}

enum EFDCDOBEKEN {
	EFDCDOBEKEN_QUEST_UNSET = 0;
	EFDCDOBEKEN_QUEST_FIRST_CATCH_OF_THE_DAY = 1;
	EFDCDOBEKEN_QUEST_FIRST_POKESTOP_OF_THE_DAY = 2;
	EFDCDOBEKEN_QUEST_MULTI_PART = 3;
	EFDCDOBEKEN_QUEST_CATCH_POKEMON = 4;
	EFDCDOBEKEN_QUEST_SPIN_POKESTOP = 5;
	EFDCDOBEKEN_QUEST_HATCH_EGG = 6;
	EFDCDOBEKEN_QUEST_COMPLETE_GYM_BATTLE = 7;
	EFDCDOBEKEN_QUEST_COMPLETE_RAID_BATTLE = 8;
	EFDCDOBEKEN_QUEST_COMPLETE_QUEST = 9;
	EFDCDOBEKEN_QUEST_TRANSFER_POKEMON = 10;
	EFDCDOBEKEN_QUEST_FAVORITE_POKEMON = 11;
	EFDCDOBEKEN_QUEST_AUTOCOMPLETE = 12;
	EFDCDOBEKEN_QUEST_USE_BERRY_IN_ENCOUNTER = 13;
	EFDCDOBEKEN_QUEST_UPGRADE_POKEMON = 14;
	EFDCDOBEKEN_QUEST_EVOLVE_POKEMON = 15;
	EFDCDOBEKEN_QUEST_LAND_THROW = 16;
	EFDCDOBEKEN_QUEST_GET_BUDDY_CANDY = 17;
	EFDCDOBEKEN_QUEST_BADGE_RANK = 18;
	EFDCDOBEKEN_QUEST_PLAYER_LEVEL = 19;
	EFDCDOBEKEN_QUEST_JOIN_RAID = 20;
	EFDCDOBEKEN_QUEST_COMPLETE_BATTLE = 21;
	EFDCDOBEKEN_QUEST_ADD_FRIEND = 22;
	EFDCDOBEKEN_QUEST_TRADE_POKEMON = 23;
	EFDCDOBEKEN_QUEST_SEND_GIFT = 24;
	EFDCDOBEKEN_QUEST_EVOLVE_INTO_POKEMON = 25;
	EFDCDOBEKEN_QUEST_COMPLETE_COMBAT = 27;
	EFDCDOBEKEN_QUEST_TAKE_SNAPSHOT = 28;
	EFDCDOBEKEN_QUEST_BATTLE_TEAM_ROCKET = 29;
	EFDCDOBEKEN_QUEST_PURIFY_POKEMON = 30;
	EFDCDOBEKEN_QUEST_FIND_TEAM_ROCKET = 31;
	EFDCDOBEKEN_QUEST_FIRST_GRUNT_OF_THE_DAY = 32;
	EFDCDOBEKEN_QUEST_BUDDY_FEED = 33;
	EFDCDOBEKEN_QUEST_BUDDY_EARN_AFFECTION_POINTS = 34;
	EFDCDOBEKEN_QUEST_BUDDY_PET = 35;
	EFDCDOBEKEN_QUEST_BUDDY_LEVEL = 36;
	EFDCDOBEKEN_QUEST_BUDDY_WALK = 37;
	EFDCDOBEKEN_QUEST_BUDDY_YATTA = 38;
	EFDCDOBEKEN_QUEST_USE_INCENSE = 39;
	EFDCDOBEKEN_QUEST_BUDDY_FIND_SOUVENIR = 40;
	EFDCDOBEKEN_QUEST_COLLECT_AS_REWARDS = 41;
	EFDCDOBEKEN_QUEST_WALK = 42;
	EFDCDOBEKEN_QUEST_MEGA_EVOLVE_POKEMON = 43;
	EFDCDOBEKEN_QUEST_GET_STARDUST = 44;
	EFDCDOBEKEN_QUEST_MINI_COLLECTION = 45;
	EFDCDOBEKEN_QUEST_GEOTARGETED_AR_SCAN = 46;
	EFDCDOBEKEN_QUEST_BUDDY_EVOLUTION_WALK = 50;
	EFDCDOBEKEN_QUEST_GBL_RANK = 51;
	EFDCDOBEKEN_QUEST_CHARGE_ATTACK = 53;
	EFDCDOBEKEN_QUEST_CHANGE_POKEMON_FORM = 54;
	EFDCDOBEKEN_QUEST_BATTLE_EVENT_NPC = 55;
	EFDCDOBEKEN_QUEST_EARN_FORT_POWER_UP_POINTS = 56;
	EFDCDOBEKEN_QUEST_TAKE_WILD_SNAPSHOT = 57;
	EFDCDOBEKEN_QUEST_USE_POKEMON_ITEM = 58;
	EFDCDOBEKEN_QUEST_OPEN_GIFT = 59;
	EFDCDOBEKEN_QUEST_EARN_XP = 60;
	EFDCDOBEKEN_QUEST_BATTLE_PLAYER_TEAM_LEADER = 61;
}

enum EHAGMDBOMIL {
	EHAGMDBOMIL_ITEM_TYPE_NONE = 0;
	EHAGMDBOMIL_ITEM_TYPE_POKEBALL = 1;
	EHAGMDBOMIL_ITEM_TYPE_POTION = 2;
	EHAGMDBOMIL_ITEM_TYPE_REVIVE = 3;
	EHAGMDBOMIL_ITEM_TYPE_MAP = 4;
	EHAGMDBOMIL_ITEM_TYPE_BATTLE = 5;
	EHAGMDBOMIL_ITEM_TYPE_FOOD = 6;
	EHAGMDBOMIL_ITEM_TYPE_CAMERA = 7;
	EHAGMDBOMIL_ITEM_TYPE_DISK = 8;
	EHAGMDBOMIL_ITEM_TYPE_INCUBATOR = 9;
	EHAGMDBOMIL_ITEM_TYPE_INCENSE = 10;
	EHAGMDBOMIL_ITEM_TYPE_XP_BOOST = 11;
	EHAGMDBOMIL_ITEM_TYPE_INVENTORY_UPGRADE = 12;
	EHAGMDBOMIL_ITEM_TYPE_EVOLUTION_REQUIREMENT = 13;
	EHAGMDBOMIL_ITEM_TYPE_MOVE_REROLL = 14;
	EHAGMDBOMIL_ITEM_TYPE_CANDY = 15;
	EHAGMDBOMIL_ITEM_TYPE_RAID_TICKET = 16;
	EHAGMDBOMIL_ITEM_TYPE_STARDUST_BOOST = 17;
	EHAGMDBOMIL_ITEM_TYPE_FRIEND_GIFT_BOX = 18;
	EHAGMDBOMIL_ITEM_TYPE_TEAM_CHANGE = 19;
	EHAGMDBOMIL_ITEM_TYPE_ROUTE_MAKER = 20;
	EHAGMDBOMIL_ITEM_TYPE_VS_SEEKER_BATTLE_NOW = 21;
	EHAGMDBOMIL_ITEM_TYPE_INCIDENT_TICKET = 22;
	EHAGMDBOMIL_ITEM_TYPE_GLOBAL_EVENT_TICKET = 23;
	EHAGMDBOMIL_ITEM_TYPE_STICKER_INVENTORY = 24;
	EHAGMDBOMIL_ITEM_TYPE_POSTCARD_INVENTORY = 25;
	EHAGMDBOMIL_ITEM_TYPE_EVENT_TICKET_GIFT = 26;
}

enum ENFPMLCKGFH {
	ENFPMLCKGFH_STORE_UNSET = 0;
	ENFPMLCKGFH_STORE_APPLE = 1;
	ENFPMLCKGFH_STORE_GOOGLE = 2;
	ENFPMLCKGFH_STORE_SAMSUNG = 3;
}

enum FBPAIPJKFHC {
	FBPAIPJKFHC_UNDEFINED_INVASION_EVENT = 0;
	FBPAIPJKFHC_INVASION_NPC_TAP = 1;
	FBPAIPJKFHC_INVASION_BATTLE_STARTED = 2;
	FBPAIPJKFHC_INVASION_BATTLE_FINISHED = 3;
	FBPAIPJKFHC_INVASION_ENCOUNTER_STARTED = 4;
	FBPAIPJKFHC_INVASION_ENCOUNTER_FINISHED = 5;
	FBPAIPJKFHC_INVASION_POKEMON_PURIFIED = 6;
	FBPAIPJKFHC_INVASION_AFTER_POI_EXITED = 7;
	FBPAIPJKFHC_INVASION_RADAR_VIEW_OPENED = 8;
	FBPAIPJKFHC_INVASION_RADAR_VIEW_CLOSED = 9;
	FBPAIPJKFHC_INVASION_RADAR_VIEW_EMPTY = 10;
	FBPAIPJKFHC_INVASION_DECOY_FOUND = 11;
	FBPAIPJKFHC_INVASION_GIOVANNI_FOUND = 12;
	FBPAIPJKFHC_INVASION_BALLOON_TAP = 13;
}

enum FFKJOOMBLDO {
	FFKJOOMBLDO_POKEMON_CATEGORY_UNSET = 0;
	FFKJOOMBLDO_ALL = 1;
	FFKJOOMBLDO_MEGA = 2;
	FFKJOOMBLDO_SHINY = 11;
	FFKJOOMBLDO_LUCKY = 12;
	FFKJOOMBLDO_THREE_STAR = 13;
	FFKJOOMBLDO_FOUR_STAR = 14;
	FFKJOOMBLDO_SHADOW = 15;
	FFKJOOMBLDO_PURIFIED = 16;
	FFKJOOMBLDO_COSTUME = 17;
	FFKJOOMBLDO_SHINY_THREE_STAR = 101;
	FFKJOOMBLDO_SHINY_FOUR_STAR = 102;
}

enum FFMLICPNAGD {
	FFMLICPNAGD_BUDDY_LEVEL_UNSET = 0;
	FFMLICPNAGD_BUDDY_LEVEL_0 = 1;
	FFMLICPNAGD_BUDDY_LEVEL_1 = 2;
	FFMLICPNAGD_BUDDY_LEVEL_2 = 3;
	FFMLICPNAGD_BUDDY_LEVEL_3 = 4;
	FFMLICPNAGD_BUDDY_LEVEL_4 = 5;
	FFMLICPNAGD_BUDDY_LEVEL_5 = 6;
}

enum FLOAAKNKCME {
	FLOAAKNKCME_CREATE_CONTEXT_WILD = 0;
	FLOAAKNKCME_CREATE_CONTEXT_EGG = 1;
	FLOAAKNKCME_CREATE_CONTEXT_EVOLVE = 2;
}

enum FNFFHJKDDJJ {
	FNFFHJKDDJJ_RAID_LEVEL_UNSET = 0;
	FNFFHJKDDJJ_RAID_LEVEL_1 = 1;
	FNFFHJKDDJJ_RAID_LEVEL_2 = 2;
	FNFFHJKDDJJ_RAID_LEVEL_3 = 3;
	FNFFHJKDDJJ_RAID_LEVEL_4 = 4;
	FNFFHJKDDJJ_RAID_LEVEL_5 = 5;
	FNFFHJKDDJJ_RAID_LEVEL_MEGA = 6;
	FNFFHJKDDJJ_RAID_LEVEL_MEGA_5 = 7;
	FNFFHJKDDJJ_RAID_LEVEL_ULTRA_BEAST = 8;
}

enum FOKDNDBFMHJ {
	FOKDNDBFMHJ_MEMENTO_POSTCARD = 0;
}

enum FeatureKind {
	FEATURE_KIND_UNDEFINED = 0;
	FEATURE_KIND_BASIN = 1;
	FEATURE_KIND_CANAL = 2;
	FEATURE_KIND_CEMETERY = 3;
	FEATURE_KIND_CINEMA = 4;
	FEATURE_KIND_COLLEGE = 5;
	FEATURE_KIND_COMMERCIAL = 6;
	FEATURE_KIND_COMMON = 7;
	FEATURE_KIND_DAM = 8;
	FEATURE_KIND_DITCH = 9;
	FEATURE_KIND_DOCK = 10;
	FEATURE_KIND_DRAIN = 11;
	FEATURE_KIND_FARM = 12;
	FEATURE_KIND_FARMLAND = 13;
	FEATURE_KIND_FARMYARD = 14;
	FEATURE_KIND_FOOTWAY = 15;
	FEATURE_KIND_FOREST = 16;
	FEATURE_KIND_GARDEN = 17;
	FEATURE_KIND_GLACIER = 18;
	FEATURE_KIND_GOLF_COURSE = 19;
	FEATURE_KIND_GRASS = 20;
	FEATURE_KIND_HIGHWAY = 21;
	FEATURE_KIND_HOSPITAL = 22;
	FEATURE_KIND_HOTEL = 23;
	FEATURE_KIND_INDUSTRIAL = 24;
	FEATURE_KIND_LAKE = 25;
	FEATURE_KIND_LAND = 26;
	FEATURE_KIND_LIBRARY = 27;
	FEATURE_KIND_MAJOR_ROAD = 28;
	FEATURE_KIND_MEADOW = 29;
	FEATURE_KIND_MINOR_ROAD = 30;
	FEATURE_KIND_NATURE_RESERVE = 31;
	FEATURE_KIND_OCEAN = 32;
	FEATURE_KIND_PARK = 33;
	FEATURE_KIND_PARKING = 34;
	FEATURE_KIND_PATH = 35;
	FEATURE_KIND_PEDESTRIAN = 36;
	FEATURE_KIND_PITCH = 37;
	FEATURE_KIND_PLACE_OF_WORSHIP = 38;
	FEATURE_KIND_PLAYA = 39;
	FEATURE_KIND_PLAYGROUND = 40;
	FEATURE_KIND_QUARRY = 41;
	FEATURE_KIND_RAILWAY = 42;
	FEATURE_KIND_RECREATION_AREA = 43;
	FEATURE_KIND_RESERVOIR = 44;
	FEATURE_KIND_RESIDENTIAL = 45;
	FEATURE_KIND_RETAIL = 46;
	FEATURE_KIND_RIVER = 47;
	FEATURE_KIND_RIVERBANK = 48;
	FEATURE_KIND_RUNWAY = 49;
	FEATURE_KIND_SCHOOL = 50;
	FEATURE_KIND_SPORTS_CENTER = 51;
	FEATURE_KIND_STADIUM = 52;
	FEATURE_KIND_STREAM = 53;
	FEATURE_KIND_TAXIWAY = 54;
	FEATURE_KIND_THEATRE = 55;
	FEATURE_KIND_UNIVERSITY = 56;
	FEATURE_KIND_URBAN_AREA = 57;
	FEATURE_KIND_WATER = 58;
	FEATURE_KIND_WETLAND = 59;
	FEATURE_KIND_WOOD = 60;
	FEATURE_KIND_DEBUG_TILE_OUTLINE = 61;
	FEATURE_KIND_DEBUG_TILE_SURFACE = 62;
	FEATURE_KIND_OTHER = 63;
	FEATURE_KIND_COUNTRY = 64;
	FEATURE_KIND_REGION = 65;
	FEATURE_KIND_CITY = 66;
	FEATURE_KIND_TOWN = 67;
	FEATURE_KIND_AIRPORT = 68;
	FEATURE_KIND_BAY = 69;
	FEATURE_KIND_BOROUGH = 70;
	FEATURE_KIND_FJORD = 71;
	FEATURE_KIND_HAMLET = 72;
	FEATURE_KIND_MILITARY = 73;
	FEATURE_KIND_NATIONAL_PARK = 74;
	FEATURE_KIND_NEIGHBORHOOD = 75;
	FEATURE_KIND_PEAK = 76;
	FEATURE_KIND_PRISON = 77;
	FEATURE_KIND_PROTECTED_AREA = 78;
	FEATURE_KIND_REEF = 79;
	FEATURE_KIND_ROCK = 80;
	FEATURE_KIND_SAND = 81;
	FEATURE_KIND_SCRUB = 82;
	FEATURE_KIND_SEA = 83;
	FEATURE_KIND_STRAIT = 84;
	FEATURE_KIND_VALLEY = 85;
	FEATURE_KIND_VILLAGE = 86;
	FEATURE_KIND_LIGHT_RAIL = 87;
	FEATURE_KIND_PLATFORM = 88;
	FEATURE_KIND_STATION = 89;
	FEATURE_KIND_SUBWAY = 90;
	FEATURE_KIND_ANY = 2000;
}

enum GBCIHGGJMLI {
	GBCIHGGJMLI_BUDDY_CATEGORY_UNSET = 0;
	GBCIHGGJMLI_BUDDY_CATEGORY_FEED = 1;
	GBCIHGGJMLI_BUDDY_CATEGORY_CARE = 2;
	GBCIHGGJMLI_BUDDY_CATEGORY_SNAPSHOT = 3;
	GBCIHGGJMLI_BUDDY_CATEGORY_WALK = 4;
	GBCIHGGJMLI_BUDDY_CATEGORY_BATTLE = 5;
	GBCIHGGJMLI_BUDDY_CATEGORY_EXPLORE = 6;
	GBCIHGGJMLI_BUDDY_CATEGORY_BONUS = 7;
}

enum GDLGLBOBHMI {
	GDLGLBOBHMI_UNKNOWN = 0;
	GDLGLBOBHMI_SELF = 1;
	GDLGLBOBHMI_FRIEND = 2;
	GDLGLBOBHMI_FRIEND_ANONYMIZED = 3;
	GDLGLBOBHMI_FRIEND_ANONYMIZED_FROM_DELETION_OR_UNFRIEND = 4;
}

enum GEHCPPAAPNF {
	GEHCPPAAPNF_POKEMON_BADGE_UNSET = 0;
	GEHCPPAAPNF_POKEMON_BADGE_BEST_BUDDY = 1;
}

enum GKOJINOCBHK {
	GKOJINOCBHK_FAMILY_UNSET = 0;
	GKOJINOCBHK_V0001_FAMILY_BULBASAUR = 1;
	GKOJINOCBHK_V0004_FAMILY_CHARMANDER = 4;
	GKOJINOCBHK_V0007_FAMILY_SQUIRTLE = 7;
	GKOJINOCBHK_V0010_FAMILY_CATERPIE = 10;
	GKOJINOCBHK_V0013_FAMILY_WEEDLE = 13;
	GKOJINOCBHK_V0016_FAMILY_PIDGEY = 16;
	GKOJINOCBHK_V0019_FAMILY_RATTATA = 19;
	GKOJINOCBHK_V0021_FAMILY_SPEAROW = 21;
	GKOJINOCBHK_V0023_FAMILY_EKANS = 23;
	GKOJINOCBHK_V0025_FAMILY_PIKACHU = 25;
	GKOJINOCBHK_V0027_FAMILY_SANDSHREW = 27;
	GKOJINOCBHK_V0029_FAMILY_NIDORAN = 29;
	GKOJINOCBHK_V0032_FAMILY_NIDORAN = 32;
	GKOJINOCBHK_V0035_FAMILY_CLEFAIRY = 35;
	GKOJINOCBHK_V0037_FAMILY_VULPIX = 37;
	GKOJINOCBHK_V0039_FAMILY_JIGGLYPUFF = 39;
	GKOJINOCBHK_V0041_FAMILY_ZUBAT = 41;
	GKOJINOCBHK_V0043_FAMILY_ODDISH = 43;
	GKOJINOCBHK_V0046_FAMILY_PARAS = 46;
	GKOJINOCBHK_V0048_FAMILY_VENONAT = 48;
	GKOJINOCBHK_V0050_FAMILY_DIGLETT = 50;
	GKOJINOCBHK_V0052_FAMILY_MEOWTH = 52;
	GKOJINOCBHK_V0054_FAMILY_PSYDUCK = 54;
	GKOJINOCBHK_V0056_FAMILY_MANKEY = 56;
	GKOJINOCBHK_V0058_FAMILY_GROWLITHE = 58;
	GKOJINOCBHK_V0060_FAMILY_POLIWAG = 60;
	GKOJINOCBHK_V0063_FAMILY_ABRA = 63;
	GKOJINOCBHK_V0066_FAMILY_MACHOP = 66;
	GKOJINOCBHK_V0069_FAMILY_BELLSPROUT = 69;
	GKOJINOCBHK_V0072_FAMILY_TENTACOOL = 72;
	GKOJINOCBHK_V0074_FAMILY_GEODUDE = 74;
	GKOJINOCBHK_V0077_FAMILY_PONYTA = 77;
	GKOJINOCBHK_V0079_FAMILY_SLOWPOKE = 79;
	GKOJINOCBHK_V0081_FAMILY_MAGNEMITE = 81;
	GKOJINOCBHK_V0083_FAMILY_FARFETCHD = 83;
	GKOJINOCBHK_V0084_FAMILY_DODUO = 84;
	GKOJINOCBHK_V0086_FAMILY_SEEL = 86;
	GKOJINOCBHK_V0088_FAMILY_GRIMER = 88;
	GKOJINOCBHK_V0090_FAMILY_SHELLDER = 90;
	GKOJINOCBHK_V0092_FAMILY_GASTLY = 92;
	GKOJINOCBHK_V0095_FAMILY_ONIX = 95;
	GKOJINOCBHK_V0096_FAMILY_DROWZEE = 96;
	GKOJINOCBHK_V0098_FAMILY_KRABBY = 98;
	GKOJINOCBHK_V0100_FAMILY_VOLTORB = 100;
	GKOJINOCBHK_V0102_FAMILY_EXEGGCUTE = 102;
	GKOJINOCBHK_V0104_FAMILY_CUBONE = 104;
	GKOJINOCBHK_V0106_FAMILY_HITMONLEE = 106;
	GKOJINOCBHK_V0107_FAMILY_HITMONCHAN = 107;
	GKOJINOCBHK_V0108_FAMILY_LICKITUNG = 108;
	GKOJINOCBHK_V0109_FAMILY_KOFFING = 109;
	GKOJINOCBHK_V0111_FAMILY_RHYHORN = 111;
	GKOJINOCBHK_V0113_FAMILY_CHANSEY = 113;
	GKOJINOCBHK_V0114_FAMILY_TANGELA = 114;
	GKOJINOCBHK_V0115_FAMILY_KANGASKHAN = 115;
	GKOJINOCBHK_V0116_FAMILY_HORSEA = 116;
	GKOJINOCBHK_V0118_FAMILY_GOLDEEN = 118;
	GKOJINOCBHK_V0120_FAMILY_STARYU = 120;
	GKOJINOCBHK_V0122_FAMILY_MR_MIME = 122;
	GKOJINOCBHK_V0123_FAMILY_SCYTHER = 123;
	GKOJINOCBHK_V0124_FAMILY_JYNX = 124;
	GKOJINOCBHK_V0125_FAMILY_ELECTABUZZ = 125;
	GKOJINOCBHK_V0126_FAMILY_MAGMAR = 126;
	GKOJINOCBHK_V0127_FAMILY_PINSIR = 127;
	GKOJINOCBHK_V0128_FAMILY_TAUROS = 128;
	GKOJINOCBHK_V0129_FAMILY_MAGIKARP = 129;
	GKOJINOCBHK_V0131_FAMILY_LAPRAS = 131;
	GKOJINOCBHK_V0132_FAMILY_DITTO = 132;
	GKOJINOCBHK_V0133_FAMILY_EEVEE = 133;
	GKOJINOCBHK_V0137_FAMILY_PORYGON = 137;
	GKOJINOCBHK_V0138_FAMILY_OMANYTE = 138;
	GKOJINOCBHK_V0140_FAMILY_KABUTO = 140;
	GKOJINOCBHK_V0142_FAMILY_AERODACTYL = 142;
	GKOJINOCBHK_V0143_FAMILY_SNORLAX = 143;
	GKOJINOCBHK_V0144_FAMILY_ARTICUNO = 144;
	GKOJINOCBHK_V0145_FAMILY_ZAPDOS = 145;
	GKOJINOCBHK_V0146_FAMILY_MOLTRES = 146;
	GKOJINOCBHK_V0147_FAMILY_DRATINI = 147;
	GKOJINOCBHK_V0150_FAMILY_MEWTWO = 150;
	GKOJINOCBHK_V0151_FAMILY_MEW = 151;
	GKOJINOCBHK_V0152_FAMILY_CHIKORITA = 152;
	GKOJINOCBHK_V0155_FAMILY_CYNDAQUIL = 155;
	GKOJINOCBHK_V0158_FAMILY_TOTODILE = 158;
	GKOJINOCBHK_V0161_FAMILY_SENTRET = 161;
	GKOJINOCBHK_V0163_FAMILY_HOOTHOOT = 163;
	GKOJINOCBHK_V0165_FAMILY_LEDYBA = 165;
	GKOJINOCBHK_V0167_FAMILY_SPINARAK = 167;
	GKOJINOCBHK_V0170_FAMILY_CHINCHOU = 170;
	GKOJINOCBHK_V0175_FAMILY_TOGEPI = 175;
	GKOJINOCBHK_V0177_FAMILY_NATU = 177;
	GKOJINOCBHK_V0179_FAMILY_MAREEP = 179;
	GKOJINOCBHK_V0183_FAMILY_MARILL = 183;
	GKOJINOCBHK_V0185_FAMILY_SUDOWOODO = 185;
	GKOJINOCBHK_V0187_FAMILY_HOPPIP = 187;
	GKOJINOCBHK_V0190_FAMILY_AIPOM = 190;
	GKOJINOCBHK_V0191_FAMILY_SUNKERN = 191;
	GKOJINOCBHK_V0193_FAMILY_YANMA = 193;
	GKOJINOCBHK_V0194_FAMILY_WOOPER = 194;
	GKOJINOCBHK_V0198_FAMILY_MURKROW = 198;
	GKOJINOCBHK_V0200_FAMILY_MISDREAVUS = 200;
	GKOJINOCBHK_V0201_FAMILY_UNOWN = 201;
	GKOJINOCBHK_V0202_FAMILY_WOBBUFFET = 202;
	GKOJINOCBHK_V0203_FAMILY_GIRAFARIG = 203;
	GKOJINOCBHK_V0204_FAMILY_PINECO = 204;
	GKOJINOCBHK_V0206_FAMILY_DUNSPARCE = 206;
	GKOJINOCBHK_V0207_FAMILY_GLIGAR = 207;
	GKOJINOCBHK_V0209_FAMILY_SNUBBULL = 209;
	GKOJINOCBHK_V0211_FAMILY_QWILFISH = 211;
	GKOJINOCBHK_V0213_FAMILY_SHUCKLE = 213;
	GKOJINOCBHK_V0214_FAMILY_HERACROSS = 214;
	GKOJINOCBHK_V0215_FAMILY_SNEASEL = 215;
	GKOJINOCBHK_V0216_FAMILY_TEDDIURSA = 216;
	GKOJINOCBHK_V0218_FAMILY_SLUGMA = 218;
	GKOJINOCBHK_V0220_FAMILY_SWINUB = 220;
	GKOJINOCBHK_V0222_FAMILY_CORSOLA = 222;
	GKOJINOCBHK_V0223_FAMILY_REMORAID = 223;
	GKOJINOCBHK_V0225_FAMILY_DELIBIRD = 225;
	GKOJINOCBHK_V0226_FAMILY_MANTINE = 226;
	GKOJINOCBHK_V0227_FAMILY_SKARMORY = 227;
	GKOJINOCBHK_V0228_FAMILY_HOUNDOUR = 228;
	GKOJINOCBHK_V0231_FAMILY_PHANPY = 231;
	GKOJINOCBHK_V0234_FAMILY_STANTLER = 234;
	GKOJINOCBHK_V0235_FAMILY_SMEARGLE = 235;
	GKOJINOCBHK_V0236_FAMILY_TYROGUE = 236;
	GKOJINOCBHK_V0241_FAMILY_MILTANK = 241;
	GKOJINOCBHK_V0243_FAMILY_RAIKOU = 243;
	GKOJINOCBHK_V0244_FAMILY_ENTEI = 244;
	GKOJINOCBHK_V0245_FAMILY_SUICUNE = 245;
	GKOJINOCBHK_V0246_FAMILY_LARVITAR = 246;
	GKOJINOCBHK_V0249_FAMILY_LUGIA = 249;
	GKOJINOCBHK_V0250_FAMILY_HO_OH = 250;
	GKOJINOCBHK_V0251_FAMILY_CELEBI = 251;
	GKOJINOCBHK_V0252_FAMILY_TREECKO = 252;
	GKOJINOCBHK_V0255_FAMILY_TORCHIC = 255;
	GKOJINOCBHK_V0258_FAMILY_MUDKIP = 258;
	GKOJINOCBHK_V0261_FAMILY_POOCHYENA = 261;
	GKOJINOCBHK_V0263_FAMILY_ZIGZAGOON = 263;
	GKOJINOCBHK_V0265_FAMILY_WURMPLE = 265;
	GKOJINOCBHK_V0270_FAMILY_LOTAD = 270;
	GKOJINOCBHK_V0273_FAMILY_SEEDOT = 273;
	GKOJINOCBHK_V0276_FAMILY_TAILLOW = 276;
	GKOJINOCBHK_V0278_FAMILY_WINGULL = 278;
	GKOJINOCBHK_V0280_FAMILY_RALTS = 280;
	GKOJINOCBHK_V0283_FAMILY_SURSKIT = 283;
	GKOJINOCBHK_V0285_FAMILY_SHROOMISH = 285;
	GKOJINOCBHK_V0287_FAMILY_SLAKOTH = 287;
	GKOJINOCBHK_V0290_FAMILY_NINCADA = 290;
	GKOJINOCBHK_V0293_FAMILY_WHISMUR = 293;
	GKOJINOCBHK_V0296_FAMILY_MAKUHITA = 296;
	GKOJINOCBHK_V0299_FAMILY_NOSEPASS = 299;
	GKOJINOCBHK_V0300_FAMILY_SKITTY = 300;
	GKOJINOCBHK_V0302_FAMILY_SABLEYE = 302;
	GKOJINOCBHK_V0303_FAMILY_MAWILE = 303;
	GKOJINOCBHK_V0304_FAMILY_ARON = 304;
	GKOJINOCBHK_V0307_FAMILY_MEDITITE = 307;
	GKOJINOCBHK_V0309_FAMILY_ELECTRIKE = 309;
	GKOJINOCBHK_V0311_FAMILY_PLUSLE = 311;
	GKOJINOCBHK_V0312_FAMILY_MINUN = 312;
	GKOJINOCBHK_V0313_FAMILY_VOLBEAT = 313;
	GKOJINOCBHK_V0314_FAMILY_ILLUMISE = 314;
	GKOJINOCBHK_V0315_FAMILY_ROSELIA = 315;
	GKOJINOCBHK_V0316_FAMILY_GULPIN = 316;
	GKOJINOCBHK_V0318_FAMILY_CARVANHA = 318;
	GKOJINOCBHK_V0320_FAMILY_WAILMER = 320;
	GKOJINOCBHK_V0322_FAMILY_NUMEL = 322;
	GKOJINOCBHK_V0324_FAMILY_TORKOAL = 324;
	GKOJINOCBHK_V0325_FAMILY_SPOINK = 325;
	GKOJINOCBHK_V0327_FAMILY_SPINDA = 327;
	GKOJINOCBHK_V0328_FAMILY_TRAPINCH = 328;
	GKOJINOCBHK_V0331_FAMILY_CACNEA = 331;
	GKOJINOCBHK_V0333_FAMILY_SWABLU = 333;
	GKOJINOCBHK_V0335_FAMILY_ZANGOOSE = 335;
	GKOJINOCBHK_V0336_FAMILY_SEVIPER = 336;
	GKOJINOCBHK_V0337_FAMILY_LUNATONE = 337;
	GKOJINOCBHK_V0338_FAMILY_SOLROCK = 338;
	GKOJINOCBHK_V0339_FAMILY_BARBOACH = 339;
	GKOJINOCBHK_V0341_FAMILY_CORPHISH = 341;
	GKOJINOCBHK_V0343_FAMILY_BALTOY = 343;
	GKOJINOCBHK_V0345_FAMILY_LILEEP = 345;
	GKOJINOCBHK_V0347_FAMILY_ANORITH = 347;
	GKOJINOCBHK_V0349_FAMILY_FEEBAS = 349;
	GKOJINOCBHK_V0351_FAMILY_CASTFORM = 351;
	GKOJINOCBHK_V0352_FAMILY_KECLEON = 352;
	GKOJINOCBHK_V0353_FAMILY_SHUPPET = 353;
	GKOJINOCBHK_V0355_FAMILY_DUSKULL = 355;
	GKOJINOCBHK_V0357_FAMILY_TROPIUS = 357;
	GKOJINOCBHK_V0358_FAMILY_CHIMECHO = 358;
	GKOJINOCBHK_V0359_FAMILY_ABSOL = 359;
	GKOJINOCBHK_V0361_FAMILY_SNORUNT = 361;
	GKOJINOCBHK_V0363_FAMILY_SPHEAL = 363;
	GKOJINOCBHK_V0366_FAMILY_CLAMPERL = 366;
	GKOJINOCBHK_V0369_FAMILY_RELICANTH = 369;
	GKOJINOCBHK_V0370_FAMILY_LUVDISC = 370;
	GKOJINOCBHK_V0371_FAMILY_BAGON = 371;
	GKOJINOCBHK_V0374_FAMILY_BELDUM = 374;
	GKOJINOCBHK_V0377_FAMILY_REGIROCK = 377;
	GKOJINOCBHK_V0378_FAMILY_REGICE = 378;
	GKOJINOCBHK_V0379_FAMILY_REGISTEEL = 379;
	GKOJINOCBHK_V0380_FAMILY_LATIAS = 380;
	GKOJINOCBHK_V0381_FAMILY_LATIOS = 381;
	GKOJINOCBHK_V0382_FAMILY_KYOGRE = 382;
	GKOJINOCBHK_V0383_FAMILY_GROUDON = 383;
	GKOJINOCBHK_V0384_FAMILY_RAYQUAZA = 384;
	GKOJINOCBHK_V0385_FAMILY_JIRACHI = 385;
	GKOJINOCBHK_V0386_FAMILY_DEOXYS = 386;
	GKOJINOCBHK_V0387_FAMILY_TURTWIG = 387;
	GKOJINOCBHK_V0390_FAMILY_CHIMCHAR = 390;
	GKOJINOCBHK_V0393_FAMILY_PIPLUP = 393;
	GKOJINOCBHK_V0396_FAMILY_STARLY = 396;
	GKOJINOCBHK_V0399_FAMILY_BIDOOF = 399;
	GKOJINOCBHK_V0401_FAMILY_KRICKETOT = 401;
	GKOJINOCBHK_V0403_FAMILY_SHINX = 403;
	GKOJINOCBHK_V0408_FAMILY_CRANIDOS = 408;
	GKOJINOCBHK_V0410_FAMILY_SHIELDON = 410;
	GKOJINOCBHK_V0412_FAMILY_BURMY = 412;
	GKOJINOCBHK_V0415_FAMILY_COMBEE = 415;
	GKOJINOCBHK_V0417_FAMILY_PACHIRISU = 417;
	GKOJINOCBHK_V0418_FAMILY_BUIZEL = 418;
	GKOJINOCBHK_V0420_FAMILY_CHERUBI = 420;
	GKOJINOCBHK_V0422_FAMILY_SHELLOS = 422;
	GKOJINOCBHK_V0425_FAMILY_DRIFLOON = 425;
	GKOJINOCBHK_V0427_FAMILY_BUNEARY = 427;
	GKOJINOCBHK_V0431_FAMILY_GLAMEOW = 431;
	GKOJINOCBHK_V0434_FAMILY_STUNKY = 434;
	GKOJINOCBHK_V0436_FAMILY_BRONZOR = 436;
	GKOJINOCBHK_V0441_FAMILY_CHATOT = 441;
	GKOJINOCBHK_V0442_FAMILY_SPIRITOMB = 442;
	GKOJINOCBHK_V0443_FAMILY_GIBLE = 443;
	GKOJINOCBHK_V0448_FAMILY_LUCARIO = 448;
	GKOJINOCBHK_V0449_FAMILY_HIPPOPOTAS = 449;
	GKOJINOCBHK_V0451_FAMILY_SKORUPI = 451;
	GKOJINOCBHK_V0453_FAMILY_CROAGUNK = 453;
	GKOJINOCBHK_V0455_FAMILY_CARNIVINE = 455;
	GKOJINOCBHK_V0456_FAMILY_FINNEON = 456;
	GKOJINOCBHK_V0459_FAMILY_SNOVER = 459;
	GKOJINOCBHK_V0479_FAMILY_ROTOM = 479;
	GKOJINOCBHK_V0480_FAMILY_UXIE = 480;
	GKOJINOCBHK_V0481_FAMILY_MESPRIT = 481;
	GKOJINOCBHK_V0482_FAMILY_AZELF = 482;
	GKOJINOCBHK_V0483_FAMILY_DIALGA = 483;
	GKOJINOCBHK_V0484_FAMILY_PALKIA = 484;
	GKOJINOCBHK_V0485_FAMILY_HEATRAN = 485;
	GKOJINOCBHK_V0486_FAMILY_REGIGIGAS = 486;
	GKOJINOCBHK_V0487_FAMILY_GIRATINA = 487;
	GKOJINOCBHK_V0488_FAMILY_CRESSELIA = 488;
	GKOJINOCBHK_V0489_FAMILY_PHIONE = 489;
	GKOJINOCBHK_V0490_FAMILY_MANAPHY = 490;
	GKOJINOCBHK_V0491_FAMILY_DARKRAI = 491;
	GKOJINOCBHK_V0492_FAMILY_SHAYMIN = 492;
	GKOJINOCBHK_V0493_FAMILY_ARCEUS = 493;
	GKOJINOCBHK_V0494_FAMILY_VICTINI = 494;
	GKOJINOCBHK_V0495_FAMILY_SNIVY = 495;
	GKOJINOCBHK_V0498_FAMILY_TEPIG = 498;
	GKOJINOCBHK_V0501_FAMILY_OSHAWOTT = 501;
	GKOJINOCBHK_V0504_FAMILY_PATRAT = 504;
	GKOJINOCBHK_V0506_FAMILY_LILLIPUP = 506;
	GKOJINOCBHK_V0509_FAMILY_PURRLOIN = 509;
	GKOJINOCBHK_V0511_FAMILY_PANSAGE = 511;
	GKOJINOCBHK_V0513_FAMILY_PANSEAR = 513;
	GKOJINOCBHK_V0515_FAMILY_PANPOUR = 515;
	GKOJINOCBHK_V0517_FAMILY_MUNNA = 517;
	GKOJINOCBHK_V0519_FAMILY_PIDOVE = 519;
	GKOJINOCBHK_V0522_FAMILY_BLITZLE = 522;
	GKOJINOCBHK_V0524_FAMILY_ROGGENROLA = 524;
	GKOJINOCBHK_V0527_FAMILY_WOOBAT = 527;
	GKOJINOCBHK_V0529_FAMILY_DRILBUR = 529;
	GKOJINOCBHK_V0531_FAMILY_AUDINO = 531;
	GKOJINOCBHK_V0532_FAMILY_TIMBURR = 532;
	GKOJINOCBHK_V0535_FAMILY_TYMPOLE = 535;
	GKOJINOCBHK_V0538_FAMILY_THROH = 538;
	GKOJINOCBHK_V0539_FAMILY_SAWK = 539;
	GKOJINOCBHK_V0540_FAMILY_SEWADDLE = 540;
	GKOJINOCBHK_V0543_FAMILY_VENIPEDE = 543;
	GKOJINOCBHK_V0546_FAMILY_COTTONEE = 546;
	GKOJINOCBHK_V0548_FAMILY_PETILIL = 548;
	GKOJINOCBHK_V0550_FAMILY_BASCULIN = 550;
	GKOJINOCBHK_V0551_FAMILY_SANDILE = 551;
	GKOJINOCBHK_V0554_FAMILY_DARUMAKA = 554;
	GKOJINOCBHK_V0556_FAMILY_MARACTUS = 556;
	GKOJINOCBHK_V0557_FAMILY_DWEBBLE = 557;
	GKOJINOCBHK_V0559_FAMILY_SCRAGGY = 559;
	GKOJINOCBHK_V0561_FAMILY_SIGILYPH = 561;
	GKOJINOCBHK_V0562_FAMILY_YAMASK = 562;
	GKOJINOCBHK_V0564_FAMILY_TIRTOUGA = 564;
	GKOJINOCBHK_V0566_FAMILY_ARCHEN = 566;
	GKOJINOCBHK_V0568_FAMILY_TRUBBISH = 568;
	GKOJINOCBHK_V0570_FAMILY_ZORUA = 570;
	GKOJINOCBHK_V0572_FAMILY_MINCCINO = 572;
	GKOJINOCBHK_V0574_FAMILY_GOTHITA = 574;
	GKOJINOCBHK_V0577_FAMILY_SOLOSIS = 577;
	GKOJINOCBHK_V0580_FAMILY_DUCKLETT = 580;
	GKOJINOCBHK_V0582_FAMILY_VANILLITE = 582;
	GKOJINOCBHK_V0585_FAMILY_DEERLING = 585;
	GKOJINOCBHK_V0587_FAMILY_EMOLGA = 587;
	GKOJINOCBHK_V0588_FAMILY_KARRABLAST = 588;
	GKOJINOCBHK_V0590_FAMILY_FOONGUS = 590;
	GKOJINOCBHK_V0592_FAMILY_FRILLISH = 592;
	GKOJINOCBHK_V0594_FAMILY_ALOMOMOLA = 594;
	GKOJINOCBHK_V0595_FAMILY_JOLTIK = 595;
	GKOJINOCBHK_V0597_FAMILY_FERROSEED = 597;
	GKOJINOCBHK_V0599_FAMILY_KLINK = 599;
	GKOJINOCBHK_V0602_FAMILY_TYNAMO = 602;
	GKOJINOCBHK_V0605_FAMILY_ELGYEM = 605;
	GKOJINOCBHK_V0607_FAMILY_LITWICK = 607;
	GKOJINOCBHK_V0610_FAMILY_AXEW = 610;
	GKOJINOCBHK_V0613_FAMILY_CUBCHOO = 613;
	GKOJINOCBHK_V0615_FAMILY_CRYOGONAL = 615;
	GKOJINOCBHK_V0616_FAMILY_SHELMET = 616;
	GKOJINOCBHK_V0618_FAMILY_STUNFISK = 618;
	GKOJINOCBHK_V0619_FAMILY_MIENFOO = 619;
	GKOJINOCBHK_V0621_FAMILY_DRUDDIGON = 621;
	GKOJINOCBHK_V0622_FAMILY_GOLETT = 622;
	GKOJINOCBHK_V0624_FAMILY_PAWNIARD = 624;
	GKOJINOCBHK_V0626_FAMILY_BOUFFALANT = 626;
	GKOJINOCBHK_V0627_FAMILY_RUFFLET = 627;
	GKOJINOCBHK_V0629_FAMILY_VULLABY = 629;
	GKOJINOCBHK_V0631_FAMILY_HEATMOR = 631;
	GKOJINOCBHK_V0632_FAMILY_DURANT = 632;
	GKOJINOCBHK_V0633_FAMILY_DEINO = 633;
	GKOJINOCBHK_V0636_FAMILY_LARVESTA = 636;
	GKOJINOCBHK_V0638_FAMILY_COBALION = 638;
	GKOJINOCBHK_V0639_FAMILY_TERRAKION = 639;
	GKOJINOCBHK_V0640_FAMILY_VIRIZION = 640;
	GKOJINOCBHK_V0641_FAMILY_TORNADUS = 641;
	GKOJINOCBHK_V0642_FAMILY_THUNDURUS = 642;
	GKOJINOCBHK_V0643_FAMILY_RESHIRAM = 643;
	GKOJINOCBHK_V0644_FAMILY_ZEKROM = 644;
	GKOJINOCBHK_V0645_FAMILY_LANDORUS = 645;
	GKOJINOCBHK_V0646_FAMILY_KYUREM = 646;
	GKOJINOCBHK_V0647_FAMILY_KELDEO = 647;
	GKOJINOCBHK_V0648_FAMILY_MELOETTA = 648;
	GKOJINOCBHK_V0649_FAMILY_GENESECT = 649;
	GKOJINOCBHK_V0650_FAMILY_CHESPIN = 650;
	GKOJINOCBHK_V0653_FAMILY_FENNEKIN = 653;
	GKOJINOCBHK_V0656_FAMILY_FROAKIE = 656;
	GKOJINOCBHK_V0659_FAMILY_BUNNELBY = 659;
	GKOJINOCBHK_V0661_FAMILY_FLETCHLING = 661;
	GKOJINOCBHK_V0664_FAMILY_SCATTERBUG = 664;
	GKOJINOCBHK_V0667_FAMILY_LITLEO = 667;
	GKOJINOCBHK_V0669_FAMILY_FLABEBE = 669;
	GKOJINOCBHK_V0672_FAMILY_SKIDDO = 672;
	GKOJINOCBHK_V0674_FAMILY_PANCHAM = 674;
	GKOJINOCBHK_V0676_FAMILY_FURFROU = 676;
	GKOJINOCBHK_V0677_FAMILY_ESPURR = 677;
	GKOJINOCBHK_V0679_FAMILY_HONEDGE = 679;
	GKOJINOCBHK_V0682_FAMILY_SPRITZEE = 682;
	GKOJINOCBHK_V0684_FAMILY_SWIRLIX = 684;
	GKOJINOCBHK_V0686_FAMILY_INKAY = 686;
	GKOJINOCBHK_V0688_FAMILY_BINACLE = 688;
	GKOJINOCBHK_V0690_FAMILY_SKRELP = 690;
	GKOJINOCBHK_V0692_FAMILY_CLAUNCHER = 692;
	GKOJINOCBHK_V0694_FAMILY_HELIOPTILE = 694;
	GKOJINOCBHK_V0696_FAMILY_TYRUNT = 696;
	GKOJINOCBHK_V0698_FAMILY_AMAURA = 698;
	GKOJINOCBHK_V0701_FAMILY_HAWLUCHA = 701;
	GKOJINOCBHK_V0702_FAMILY_DEDENNE = 702;
	GKOJINOCBHK_V0703_FAMILY_CARBINK = 703;
	GKOJINOCBHK_V0704_FAMILY_GOOMY = 704;
	GKOJINOCBHK_V0707_FAMILY_KLEFKI = 707;
	GKOJINOCBHK_V0708_FAMILY_PHANTUMP = 708;
	GKOJINOCBHK_V0710_FAMILY_PUMPKABOO = 710;
	GKOJINOCBHK_V0712_FAMILY_BERGMITE = 712;
	GKOJINOCBHK_V0714_FAMILY_NOIBAT = 714;
	GKOJINOCBHK_V0716_FAMILY_XERNEAS = 716;
	GKOJINOCBHK_V0717_FAMILY_YVELTAL = 717;
	GKOJINOCBHK_V0718_FAMILY_ZYGARDE = 718;
	GKOJINOCBHK_V0719_FAMILY_DIANCIE = 719;
	GKOJINOCBHK_V0720_FAMILY_HOOPA = 720;
	GKOJINOCBHK_V0721_FAMILY_VOLCANION = 721;
	GKOJINOCBHK_V0722_FAMILY_ROWLET = 722;
	GKOJINOCBHK_V0725_FAMILY_LITTEN = 725;
	GKOJINOCBHK_V0728_FAMILY_POPPLIO = 728;
	GKOJINOCBHK_V0731_FAMILY_PIKIPEK = 731;
	GKOJINOCBHK_V0734_FAMILY_YUNGOOS = 734;
	GKOJINOCBHK_V0736_FAMILY_GRUBBIN = 736;
	GKOJINOCBHK_V0739_FAMILY_CRABRAWLER = 739;
	GKOJINOCBHK_V0741_FAMILY_ORICORIO = 741;
	GKOJINOCBHK_V0742_FAMILY_CUTIEFLY = 742;
	GKOJINOCBHK_V0744_FAMILY_ROCKRUFF = 744;
	GKOJINOCBHK_V0746_FAMILY_WISHIWASHI = 746;
	GKOJINOCBHK_V0747_FAMILY_MAREANIE = 747;
	GKOJINOCBHK_V0749_FAMILY_MUDBRAY = 749;
	GKOJINOCBHK_V0751_FAMILY_DEWPIDER = 751;
	GKOJINOCBHK_V0753_FAMILY_FOMANTIS = 753;
	GKOJINOCBHK_V0755_FAMILY_MORELULL = 755;
	GKOJINOCBHK_V0757_FAMILY_SALANDIT = 757;
	GKOJINOCBHK_V0759_FAMILY_STUFFUL = 759;
	GKOJINOCBHK_V0761_FAMILY_BOUNSWEET = 761;
	GKOJINOCBHK_V0764_FAMILY_COMFEY = 764;
	GKOJINOCBHK_V0765_FAMILY_ORANGURU = 765;
	GKOJINOCBHK_V0766_FAMILY_PASSIMIAN = 766;
	GKOJINOCBHK_V0767_FAMILY_WIMPOD = 767;
	GKOJINOCBHK_V0769_FAMILY_SANDYGAST = 769;
	GKOJINOCBHK_V0771_FAMILY_PYUKUMUKU = 771;
	GKOJINOCBHK_V0772_FAMILY_TYPE_NULL = 772;
	GKOJINOCBHK_V0774_FAMILY_MINIOR = 774;
	GKOJINOCBHK_V0775_FAMILY_KOMALA = 775;
	GKOJINOCBHK_V0776_FAMILY_TURTONATOR = 776;
	GKOJINOCBHK_V0777_FAMILY_TOGEDEMARU = 777;
	GKOJINOCBHK_V0778_FAMILY_MIMIKYU = 778;
	GKOJINOCBHK_V0779_FAMILY_BRUXISH = 779;
	GKOJINOCBHK_V0780_FAMILY_DRAMPA = 780;
	GKOJINOCBHK_V0781_FAMILY_DHELMISE = 781;
	GKOJINOCBHK_V0782_FAMILY_JANGMO_O = 782;
	GKOJINOCBHK_V0785_FAMILY_TAPU_KOKO = 785;
	GKOJINOCBHK_V0786_FAMILY_TAPU_LELE = 786;
	GKOJINOCBHK_V0787_FAMILY_TAPU_BULU = 787;
	GKOJINOCBHK_V0788_FAMILY_TAPU_FINI = 788;
	GKOJINOCBHK_V0789_FAMILY_COSMOG = 789;
	GKOJINOCBHK_V0793_FAMILY_NIHILEGO = 793;
	GKOJINOCBHK_V0794_FAMILY_BUZZWOLE = 794;
	GKOJINOCBHK_V0795_FAMILY_PHEROMOSA = 795;
	GKOJINOCBHK_V0796_FAMILY_XURKITREE = 796;
	GKOJINOCBHK_V0797_FAMILY_CELESTEELA = 797;
	GKOJINOCBHK_V0798_FAMILY_KARTANA = 798;
	GKOJINOCBHK_V0799_FAMILY_GUZZLORD = 799;
	GKOJINOCBHK_V0800_FAMILY_NECROZMA = 800;
	GKOJINOCBHK_V0801_FAMILY_MAGEARNA = 801;
	GKOJINOCBHK_V0802_FAMILY_MARSHADOW = 802;
	GKOJINOCBHK_V0803_FAMILY_POIPOLE = 803;
	GKOJINOCBHK_V0805_FAMILY_STAKATAKA = 805;
	GKOJINOCBHK_V0806_FAMILY_BLACEPHALON = 806;
	GKOJINOCBHK_V0807_FAMILY_ZERAORA = 807;
	GKOJINOCBHK_V0808_FAMILY_MELTAN = 808;
	GKOJINOCBHK_V0810_FAMILY_GROOKEY = 810;
	GKOJINOCBHK_V0813_FAMILY_SCORBUNNY = 813;
	GKOJINOCBHK_V0816_FAMILY_SOBBLE = 816;
	GKOJINOCBHK_V0819_FAMILY_SKWOVET = 819;
	GKOJINOCBHK_V0821_FAMILY_ROOKIDEE = 821;
	GKOJINOCBHK_V0824_FAMILY_BLIPBUG = 824;
	GKOJINOCBHK_V0827_FAMILY_NICKIT = 827;
	GKOJINOCBHK_V0829_FAMILY_GOSSIFLEUR = 829;
	GKOJINOCBHK_V0831_FAMILY_WOOLOO = 831;
	GKOJINOCBHK_V0833_FAMILY_CHEWTLE = 833;
	GKOJINOCBHK_V0835_FAMILY_YAMPER = 835;
	GKOJINOCBHK_V0837_FAMILY_ROLYCOLY = 837;
	GKOJINOCBHK_V0840_FAMILY_APPLIN = 840;
	GKOJINOCBHK_V0843_FAMILY_SILICOBRA = 843;
	GKOJINOCBHK_V0845_FAMILY_CRAMORANT = 845;
	GKOJINOCBHK_V0846_FAMILY_ARROKUDA = 846;
	GKOJINOCBHK_V0848_FAMILY_TOXEL = 848;
	GKOJINOCBHK_V0850_FAMILY_SIZZLIPEDE = 850;
	GKOJINOCBHK_V0852_FAMILY_CLOBBOPUS = 852;
	GKOJINOCBHK_V0854_FAMILY_SINISTEA = 854;
	GKOJINOCBHK_V0856_FAMILY_HATENNA = 856;
	GKOJINOCBHK_V0859_FAMILY_IMPIDIMP = 859;
	GKOJINOCBHK_V0868_FAMILY_MILCERY = 868;
	GKOJINOCBHK_V0870_FAMILY_FALINKS = 870;
	GKOJINOCBHK_V0871_FAMILY_PINCURCHIN = 871;
	GKOJINOCBHK_V0872_FAMILY_SNOM = 872;
	GKOJINOCBHK_V0874_FAMILY_STONJOURNER = 874;
	GKOJINOCBHK_V0875_FAMILY_EISCUE = 875;
	GKOJINOCBHK_V0876_FAMILY_INDEEDEE = 876;
	GKOJINOCBHK_V0877_FAMILY_MORPEKO = 877;
	GKOJINOCBHK_V0878_FAMILY_CUFANT = 878;
	GKOJINOCBHK_V0880_FAMILY_DRACOZOLT = 880;
	GKOJINOCBHK_V0881_FAMILY_ARCTOZOLT = 881;
	GKOJINOCBHK_V0882_FAMILY_DRACOVISH = 882;
	GKOJINOCBHK_V0883_FAMILY_ARCTOVISH = 883;
	GKOJINOCBHK_V0884_FAMILY_DURALUDON = 884;
	GKOJINOCBHK_V0885_FAMILY_DREEPY = 885;
	GKOJINOCBHK_V0888_FAMILY_ZACIAN = 888;
	GKOJINOCBHK_V0889_FAMILY_ZAMAZENTA = 889;
	GKOJINOCBHK_V0890_FAMILY_ETERNATUS = 890;
	GKOJINOCBHK_V0891_FAMILY_KUBFU = 891;
	GKOJINOCBHK_V0893_FAMILY_ZARUDE = 893;
	GKOJINOCBHK_V0894_FAMILY_REGIELEKI = 894;
	GKOJINOCBHK_V0895_FAMILY_REGIDRAGO = 895;
	GKOJINOCBHK_V0896_FAMILY_GLASTRIER = 896;
	GKOJINOCBHK_V0897_FAMILY_SPECTRIER = 897;
	GKOJINOCBHK_V0898_FAMILY_CALYREX = 898;
	GKOJINOCBHK_V0905_FAMILY_ENAMORUS = 905;
}

enum GMICNCPLCMG {
	GMICNCPLCMG_TEMP_EVOLUTION_UNSET = 0;
	GMICNCPLCMG_TEMP_EVOLUTION_MEGA = 1;
	GMICNCPLCMG_TEMP_EVOLUTION_MEGA_X = 2;
	GMICNCPLCMG_TEMP_EVOLUTION_MEGA_Y = 3;
}

enum GMPALGCFLJJ {
	GMPALGCFLJJ_ACTIVITY_UNKNOWN = 0;
	GMPALGCFLJJ_ACTIVITY_CATCH_POKEMON = 1;
	GMPALGCFLJJ_ACTIVITY_CATCH_LEGEND_POKEMON = 2;
	GMPALGCFLJJ_ACTIVITY_FLEE_POKEMON = 3;
	GMPALGCFLJJ_ACTIVITY_DEFEAT_FORT = 4;
	GMPALGCFLJJ_ACTIVITY_EVOLVE_POKEMON = 5;
	GMPALGCFLJJ_ACTIVITY_HATCH_EGG = 6;
	GMPALGCFLJJ_ACTIVITY_WALK_KM = 7;
	GMPALGCFLJJ_ACTIVITY_POKEDEX_ENTRY_NEW = 8;
	GMPALGCFLJJ_ACTIVITY_CATCH_FIRST_THROW = 9;
	GMPALGCFLJJ_ACTIVITY_CATCH_NICE_THROW = 10;
	GMPALGCFLJJ_ACTIVITY_CATCH_GREAT_THROW = 11;
	GMPALGCFLJJ_ACTIVITY_CATCH_EXCELLENT_THROW = 12;
	GMPALGCFLJJ_ACTIVITY_CATCH_CURVEBALL = 13;
	GMPALGCFLJJ_ACTIVITY_CATCH_FIRST_CATCH_OF_DAY = 14;
	GMPALGCFLJJ_ACTIVITY_CATCH_MILESTONE = 15;
	GMPALGCFLJJ_ACTIVITY_TRAIN_POKEMON = 16;
	GMPALGCFLJJ_ACTIVITY_SEARCH_FORT = 17;
	GMPALGCFLJJ_ACTIVITY_RELEASE_POKEMON = 18;
	GMPALGCFLJJ_ACTIVITY_HATCH_EGG_SMALL_BONUS = 19;
	GMPALGCFLJJ_ACTIVITY_HATCH_EGG_MEDIUM_BONUS = 20;
	GMPALGCFLJJ_ACTIVITY_HATCH_EGG_LARGE_BONUS = 21;
	GMPALGCFLJJ_ACTIVITY_DEFEAT_GYM_DEFENDER = 22;
	GMPALGCFLJJ_ACTIVITY_DEFEAT_GYM_LEADER = 23;
	GMPALGCFLJJ_ACTIVITY_CATCH_FIRST_CATCH_STREAK_BONUS = 24;
	GMPALGCFLJJ_ACTIVITY_SEARCH_FORT_FIRST_OF_THE_DAY = 25;
	GMPALGCFLJJ_ACTIVITY_SEARCH_FORT_STREAK_BONUS = 26;
	GMPALGCFLJJ_ACTIVITY_DEFEAT_RAID_POKEMON = 27;
	GMPALGCFLJJ_ACTIVITY_FEED_BERRY = 28;
	GMPALGCFLJJ_ACTIVITY_SEARCH_GYM = 29;
	GMPALGCFLJJ_ACTIVITY_NEW_POKESTOP = 30;
	GMPALGCFLJJ_ACTIVITY_GYM_BATTLE_LOSS = 31;
	GMPALGCFLJJ_ACTIVITY_CATCH_AR_PLUS_BONUS = 32;
	GMPALGCFLJJ_ACTIVITY_CATCH_QUEST_POKEMON_ENCOUNTER = 33;
	GMPALGCFLJJ_ACTIVITY_FRIENDSHIP_LEVEL_UP_0 = 35;
	GMPALGCFLJJ_ACTIVITY_FRIENDSHIP_LEVEL_UP_1 = 36;
	GMPALGCFLJJ_ACTIVITY_FRIENDSHIP_LEVEL_UP_2 = 37;
	GMPALGCFLJJ_ACTIVITY_FRIENDSHIP_LEVEL_UP_3 = 38;
	GMPALGCFLJJ_ACTIVITY_FRIENDSHIP_LEVEL_UP_4 = 39;
	GMPALGCFLJJ_ACTIVITY_SEND_GIFT = 40;
	GMPALGCFLJJ_ACTIVITY_SHARE_EX_RAID_PASS = 41;
	GMPALGCFLJJ_ACTIVITY_RAID_LEVEL_1_ADDITIONAL_XP = 42;
	GMPALGCFLJJ_ACTIVITY_RAID_LEVEL_2_ADDITIONAL_XP = 43;
	GMPALGCFLJJ_ACTIVITY_RAID_LEVEL_3_ADDITIONAL_XP = 44;
	GMPALGCFLJJ_ACTIVITY_RAID_LEVEL_4_ADDITIONAL_XP = 45;
	GMPALGCFLJJ_ACTIVITY_RAID_LEVEL_5_ADDITIONAL_XP = 46;
	GMPALGCFLJJ_ACTIVITY_HATCH_EGG_SHADOW = 47;
	GMPALGCFLJJ_ACTIVITY_HATCH_EGG_GIFT = 48;
	GMPALGCFLJJ_ACTIVITY_REMOTE_DEFEAT_RAID_POKEMON = 49;
	GMPALGCFLJJ_ACTIVITY_REMOTE_RAID_LEVEL_1_ADDITIONAL_XP = 50;
	GMPALGCFLJJ_ACTIVITY_REMOTE_RAID_LEVEL_2_ADDITIONAL_XP = 51;
	GMPALGCFLJJ_ACTIVITY_REMOTE_RAID_LEVEL_3_ADDITIONAL_XP = 52;
	GMPALGCFLJJ_ACTIVITY_REMOTE_RAID_LEVEL_4_ADDITIONAL_XP = 53;
	GMPALGCFLJJ_ACTIVITY_REMOTE_RAID_LEVEL_5_ADDITIONAL_XP = 54;
	GMPALGCFLJJ_ACTIVITY_CHANGE_POKEMON_FORM = 55;
	GMPALGCFLJJ_ACTIVITY_EARN_BUDDY_WALKED_CANDY = 56;
}

enum GNFPCFLMPJF {
	GNFPCFLMPJF_DEFAULT = 0;
	GNFPCFLMPJF_IODINE_1_8 = 1;
	GNFPCFLMPJF_NIA_IAP_4 = 2;
}

enum GNPJGEDGNAF {
	GNPJGEDGNAF_INCUBATOR_UNSET = 0;
	GNPJGEDGNAF_INCUBATOR_DISTANCE = 1;
}

enum GenericClickTelemetryIds {
	GENERIC_CLICK_TELEMETRY_IDS_UNDEFINED_GENERIC_EVENT = 0;
	GENERIC_CLICK_TELEMETRY_IDS_SPEED_WARNING_SHOW = 1;
	GENERIC_CLICK_TELEMETRY_IDS_SPEED_WARNING_PASSENGER = 2;
	GENERIC_CLICK_TELEMETRY_IDS_CACHE_RESET_CLICKED = 3;
	GENERIC_CLICK_TELEMETRY_IDS_REFUND_PAGE_OPENED = 4;
}

enum HBIFOKJCJED {
	HBIFOKJCJED_SHARE_EX_RAID_PASS_UNSET = 0;
	HBIFOKJCJED_SHARE_EX_RAID_PASS_SUCCESS = 1;
	HBIFOKJCJED_ERROR_FRIEND_ALREADY_INVITED_TO_SAME_RAID = 2;
	HBIFOKJCJED_ERROR_EX_RAID_PASS_ALREADY_SHARED = 3;
	HBIFOKJCJED_ERROR_FRIEND_ALREADY_HAS_SHARED_EX_PASS_IN_INVENTORY = 4;
	HBIFOKJCJED_ERROR_TOO_LOW_FRIENDSHIP_LEVEL = 5;
	HBIFOKJCJED_ERROR_FRIEND_NOT_FOUND = 6;
	HBIFOKJCJED_ERROR_EX_RAID_ALREADY_STARTED = 7;
	HBIFOKJCJED_ERROR_EX_RAID_INVALID = 8;
	HBIFOKJCJED_ERROR_EX_RAID_PASS_NOT_FOUND = 9;
	HBIFOKJCJED_ERROR_UNKNOWN = 10;
	HBIFOKJCJED_ERROR_FRIEND_NOT_ELIGIBLE = 11;
}

enum HNFFCOIBALF {
	HNFFCOIBALF_UNDEFINED_EVENT = 0;
	HNFFCOIBALF_CLICKED_COMBAT_HUB_BUTTON = 1;
}

enum HPALNMAGNBA {
	HPALNMAGNBA_UNDEFINED_SOURCE = 0;
	HPALNMAGNBA_INVITE_PAGE = 1;
	HPALNMAGNBA_ADDRESS_BOOK = 2;
}

enum IDJMLGDHNHI {
	IDJMLGDHNHI_POKEMON_TYPE_NONE = 0;
	IDJMLGDHNHI_POKEMON_TYPE_NORMAL = 1;
	IDJMLGDHNHI_POKEMON_TYPE_FIGHTING = 2;
	IDJMLGDHNHI_POKEMON_TYPE_FLYING = 3;
	IDJMLGDHNHI_POKEMON_TYPE_POISON = 4;
	IDJMLGDHNHI_POKEMON_TYPE_GROUND = 5;
	IDJMLGDHNHI_POKEMON_TYPE_ROCK = 6;
	IDJMLGDHNHI_POKEMON_TYPE_BUG = 7;
	IDJMLGDHNHI_POKEMON_TYPE_GHOST = 8;
	IDJMLGDHNHI_POKEMON_TYPE_STEEL = 9;
	IDJMLGDHNHI_POKEMON_TYPE_FIRE = 10;
	IDJMLGDHNHI_POKEMON_TYPE_WATER = 11;
	IDJMLGDHNHI_POKEMON_TYPE_GRASS = 12;
	IDJMLGDHNHI_POKEMON_TYPE_ELECTRIC = 13;
	IDJMLGDHNHI_POKEMON_TYPE_PSYCHIC = 14;
	IDJMLGDHNHI_POKEMON_TYPE_ICE = 15;
	IDJMLGDHNHI_POKEMON_TYPE_DRAGON = 16;
	IDJMLGDHNHI_POKEMON_TYPE_DARK = 17;
	IDJMLGDHNHI_POKEMON_TYPE_FAIRY = 18;
}

enum IdentityProvider {
	IDENTITY_PROVIDER_UNSET_IDENTITY_PROVIDER = 0;
	IDENTITY_PROVIDER_GOOGLE = 1;
	IDENTITY_PROVIDER_PTC = 2;
	IDENTITY_PROVIDER_FACEBOOK = 3;
	IDENTITY_PROVIDER_BACKGROUND = 4;
	IDENTITY_PROVIDER_INTERNAL = 5;
	IDENTITY_PROVIDER_SFIDA = 6;
	IDENTITY_PROVIDER_SUPER_AWESOME = 7;
	IDENTITY_PROVIDER_DEVELOPER = 8;
	IDENTITY_PROVIDER_SHARED_SECRET = 9;
	IDENTITY_PROVIDER_POSEIDON = 10;
	IDENTITY_PROVIDER_NINTENDO = 11;
	IDENTITY_PROVIDER_APPLE = 12;
}

enum InvitationType {
	INVITATION_TYPE_INVITATION_TYPE_UNSET = 0;
	INVITATION_TYPE_INVITATION_TYPE_CODE = 1;
	INVITATION_TYPE_INVITATION_TYPE_FACEBOOK = 2;
	INVITATION_TYPE_INVITATION_TYPE_SERVER_REQUEST = 3;
	INVITATION_TYPE_INVITATION_TYPE_NIANTIC_SOCIAL_GRAPH = 4;
	INVITATION_TYPE_INVITATION_TYPE_ADDRESS_BOOK_IMPORT = 5;
}

enum ItemUseTelemetryIds {
	ITEM_USE_TELEMETRY_IDS_UNDEFINED_ITEM_EVENT = 0;
	ITEM_USE_TELEMETRY_IDS_USE_ITEM = 1;
	ITEM_USE_TELEMETRY_IDS_RECYCLE_ITEM = 2;
	ITEM_USE_TELEMETRY_IDS_UPDATE_ITEM_EQUIPPED = 3;
}

enum JACGNJEMAKN {
	JACGNJEMAKN_FREE = 0;
	JACGNJEMAKN_PREMIUM = 1;
}

enum JIIAGLOABPO {
	JIIAGLOABPO_EGG_SLOT_DEFAULT = 0;
	JIIAGLOABPO_EGG_SLOT_SPECIAL = 1;
}

enum JKPLNFIDCOE {
	JKPLNFIDCOE_AD_FEEDBACK_LIKE_REASON_INVALID = 0;
	JKPLNFIDCOE_AD_FEEDBACK_LIKE_REASON_CATEGORY = 1;
	JKPLNFIDCOE_AD_FEEDBACK_LIKE_REASON_SEE_MORE = 2;
	JKPLNFIDCOE_AD_FEEDBACK_LIKE_REASON_MORE_SPONSORED_GIFTS = 3;
	JKPLNFIDCOE_AD_FEEDBACK_LIKE_REASON_OTHER = 4;
}

enum JOFACALMFCP {
	JOFACALMFCP_FORT_POWER_UP_LEVEL_REWARD_UNSET = 0;
	JOFACALMFCP_FORT_POWER_UP_LEVEL_REWARD_BUDDY_BONUS_HEART = 1;
	JOFACALMFCP_FORT_POWER_UP_REWARD_BONUS_ITEM_ON_SPIN = 2;
	JOFACALMFCP_FORT_POWER_UP_REWARD_BONUS_SPAWN = 3;
	JOFACALMFCP_FORT_POWER_UP_REWARD_BONUS_RAID_POKEBALLS = 4;
}

enum KBLOHLCKEDL {
	KBLOHLCKEDL_UNDEFINED_REFERRAL_EVENT = 0;
	KBLOHLCKEDL_OPEN_INVITE_PAGE = 1;
	KBLOHLCKEDL_TAP_SHARE_CODE = 2;
	KBLOHLCKEDL_TAP_COPY_CODE = 3;
	KBLOHLCKEDL_TAP_HAVE_REFERRAL_CODE = 4;
	KBLOHLCKEDL_INPUT_CODE = 5;
	KBLOHLCKEDL_INPUT_CODE_SUCCESS = 6;
	KBLOHLCKEDL_MILESTONE_REWARD_CLAIMED = 7;
	KBLOHLCKEDL_OPEN_APP_THROUGH_DEEP_LINK = 8;
}

enum KCMPDPEOJBB {
	KCMPDPEOJBB_METHOD_UNSET = 0;
	KCMPDPEOJBB_GET_PLAYER = 2;
	KCMPDPEOJBB_GET_HOLOHOLO_INVENTORY = 4;
	KCMPDPEOJBB_DOWNLOAD_SETTINGS = 5;
	KCMPDPEOJBB_DOWNLOAD_ITEM_TEMPLATES = 6;
	KCMPDPEOJBB_DOWNLOAD_REMOTE_CONFIG_VERSION = 7;
	KCMPDPEOJBB_REGISTER_BACKGROUND_DEVICE = 8;
	KCMPDPEOJBB_GET_PLAYER_DAY = 9;
	KCMPDPEOJBB_ACKNOWLEDGE_PUNISHMENT = 10;
	KCMPDPEOJBB_GET_SERVER_TIME = 11;
	KCMPDPEOJBB_GET_LOCAL_TIME = 12;
	KCMPDPEOJBB_FORT_SEARCH = 101;
	KCMPDPEOJBB_ENCOUNTER = 102;
	KCMPDPEOJBB_CATCH_POKEMON = 103;
	KCMPDPEOJBB_FORT_DETAILS = 104;
	KCMPDPEOJBB_GET_MAP_OBJECTS = 106;
	KCMPDPEOJBB_FORT_DEPLOY_POKEMON = 110;
	KCMPDPEOJBB_FORT_RECALL_POKEMON = 111;
	KCMPDPEOJBB_RELEASE_POKEMON = 112;
	KCMPDPEOJBB_USE_ITEM_POTION = 113;
	KCMPDPEOJBB_USE_ITEM_CAPTURE = 114;
	KCMPDPEOJBB_USE_ITEM_FLEE = 115;
	KCMPDPEOJBB_USE_ITEM_REVIVE = 116;
	KCMPDPEOJBB_GET_PLAYER_PROFILE = 121;
	KCMPDPEOJBB_EVOLVE_POKEMON = 125;
	KCMPDPEOJBB_GET_HATCHED_EGGS = 126;
	KCMPDPEOJBB_ENCOUNTER_TUTORIAL_COMPLETE = 127;
	KCMPDPEOJBB_LEVEL_UP_REWARDS = 128;
	KCMPDPEOJBB_CHECK_AWARDED_BADGES = 129;
	KCMPDPEOJBB_RECYCLE_INVENTORY_ITEM = 137;
	KCMPDPEOJBB_COLLECT_DAILY_BONUS = 138;
	KCMPDPEOJBB_USE_ITEM_XP_BOOST = 139;
	KCMPDPEOJBB_USE_ITEM_EGG_INCUBATOR = 140;
	KCMPDPEOJBB_USE_INCENSE = 141;
	KCMPDPEOJBB_GET_INCENSE_POKEMON = 142;
	KCMPDPEOJBB_INCENSE_ENCOUNTER = 143;
	KCMPDPEOJBB_ADD_FORT_MODIFIER = 144;
	KCMPDPEOJBB_DISK_ENCOUNTER = 145;
	KCMPDPEOJBB_UPGRADE_POKEMON = 147;
	KCMPDPEOJBB_SET_FAVORITE_POKEMON = 148;
	KCMPDPEOJBB_NICKNAME_POKEMON = 149;
	KCMPDPEOJBB_EQUIP_BADGE = 150;
	KCMPDPEOJBB_SET_CONTACT_SETTINGS = 151;
	KCMPDPEOJBB_SET_BUDDY_POKEMON = 152;
	KCMPDPEOJBB_GET_BUDDY_WALKED = 153;
	KCMPDPEOJBB_USE_ITEM_ENCOUNTER = 154;
	KCMPDPEOJBB_GYM_DEPLOY = 155;
	KCMPDPEOJBB_GYM_GET_INFO = 156;
	KCMPDPEOJBB_GYM_START_SESSION = 157;
	KCMPDPEOJBB_GYM_BATTLE_ATTACK = 158;
	KCMPDPEOJBB_JOIN_LOBBY = 159;
	KCMPDPEOJBB_LEAVE_LOBBY = 160;
	KCMPDPEOJBB_SET_LOBBY_VISIBILITY = 161;
	KCMPDPEOJBB_SET_LOBBY_POKEMON = 162;
	KCMPDPEOJBB_GET_RAID_DETAILS = 163;
	KCMPDPEOJBB_GYM_FEED_POKEMON = 164;
	KCMPDPEOJBB_START_RAID_BATTLE = 165;
	KCMPDPEOJBB_ATTACK_RAID = 166;
	KCMPDPEOJBB_AWARD_POKECOIN = 167;
	KCMPDPEOJBB_USE_ITEM_STARDUST_BOOST = 168;
	KCMPDPEOJBB_REASSIGN_PLAYER = 169;
	KCMPDPEOJBB_REDEEM_POI_PASSCODE = 170;
	KCMPDPEOJBB_CONVERT_CANDY_TO_XL_CANDY = 171;
	KCMPDPEOJBB_IS_SKU_AVAILABLE = 172;
	KCMPDPEOJBB_GET_ASSET_DIGEST = 300;
	KCMPDPEOJBB_GET_DOWNLOAD_URLS = 301;
	KCMPDPEOJBB_GET_ASSET_VERSION = 302;
	KCMPDPEOJBB_CLAIM_CODENAME = 403;
	KCMPDPEOJBB_SET_AVATAR = 404;
	KCMPDPEOJBB_SET_PLAYER_TEAM = 405;
	KCMPDPEOJBB_MARK_TUTORIAL_COMPLETE = 406;
	KCMPDPEOJBB_UPDATE_PERFORMANCE_METRICS = 407;
	KCMPDPEOJBB_CHECK_CHALLENGE = 600;
	KCMPDPEOJBB_VERIFY_CHALLENGE = 601;
	KCMPDPEOJBB_ECHO = 666;
	KCMPDPEOJBB_SFIDA_REGISTRATION = 800;
	KCMPDPEOJBB_SFIDA_ACTION_LOG = 801;
	KCMPDPEOJBB_SFIDA_CERTIFICATION = 802;
	KCMPDPEOJBB_SFIDA_UPDATE = 803;
	KCMPDPEOJBB_SFIDA_ACTION = 804;
	KCMPDPEOJBB_SFIDA_DOWSER = 805;
	KCMPDPEOJBB_SFIDA_CAPTURE = 806;
	KCMPDPEOJBB_LIST_AVATAR_CUSTOMIZATIONS = 807;
	KCMPDPEOJBB_SET_AVATAR_ITEM_AS_VIEWED = 808;
	KCMPDPEOJBB_GET_INBOX = 809;
	KCMPDPEOJBB_LIST_GYM_BADGES = 811;
	KCMPDPEOJBB_GET_GYM_BADGE_DETAILS = 812;
	KCMPDPEOJBB_USE_ITEM_MOVE_REROLL = 813;
	KCMPDPEOJBB_USE_ITEM_RARE_CANDY = 814;
	KCMPDPEOJBB_AWARD_FREE_RAID_TICKET = 815;
	KCMPDPEOJBB_FETCH_ALL_NEWS = 816;
	KCMPDPEOJBB_MARK_READ_NEWS_ARTICLE = 817;
	KCMPDPEOJBB_GET_PLAYER_DISPLAY_INFO = 818;
	KCMPDPEOJBB_BELUGA_TRANSACTION_START = 819;
	KCMPDPEOJBB_BELUGA_TRANSACTION_COMPLETE = 820;
	KCMPDPEOJBB_SFIDA_ASSOCIATE = 822;
	KCMPDPEOJBB_SFIDA_CHECK_PAIRING = 823;
	KCMPDPEOJBB_SFIDA_DISASSOCIATE = 824;
	KCMPDPEOJBB_WAINA_SUBMIT_SLEEP_DATA = 826;
	KCMPDPEOJBB_GET_NEW_QUESTS = 900;
	KCMPDPEOJBB_GET_QUEST_DETAILS = 901;
	KCMPDPEOJBB_COMPLETE_QUEST = 902;
	KCMPDPEOJBB_REMOVE_QUEST = 903;
	KCMPDPEOJBB_QUEST_ENCOUNTER = 904;
	KCMPDPEOJBB_COMPLETE_QUEST_STAMP_CARD = 905;
	KCMPDPEOJBB_PROGRESS_QUEST = 906;
	KCMPDPEOJBB_START_QUEST_INCIDENT = 907;
	KCMPDPEOJBB_READ_QUEST_DIALOG = 908;
	KCMPDPEOJBB_SEND_GIFT = 950;
	KCMPDPEOJBB_OPEN_GIFT = 951;
	KCMPDPEOJBB_GIFT_DETAILS = 952;
	KCMPDPEOJBB_DELETE_GIFT = 953;
	KCMPDPEOJBB_SAVE_PLAYER_SNAPSHOT = 954;
	KCMPDPEOJBB_GET_FRIENDSHIP_MILESTONE_REWARDS = 955;
	KCMPDPEOJBB_CHECK_SEND_GIFT = 956;
	KCMPDPEOJBB_SET_FRIEND_NICKNAME = 957;
	KCMPDPEOJBB_DELETE_GIFT_FROM_INVENTORY = 958;
	KCMPDPEOJBB_SAVE_SOCIAL_PLAYER_SETTINGS = 959;
	KCMPDPEOJBB_SHARE_EX_RAID_PASS = 960;
	KCMPDPEOJBB_CHECK_SHARE_EX_RAID_PASS = 961;
	KCMPDPEOJBB_DECLINE_SHARED_EX_RAID_PASS = 962;
	KCMPDPEOJBB_OPEN_TRADING = 970;
	KCMPDPEOJBB_UPDATE_TRADING = 971;
	KCMPDPEOJBB_CONFIRM_TRADING = 972;
	KCMPDPEOJBB_CANCEL_TRADING = 973;
	KCMPDPEOJBB_GET_TRADING = 974;
	KCMPDPEOJBB_GET_FITNESS_REWARDS = 980;
	KCMPDPEOJBB_GET_COMBAT_PLAYER_PROFILE = 990;
	KCMPDPEOJBB_GENERATE_COMBAT_CHALLENGE_ID = 991;
	KCMPDPEOJBB_CREATE_COMBAT_CHALLENGE = 992;
	KCMPDPEOJBB_OPEN_COMBAT_CHALLENGE = 993;
	KCMPDPEOJBB_GET_COMBAT_CHALLENGE = 994;
	KCMPDPEOJBB_ACCEPT_COMBAT_CHALLENGE = 995;
	KCMPDPEOJBB_DECLINE_COMBAT_CHALLENGE = 996;
	KCMPDPEOJBB_CANCEL_COMBAT_CHALLENGE = 997;
	KCMPDPEOJBB_SUBMIT_COMBAT_CHALLENGE_POKEMONS = 998;
	KCMPDPEOJBB_SAVE_COMBAT_PLAYER_PREFERENCES = 999;
	KCMPDPEOJBB_OPEN_COMBAT_SESSION = 1000;
	KCMPDPEOJBB_UPDATE_COMBAT = 1001;
	KCMPDPEOJBB_QUIT_COMBAT = 1002;
	KCMPDPEOJBB_GET_COMBAT_RESULTS = 1003;
	KCMPDPEOJBB_UNLOCK_SPECIAL_MOVE = 1004;
	KCMPDPEOJBB_GET_NPC_COMBAT_REWARDS = 1005;
	KCMPDPEOJBB_COMBAT_FRIEND_REQUEST = 1006;
	KCMPDPEOJBB_OPEN_NPC_COMBAT_SESSION = 1007;
	KCMPDPEOJBB_START_TUTORIAL_ACTION = 1008;
	KCMPDPEOJBB_GET_TUTORIAL_EGG_ACTION = 1009;
	KCMPDPEOJBB_SEND_PROBE = 1020;
	KCMPDPEOJBB_PROBE_DATA = 1021;
	KCMPDPEOJBB_COMBAT_DATA = 1022;
	KCMPDPEOJBB_COMBAT_CHALLENGE_DATA = 1023;
	KCMPDPEOJBB_CHECK_PHOTOBOMB = 1101;
	KCMPDPEOJBB_CONFIRM_PHOTOBOMB = 1102;
	KCMPDPEOJBB_GET_PHOTOBOMB = 1103;
	KCMPDPEOJBB_ENCOUNTER_PHOTOBOMB = 1104;
	KCMPDPEOJBB_GET_SIGNED_GMAP_URL_DEPRECATED = 1105;
	KCMPDPEOJBB_CHANGE_TEAM = 1106;
	KCMPDPEOJBB_GET_WEB_TOKEN = 1107;
	KCMPDPEOJBB_COMPLETE_SNAPSHOT_SESSION = 1110;
	KCMPDPEOJBB_COMPLETE_WILD_SNAPSHOT_SESSION = 1111;
	KCMPDPEOJBB_START_INCIDENT = 1200;
	KCMPDPEOJBB_INVASION_COMPLETE_DIALOGUE = 1201;
	KCMPDPEOJBB_INVASION_OPEN_COMBAT_SESSION = 1202;
	KCMPDPEOJBB_INVASION_BATTLE_UPDATE = 1203;
	KCMPDPEOJBB_INVASION_ENCOUNTER = 1204;
	KCMPDPEOJBB_PURIFY_POKEMON = 1205;
	KCMPDPEOJBB_GET_ROCKET_BALLOON = 1206;
	KCMPDPEOJBB_START_ROCKET_BALLOON_INCIDENT = 1207;
	KCMPDPEOJBB_VS_SEEKER_START_MATCHMAKING = 1300;
	KCMPDPEOJBB_CANCEL_MATCHMAKING = 1301;
	KCMPDPEOJBB_GET_MATCHMAKING_STATUS = 1302;
	KCMPDPEOJBB_COMPLETE_VS_SEEKER_AND_RESTART_CHARGING = 1303;
	KCMPDPEOJBB_GET_VS_SEEKER_STATUS = 1304;
	KCMPDPEOJBB_COMPLETE_COMBAT_COMPETITIVE_SEASON_ACTION = 1305;
	KCMPDPEOJBB_CLAIM_VS_SEEKER_REWARDS = 1306;
	KCMPDPEOJBB_VS_SEEKER_REWARD_ENCOUNTER = 1307;
	KCMPDPEOJBB_ACTIVATE_VS_SEEKER = 1308;
	KCMPDPEOJBB_GET_BUDDY_MAP = 1350;
	KCMPDPEOJBB_GET_BUDDY_STATS = 1351;
	KCMPDPEOJBB_FEED_BUDDY = 1352;
	KCMPDPEOJBB_OPEN_BUDDY_GIFT = 1353;
	KCMPDPEOJBB_PET_BUDDY = 1354;
	KCMPDPEOJBB_GET_BUDDY_HISTORY = 1355;
	KCMPDPEOJBB_UPDATE_ROUTE_DRAFT = 1400;
	KCMPDPEOJBB_GET_MAP_FORTS = 1401;
	KCMPDPEOJBB_SUBMIT_ROUTE_DRAFT = 1402;
	KCMPDPEOJBB_GET_PUBLISHED_ROUTES = 1403;
	KCMPDPEOJBB_START_ROUTE = 1404;
	KCMPDPEOJBB_GET_ROUTES = 1405;
	KCMPDPEOJBB_PROGRESS_ROUTE = 1406;
	KCMPDPEOJBB_PROCESS_ROUTE_WAYPOINT_INTERACTION = 1407;
	KCMPDPEOJBB_PROCESS_ROUTE_TAPPABLE = 1408;
	KCMPDPEOJBB_LIST_ROUTE_BADGES = 1409;
	KCMPDPEOJBB_CANCEL_ROUTE = 1410;
	KCMPDPEOJBB_LIST_ROUTE_STAMPS = 1411;
	KCMPDPEOJBB_CREATE_BUDDY_MUTLIPLAYER_SESSION = 1456;
	KCMPDPEOJBB_JOIN_BUDDY_MULTIPLAYER_SESSION = 1457;
	KCMPDPEOJBB_LEAVE_BUDDY_MULTIPLAYER_SESSION = 1458;
	KCMPDPEOJBB_GET_TODAY_VIEW = 1501;
	KCMPDPEOJBB_MEGA_EVOLVE_POKEMON = 1502;
	KCMPDPEOJBB_REMOTE_GIFT_PING = 1503;
	KCMPDPEOJBB_SEND_RAID_INVITATION = 1504;
	KCMPDPEOJBB_GET_DAILY_ENCOUNTER = 1601;
	KCMPDPEOJBB_DAILY_ENCOUNTER = 1602;
	KCMPDPEOJBB_OPEN_SPONSORED_GIFT = 1650;
	KCMPDPEOJBB_SPONSORED_GIFT_REPORT_INTERACTION = 1651;
	KCMPDPEOJBB_SAVE_PLAYER_PREFERENCES = 1652;
	KCMPDPEOJBB_PROFANITY_CHECK = 1653;
	KCMPDPEOJBB_GET_TIMED_GROUP_CHALLENGE = 1700;
	KCMPDPEOJBB_GET_NINTENDO_ACCOUNT = 1710;
	KCMPDPEOJBB_UNLINK_NINTENDO_ACCOUNT = 1711;
	KCMPDPEOJBB_GET_NINTENDO_OAUTH2_URL = 1712;
	KCMPDPEOJBB_TRANSFER_TO_POKEMON_HOME = 1713;
	KCMPDPEOJBB_REPORT_AD_FEEDBACK = 1716;
	KCMPDPEOJBB_CREATE_POKEMON_TAG = 1717;
	KCMPDPEOJBB_DELETE_POKEMON_TAG = 1718;
	KCMPDPEOJBB_EDIT_POKEMON_TAG = 1719;
	KCMPDPEOJBB_SET_POKEMON_TAGS_FOR_POKEMON = 1720;
	KCMPDPEOJBB_GET_POKEMON_TAGS = 1721;
	KCMPDPEOJBB_CHANGE_POKEMON_FORM = 1722;
	KCMPDPEOJBB_CHOOSE_EVENT_VARIANT = 1723;
	KCMPDPEOJBB_GET_REFERRAL_CODE = 1800;
	KCMPDPEOJBB_ADD_REFERRER = 1801;
	KCMPDPEOJBB_SEND_FRIEND_INVITE_VIA_REFERRAL_CODE = 1802;
	KCMPDPEOJBB_GET_MILESTONES = 1803;
	KCMPDPEOJBB_MARK_MILESTONES_AS_VIEWED = 1804;
	KCMPDPEOJBB_GET_MILESTONES_PREVIEW = 1805;
	KCMPDPEOJBB_COMPLETE_MILESTONE = 1806;
	KCMPDPEOJBB_GET_GEOFENCED_AD = 1820;
	KCMPDPEOJBB_POWER_UP_POKESTOP_ENCOUNTER = 1900;
	KCMPDPEOJBB_CREATE_POSTCARD = 1910;
	KCMPDPEOJBB_UPDATE_POSTCARD = 1911;
	KCMPDPEOJBB_DELETE_POSTCARD = 1912;
	KCMPDPEOJBB_GET_MEMENTO_LIST = 1913;
	KCMPDPEOJBB_UPLOAD_RAID_CLIENT_LOG = 1914;
	KCMPDPEOJBB_SKIP_ENTER_REFERRAL_CODE = 1915;
	KCMPDPEOJBB_UPLOAD_COMBAT_CLIENT_LOG = 1916;
	KCMPDPEOJBB_COMBAT_SYNC_SERVER_OFFSET = 1917;
	KCMPDPEOJBB_CHECK_GIFTING_ELIGIBILITY = 2000;
	KCMPDPEOJBB_REDEEM_TICKET_GIFT_FOR_FRIEND = 2001;
}

enum KDEFEFGCANM {
	KDEFEFGCANM_IAP_CATEGORY_NONE = 0;
	KDEFEFGCANM_IAP_CATEGORY_BUNDLE = 1;
	KDEFEFGCANM_IAP_CATEGORY_ITEMS = 2;
	KDEFEFGCANM_IAP_CATEGORY_UPGRADES = 3;
	KDEFEFGCANM_IAP_CATEGORY_POKECOINS = 4;
	KDEFEFGCANM_IAP_CATEGORY_AVATAR = 5;
	KDEFEFGCANM_IAP_CATEGORY_AVATAR_STORE_LINK = 6;
	KDEFEFGCANM_IAP_CATEGORY_TEAM_CHANGE = 7;
	KDEFEFGCANM_IAP_CATEGORY_ROUTE_MAKER = 8;
	KDEFEFGCANM_IAP_CATEGORY_GLOBAL_EVENT_TICKET = 10;
	KDEFEFGCANM_IAP_CATEGORY_VS_SEEKER = 11;
	KDEFEFGCANM_IAP_CATEGORY_STICKER = 12;
	KDEFEFGCANM_IAP_CATEGORY_FREE = 13;
	KDEFEFGCANM_IAP_CATEGORY_SUBSCRIPTION = 14;
	KDEFEFGCANM_IAP_CATEGORY_TRANSPORTER_ENERGY = 15;
}

enum KIDNLMAEFOP {
	KIDNLMAEFOP_SUBSECTION_UNSET = 0;
	KIDNLMAEFOP_SUBSECTION_VS_CHARGING = 1;
	KIDNLMAEFOP_SUBSECTION_VS_FREE = 2;
	KIDNLMAEFOP_SUBSECTION_VS_PREMIUM = 3;
	KIDNLMAEFOP_SUBSECTION_NEARBY_TEAM_LEADERS = 4;
	KIDNLMAEFOP_SUBSECTION_NEARBY_QR_CODE = 5;
}

enum KOALJFNPGBK {
	KOALJFNPGBK_NONE = 0;
	KOALJFNPGBK_INVASION_GRUNT = 1;
	KOALJFNPGBK_INVASION_LEADER = 2;
	KOALJFNPGBK_INVASION_GIOVANNI = 3;
	KOALJFNPGBK_INVASION_GRUNTB = 4;
	KOALJFNPGBK_INVASION_EVENT_NPC = 5;
	KOALJFNPGBK_INVASION_ROUTES_NPC = 6;
}

enum LEMCAJEHFLF {
	LEMCAJEHFLF_AD_FEEDBACK_COMPLAINT_REASON_INVALID = 0;
	LEMCAJEHFLF_AD_FEEDBACK_COMPLAINT_REASON_OFFENSIVE = 1;
	LEMCAJEHFLF_AD_FEEDBACK_COMPLAINT_REASON_SPAM = 2;
	LEMCAJEHFLF_AD_FEEDBACK_COMPLAINT_REASON_SEXUALLY_INAPPROPRIATE = 3;
	LEMCAJEHFLF_AD_FEEDBACK_COMPLAINT_REASON_SCAM_OR_MISLEADING = 4;
	LEMCAJEHFLF_AD_FEEDBACK_COMPLAINT_REASON_VIOLENCE_OR_PROHIBITED = 5;
	LEMCAJEHFLF_AD_FEEDBACK_COMPLAINT_REASON_POLITICAL = 6;
}

enum LFCGMBEAIKE {
	LFCGMBEAIKE_ITEM_CATEGORY_NONE = 0;
	LFCGMBEAIKE_ITEM_CATEGORY_POKEBALL = 1;
	LFCGMBEAIKE_ITEM_CATEGORY_FOOD = 2;
	LFCGMBEAIKE_ITEM_CATEGORY_MEDICINE = 3;
	LFCGMBEAIKE_ITEM_CATEGORY_BOOST = 4;
	LFCGMBEAIKE_ITEM_CATEGORY_UTILITES = 5;
	LFCGMBEAIKE_ITEM_CATEGORY_CAMERA = 6;
	LFCGMBEAIKE_ITEM_CATEGORY_DISK = 7;
	LFCGMBEAIKE_ITEM_CATEGORY_INCUBATOR = 8;
	LFCGMBEAIKE_ITEM_CATEGORY_INCENSE = 9;
	LFCGMBEAIKE_ITEM_CATEGORY_XP_BOOST = 10;
	LFCGMBEAIKE_ITEM_CATEGORY_INVENTORY_UPGRADE = 11;
	LFCGMBEAIKE_ITEM_CATEGORY_EVOLUTION_REQUIREMENT = 12;
	LFCGMBEAIKE_ITEM_CATEGORY_MOVE_REROLL = 13;
	LFCGMBEAIKE_ITEM_CATEGORY_CANDY = 14;
	LFCGMBEAIKE_ITEM_CATEGORY_RAID_TICKET = 15;
	LFCGMBEAIKE_ITEM_CATEGORY_STARDUST_BOOST = 16;
	LFCGMBEAIKE_ITEM_CATEGORY_FRIEND_GIFT_BOX = 17;
	LFCGMBEAIKE_ITEM_CATEGORY_TEAM_CHANGE = 18;
	LFCGMBEAIKE_ITEM_CATEGORY_ROUTE_MAKER = 19;
	LFCGMBEAIKE_ITEM_CATEGORY_VS_SEEKER = 20;
	LFCGMBEAIKE_ITEM_CATEGORY_INCIDENT_TICKET = 21;
	LFCGMBEAIKE_ITEM_CATEGORY_GLOBAL_EVENT_TICKET = 22;
	LFCGMBEAIKE_ITEM_CATEGORY_BUDDY_EXCLUSIVE_FOOD = 23;
	LFCGMBEAIKE_ITEM_CATEGORY_STICKER = 24;
	LFCGMBEAIKE_ITEM_CATEGORY_POSTCARD_INVENTORY = 25;
	LFCGMBEAIKE_ITEM_CATEGORY_EVENT_TICKET_GIFT = 26;
}

enum LIPCKNBPFMD {
	LIPCKNBPFMD_WINNER = 0;
	LIPCKNBPFMD_LOSER = 1;
	LIPCKNBPFMD_DRAW = 2;
}

enum LKJIPKPOENA {
	LKJIPKPOENA_UNSET_REWARD_STATUS = 0;
	LKJIPKPOENA_REWARDS_GRANTED = 1;
	LKJIPKPOENA_MAX_REWARDS_RECEIVED = 2;
	LKJIPKPOENA_PLAYER_BAG_FULL = 3;
	LKJIPKPOENA_NO_REWARDS = 4;
}

enum LLMADHGMIEE {
	LLMADHGMIEE_SOUVENIR_UNSET = 0;
	LLMADHGMIEE_SOUVENIR_LONE_EARRING = 1;
	LLMADHGMIEE_SOUVENIR_SMALL_BOUQUET = 2;
	LLMADHGMIEE_SOUVENIR_SKIPPING_STONE = 3;
	LLMADHGMIEE_SOUVENIR_BEACH_GLASS = 4;
	LLMADHGMIEE_SOUVENIR_TROPICAL_SHELL = 5;
	LLMADHGMIEE_SOUVENIR_MUSHROOM = 6;
	LLMADHGMIEE_SOUVENIR_CHALKY_STONE = 7;
	LLMADHGMIEE_SOUVENIR_PINECONE = 8;
	LLMADHGMIEE_SOUVENIR_TROPICAL_FLOWER = 9;
	LLMADHGMIEE_SOUVENIR_FLOWER_FRUITS = 10;
	LLMADHGMIEE_SOUVENIR_CACTUS_FLOWER = 11;
	LLMADHGMIEE_SOUVENIR_STRETCHY_SPRING = 12;
	LLMADHGMIEE_SOUVENIR_MARBLE = 13;
	LLMADHGMIEE_SOUVENIR_TORN_TICKET = 14;
	LLMADHGMIEE_SOUVENIR_PRETTY_LEAF = 15;
	LLMADHGMIEE_SOUVENIR_CONFETTI = 16;
	LLMADHGMIEE_SOUVENIR_PIKACHU_VISOR = 17;
}

enum LMMLJBEDMBD {
	LMMLJBEDMBD_MOVE_UNSET = 0;
	LMMLJBEDMBD_V0001_MOVE_THUNDER_SHOCK = 1;
	LMMLJBEDMBD_V0002_MOVE_QUICK_ATTACK = 2;
	LMMLJBEDMBD_V0003_MOVE_SCRATCH = 3;
	LMMLJBEDMBD_V0004_MOVE_EMBER = 4;
	LMMLJBEDMBD_V0005_MOVE_VINE_WHIP = 5;
	LMMLJBEDMBD_V0006_MOVE_TACKLE = 6;
	LMMLJBEDMBD_V0007_MOVE_RAZOR_LEAF = 7;
	LMMLJBEDMBD_V0008_MOVE_TAKE_DOWN = 8;
	LMMLJBEDMBD_V0009_MOVE_WATER_GUN = 9;
	LMMLJBEDMBD_V0010_MOVE_BITE = 10;
	LMMLJBEDMBD_V0011_MOVE_POUND = 11;
	LMMLJBEDMBD_V0012_MOVE_DOUBLE_SLAP = 12;
	LMMLJBEDMBD_V0013_MOVE_WRAP = 13;
	LMMLJBEDMBD_V0014_MOVE_HYPER_BEAM = 14;
	LMMLJBEDMBD_V0015_MOVE_LICK = 15;
	LMMLJBEDMBD_V0016_MOVE_DARK_PULSE = 16;
	LMMLJBEDMBD_V0017_MOVE_SMOG = 17;
	LMMLJBEDMBD_V0018_MOVE_SLUDGE = 18;
	LMMLJBEDMBD_V0019_MOVE_METAL_CLAW = 19;
	LMMLJBEDMBD_V0020_MOVE_VICE_GRIP = 20;
	LMMLJBEDMBD_V0021_MOVE_FLAME_WHEEL = 21;
	LMMLJBEDMBD_V0022_MOVE_MEGAHORN = 22;
	LMMLJBEDMBD_V0023_MOVE_WING_ATTACK = 23;
	LMMLJBEDMBD_V0024_MOVE_FLAMETHROWER = 24;
	LMMLJBEDMBD_V0025_MOVE_SUCKER_PUNCH = 25;
	LMMLJBEDMBD_V0026_MOVE_DIG = 26;
	LMMLJBEDMBD_V0027_MOVE_LOW_KICK = 27;
	LMMLJBEDMBD_V0028_MOVE_CROSS_CHOP = 28;
	LMMLJBEDMBD_V0029_MOVE_PSYCHO_CUT = 29;
	LMMLJBEDMBD_V0030_MOVE_PSYBEAM = 30;
	LMMLJBEDMBD_V0031_MOVE_EARTHQUAKE = 31;
	LMMLJBEDMBD_V0032_MOVE_STONE_EDGE = 32;
	LMMLJBEDMBD_V0033_MOVE_ICE_PUNCH = 33;
	LMMLJBEDMBD_V0034_MOVE_HEART_STAMP = 34;
	LMMLJBEDMBD_V0035_MOVE_DISCHARGE = 35;
	LMMLJBEDMBD_V0036_MOVE_FLASH_CANNON = 36;
	LMMLJBEDMBD_V0037_MOVE_PECK = 37;
	LMMLJBEDMBD_V0038_MOVE_DRILL_PECK = 38;
	LMMLJBEDMBD_V0039_MOVE_ICE_BEAM = 39;
	LMMLJBEDMBD_V0040_MOVE_BLIZZARD = 40;
	LMMLJBEDMBD_V0041_MOVE_AIR_SLASH = 41;
	LMMLJBEDMBD_V0042_MOVE_HEAT_WAVE = 42;
	LMMLJBEDMBD_V0043_MOVE_TWINEEDLE = 43;
	LMMLJBEDMBD_V0044_MOVE_POISON_JAB = 44;
	LMMLJBEDMBD_V0045_MOVE_AERIAL_ACE = 45;
	LMMLJBEDMBD_V0046_MOVE_DRILL_RUN = 46;
	LMMLJBEDMBD_V0047_MOVE_PETAL_BLIZZARD = 47;
	LMMLJBEDMBD_V0048_MOVE_MEGA_DRAIN = 48;
	LMMLJBEDMBD_V0049_MOVE_BUG_BUZZ = 49;
	LMMLJBEDMBD_V0050_MOVE_POISON_FANG = 50;
	LMMLJBEDMBD_V0051_MOVE_NIGHT_SLASH = 51;
	LMMLJBEDMBD_V0052_MOVE_SLASH = 52;
	LMMLJBEDMBD_V0053_MOVE_BUBBLE_BEAM = 53;
	LMMLJBEDMBD_V0054_MOVE_SUBMISSION = 54;
	LMMLJBEDMBD_V0055_MOVE_KARATE_CHOP = 55;
	LMMLJBEDMBD_V0056_MOVE_LOW_SWEEP = 56;
	LMMLJBEDMBD_V0057_MOVE_AQUA_JET = 57;
	LMMLJBEDMBD_V0058_MOVE_AQUA_TAIL = 58;
	LMMLJBEDMBD_V0059_MOVE_SEED_BOMB = 59;
	LMMLJBEDMBD_V0060_MOVE_PSYSHOCK = 60;
	LMMLJBEDMBD_V0061_MOVE_ROCK_THROW = 61;
	LMMLJBEDMBD_V0062_MOVE_ANCIENT_POWER = 62;
	LMMLJBEDMBD_V0063_MOVE_ROCK_TOMB = 63;
	LMMLJBEDMBD_V0064_MOVE_ROCK_SLIDE = 64;
	LMMLJBEDMBD_V0065_MOVE_POWER_GEM = 65;
	LMMLJBEDMBD_V0066_MOVE_SHADOW_SNEAK = 66;
	LMMLJBEDMBD_V0067_MOVE_SHADOW_PUNCH = 67;
	LMMLJBEDMBD_V0068_MOVE_SHADOW_CLAW = 68;
	LMMLJBEDMBD_V0069_MOVE_OMINOUS_WIND = 69;
	LMMLJBEDMBD_V0070_MOVE_SHADOW_BALL = 70;
	LMMLJBEDMBD_V0071_MOVE_BULLET_PUNCH = 71;
	LMMLJBEDMBD_V0072_MOVE_MAGNET_BOMB = 72;
	LMMLJBEDMBD_V0073_MOVE_STEEL_WING = 73;
	LMMLJBEDMBD_V0074_MOVE_IRON_HEAD = 74;
	LMMLJBEDMBD_V0075_MOVE_PARABOLIC_CHARGE = 75;
	LMMLJBEDMBD_V0076_MOVE_SPARK = 76;
	LMMLJBEDMBD_V0077_MOVE_THUNDER_PUNCH = 77;
	LMMLJBEDMBD_V0078_MOVE_THUNDER = 78;
	LMMLJBEDMBD_V0079_MOVE_THUNDERBOLT = 79;
	LMMLJBEDMBD_V0080_MOVE_TWISTER = 80;
	LMMLJBEDMBD_V0081_MOVE_DRAGON_BREATH = 81;
	LMMLJBEDMBD_V0082_MOVE_DRAGON_PULSE = 82;
	LMMLJBEDMBD_V0083_MOVE_DRAGON_CLAW = 83;
	LMMLJBEDMBD_V0084_MOVE_DISARMING_VOICE = 84;
	LMMLJBEDMBD_V0085_MOVE_DRAINING_KISS = 85;
	LMMLJBEDMBD_V0086_MOVE_DAZZLING_GLEAM = 86;
	LMMLJBEDMBD_V0087_MOVE_MOONBLAST = 87;
	LMMLJBEDMBD_V0088_MOVE_PLAY_ROUGH = 88;
	LMMLJBEDMBD_V0089_MOVE_CROSS_POISON = 89;
	LMMLJBEDMBD_V0090_MOVE_SLUDGE_BOMB = 90;
	LMMLJBEDMBD_V0091_MOVE_SLUDGE_WAVE = 91;
	LMMLJBEDMBD_V0092_MOVE_GUNK_SHOT = 92;
	LMMLJBEDMBD_V0093_MOVE_MUD_SHOT = 93;
	LMMLJBEDMBD_V0094_MOVE_BONE_CLUB = 94;
	LMMLJBEDMBD_V0095_MOVE_BULLDOZE = 95;
	LMMLJBEDMBD_V0096_MOVE_MUD_BOMB = 96;
	LMMLJBEDMBD_V0097_MOVE_FURY_CUTTER = 97;
	LMMLJBEDMBD_V0098_MOVE_BUG_BITE = 98;
	LMMLJBEDMBD_V0099_MOVE_SIGNAL_BEAM = 99;
	LMMLJBEDMBD_V0100_MOVE_X_SCISSOR = 100;
	LMMLJBEDMBD_V0101_MOVE_FLAME_CHARGE = 101;
	LMMLJBEDMBD_V0102_MOVE_FLAME_BURST = 102;
	LMMLJBEDMBD_V0103_MOVE_FIRE_BLAST = 103;
	LMMLJBEDMBD_V0104_MOVE_BRINE = 104;
	LMMLJBEDMBD_V0105_MOVE_WATER_PULSE = 105;
	LMMLJBEDMBD_V0106_MOVE_SCALD = 106;
	LMMLJBEDMBD_V0107_MOVE_HYDRO_PUMP = 107;
	LMMLJBEDMBD_V0108_MOVE_PSYCHIC = 108;
	LMMLJBEDMBD_V0109_MOVE_PSYSTRIKE = 109;
	LMMLJBEDMBD_V0110_MOVE_ICE_SHARD = 110;
	LMMLJBEDMBD_V0111_MOVE_ICY_WIND = 111;
	LMMLJBEDMBD_V0112_MOVE_FROST_BREATH = 112;
	LMMLJBEDMBD_V0113_MOVE_ABSORB = 113;
	LMMLJBEDMBD_V0114_MOVE_GIGA_DRAIN = 114;
	LMMLJBEDMBD_V0115_MOVE_FIRE_PUNCH = 115;
	LMMLJBEDMBD_V0116_MOVE_SOLAR_BEAM = 116;
	LMMLJBEDMBD_V0117_MOVE_LEAF_BLADE = 117;
	LMMLJBEDMBD_V0118_MOVE_POWER_WHIP = 118;
	LMMLJBEDMBD_V0119_MOVE_SPLASH = 119;
	LMMLJBEDMBD_V0120_MOVE_ACID = 120;
	LMMLJBEDMBD_V0121_MOVE_AIR_CUTTER = 121;
	LMMLJBEDMBD_V0122_MOVE_HURRICANE = 122;
	LMMLJBEDMBD_V0123_MOVE_BRICK_BREAK = 123;
	LMMLJBEDMBD_V0124_MOVE_CUT = 124;
	LMMLJBEDMBD_V0125_MOVE_SWIFT = 125;
	LMMLJBEDMBD_V0126_MOVE_HORN_ATTACK = 126;
	LMMLJBEDMBD_V0127_MOVE_STOMP = 127;
	LMMLJBEDMBD_V0128_MOVE_HEADBUTT = 128;
	LMMLJBEDMBD_V0129_MOVE_HYPER_FANG = 129;
	LMMLJBEDMBD_V0130_MOVE_SLAM = 130;
	LMMLJBEDMBD_V0131_MOVE_BODY_SLAM = 131;
	LMMLJBEDMBD_V0132_MOVE_REST = 132;
	LMMLJBEDMBD_V0133_MOVE_STRUGGLE = 133;
	LMMLJBEDMBD_V0134_MOVE_SCALD_BLASTOISE = 134;
	LMMLJBEDMBD_V0135_MOVE_HYDRO_PUMP_BLASTOISE = 135;
	LMMLJBEDMBD_V0136_MOVE_WRAP_GREEN = 136;
	LMMLJBEDMBD_V0137_MOVE_WRAP_PINK = 137;
	LMMLJBEDMBD_V0200_MOVE_FURY_CUTTER_FAST = 200;
	LMMLJBEDMBD_V0201_MOVE_BUG_BITE_FAST = 201;
	LMMLJBEDMBD_V0202_MOVE_BITE_FAST = 202;
	LMMLJBEDMBD_V0203_MOVE_SUCKER_PUNCH_FAST = 203;
	LMMLJBEDMBD_V0204_MOVE_DRAGON_BREATH_FAST = 204;
	LMMLJBEDMBD_V0205_MOVE_THUNDER_SHOCK_FAST = 205;
	LMMLJBEDMBD_V0206_MOVE_SPARK_FAST = 206;
	LMMLJBEDMBD_V0207_MOVE_LOW_KICK_FAST = 207;
	LMMLJBEDMBD_V0208_MOVE_KARATE_CHOP_FAST = 208;
	LMMLJBEDMBD_V0209_MOVE_EMBER_FAST = 209;
	LMMLJBEDMBD_V0210_MOVE_WING_ATTACK_FAST = 210;
	LMMLJBEDMBD_V0211_MOVE_PECK_FAST = 211;
	LMMLJBEDMBD_V0212_MOVE_LICK_FAST = 212;
	LMMLJBEDMBD_V0213_MOVE_SHADOW_CLAW_FAST = 213;
	LMMLJBEDMBD_V0214_MOVE_VINE_WHIP_FAST = 214;
	LMMLJBEDMBD_V0215_MOVE_RAZOR_LEAF_FAST = 215;
	LMMLJBEDMBD_V0216_MOVE_MUD_SHOT_FAST = 216;
	LMMLJBEDMBD_V0217_MOVE_ICE_SHARD_FAST = 217;
	LMMLJBEDMBD_V0218_MOVE_FROST_BREATH_FAST = 218;
	LMMLJBEDMBD_V0219_MOVE_QUICK_ATTACK_FAST = 219;
	LMMLJBEDMBD_V0220_MOVE_SCRATCH_FAST = 220;
	LMMLJBEDMBD_V0221_MOVE_TACKLE_FAST = 221;
	LMMLJBEDMBD_V0222_MOVE_POUND_FAST = 222;
	LMMLJBEDMBD_V0223_MOVE_CUT_FAST = 223;
	LMMLJBEDMBD_V0224_MOVE_POISON_JAB_FAST = 224;
	LMMLJBEDMBD_V0225_MOVE_ACID_FAST = 225;
	LMMLJBEDMBD_V0226_MOVE_PSYCHO_CUT_FAST = 226;
	LMMLJBEDMBD_V0227_MOVE_ROCK_THROW_FAST = 227;
	LMMLJBEDMBD_V0228_MOVE_METAL_CLAW_FAST = 228;
	LMMLJBEDMBD_V0229_MOVE_BULLET_PUNCH_FAST = 229;
	LMMLJBEDMBD_V0230_MOVE_WATER_GUN_FAST = 230;
	LMMLJBEDMBD_V0231_MOVE_SPLASH_FAST = 231;
	LMMLJBEDMBD_V0232_MOVE_WATER_GUN_FAST_BLASTOISE = 232;
	LMMLJBEDMBD_V0233_MOVE_MUD_SLAP_FAST = 233;
	LMMLJBEDMBD_V0234_MOVE_ZEN_HEADBUTT_FAST = 234;
	LMMLJBEDMBD_V0235_MOVE_CONFUSION_FAST = 235;
	LMMLJBEDMBD_V0236_MOVE_POISON_STING_FAST = 236;
	LMMLJBEDMBD_V0237_MOVE_BUBBLE_FAST = 237;
	LMMLJBEDMBD_V0238_MOVE_FEINT_ATTACK_FAST = 238;
	LMMLJBEDMBD_V0239_MOVE_STEEL_WING_FAST = 239;
	LMMLJBEDMBD_V0240_MOVE_FIRE_FANG_FAST = 240;
	LMMLJBEDMBD_V0241_MOVE_ROCK_SMASH_FAST = 241;
	LMMLJBEDMBD_V0242_MOVE_TRANSFORM_FAST = 242;
	LMMLJBEDMBD_V0243_MOVE_COUNTER_FAST = 243;
	LMMLJBEDMBD_V0244_MOVE_POWDER_SNOW_FAST = 244;
	LMMLJBEDMBD_V0245_MOVE_CLOSE_COMBAT = 245;
	LMMLJBEDMBD_V0246_MOVE_DYNAMIC_PUNCH = 246;
	LMMLJBEDMBD_V0247_MOVE_FOCUS_BLAST = 247;
	LMMLJBEDMBD_V0248_MOVE_AURORA_BEAM = 248;
	LMMLJBEDMBD_V0249_MOVE_CHARGE_BEAM_FAST = 249;
	LMMLJBEDMBD_V0250_MOVE_VOLT_SWITCH_FAST = 250;
	LMMLJBEDMBD_V0251_MOVE_WILD_CHARGE = 251;
	LMMLJBEDMBD_V0252_MOVE_ZAP_CANNON = 252;
	LMMLJBEDMBD_V0253_MOVE_DRAGON_TAIL_FAST = 253;
	LMMLJBEDMBD_V0254_MOVE_AVALANCHE = 254;
	LMMLJBEDMBD_V0255_MOVE_AIR_SLASH_FAST = 255;
	LMMLJBEDMBD_V0256_MOVE_BRAVE_BIRD = 256;
	LMMLJBEDMBD_V0257_MOVE_SKY_ATTACK = 257;
	LMMLJBEDMBD_V0258_MOVE_SAND_TOMB = 258;
	LMMLJBEDMBD_V0259_MOVE_ROCK_BLAST = 259;
	LMMLJBEDMBD_V0260_MOVE_INFESTATION_FAST = 260;
	LMMLJBEDMBD_V0261_MOVE_STRUGGLE_BUG_FAST = 261;
	LMMLJBEDMBD_V0262_MOVE_SILVER_WIND = 262;
	LMMLJBEDMBD_V0263_MOVE_ASTONISH_FAST = 263;
	LMMLJBEDMBD_V0264_MOVE_HEX_FAST = 264;
	LMMLJBEDMBD_V0265_MOVE_NIGHT_SHADE = 265;
	LMMLJBEDMBD_V0266_MOVE_IRON_TAIL_FAST = 266;
	LMMLJBEDMBD_V0267_MOVE_GYRO_BALL = 267;
	LMMLJBEDMBD_V0268_MOVE_HEAVY_SLAM = 268;
	LMMLJBEDMBD_V0269_MOVE_FIRE_SPIN_FAST = 269;
	LMMLJBEDMBD_V0270_MOVE_OVERHEAT = 270;
	LMMLJBEDMBD_V0271_MOVE_BULLET_SEED_FAST = 271;
	LMMLJBEDMBD_V0272_MOVE_GRASS_KNOT = 272;
	LMMLJBEDMBD_V0273_MOVE_ENERGY_BALL = 273;
	LMMLJBEDMBD_V0274_MOVE_EXTRASENSORY_FAST = 274;
	LMMLJBEDMBD_V0275_MOVE_FUTURESIGHT = 275;
	LMMLJBEDMBD_V0276_MOVE_MIRROR_COAT = 276;
	LMMLJBEDMBD_V0277_MOVE_OUTRAGE = 277;
	LMMLJBEDMBD_V0278_MOVE_SNARL_FAST = 278;
	LMMLJBEDMBD_V0279_MOVE_CRUNCH = 279;
	LMMLJBEDMBD_V0280_MOVE_FOUL_PLAY = 280;
	LMMLJBEDMBD_V0281_MOVE_HIDDEN_POWER_FAST = 281;
	LMMLJBEDMBD_V0282_MOVE_TAKE_DOWN_FAST = 282;
	LMMLJBEDMBD_V0283_MOVE_WATERFALL_FAST = 283;
	LMMLJBEDMBD_V0284_MOVE_SURF = 284;
	LMMLJBEDMBD_V0285_MOVE_DRACO_METEOR = 285;
	LMMLJBEDMBD_V0286_MOVE_DOOM_DESIRE = 286;
	LMMLJBEDMBD_V0287_MOVE_YAWN_FAST = 287;
	LMMLJBEDMBD_V0288_MOVE_PSYCHO_BOOST = 288;
	LMMLJBEDMBD_V0289_MOVE_ORIGIN_PULSE = 289;
	LMMLJBEDMBD_V0290_MOVE_PRECIPICE_BLADES = 290;
	LMMLJBEDMBD_V0291_MOVE_PRESENT_FAST = 291;
	LMMLJBEDMBD_V0292_MOVE_WEATHER_BALL_FIRE = 292;
	LMMLJBEDMBD_V0293_MOVE_WEATHER_BALL_ICE = 293;
	LMMLJBEDMBD_V0294_MOVE_WEATHER_BALL_ROCK = 294;
	LMMLJBEDMBD_V0295_MOVE_WEATHER_BALL_WATER = 295;
	LMMLJBEDMBD_V0296_MOVE_FRENZY_PLANT = 296;
	LMMLJBEDMBD_V0297_MOVE_SMACK_DOWN_FAST = 297;
	LMMLJBEDMBD_V0298_MOVE_BLAST_BURN = 298;
	LMMLJBEDMBD_V0299_MOVE_HYDRO_CANNON = 299;
	LMMLJBEDMBD_V0300_MOVE_LAST_RESORT = 300;
	LMMLJBEDMBD_V0301_MOVE_METEOR_MASH = 301;
	LMMLJBEDMBD_V0302_MOVE_SKULL_BASH = 302;
	LMMLJBEDMBD_V0303_MOVE_ACID_SPRAY = 303;
	LMMLJBEDMBD_V0304_MOVE_EARTH_POWER = 304;
	LMMLJBEDMBD_V0305_MOVE_CRABHAMMER = 305;
	LMMLJBEDMBD_V0306_MOVE_LUNGE = 306;
	LMMLJBEDMBD_V0307_MOVE_CRUSH_CLAW = 307;
	LMMLJBEDMBD_V0308_MOVE_OCTAZOOKA = 308;
	LMMLJBEDMBD_V0309_MOVE_MIRROR_SHOT = 309;
	LMMLJBEDMBD_V0310_MOVE_SUPER_POWER = 310;
	LMMLJBEDMBD_V0311_MOVE_FELL_STINGER = 311;
	LMMLJBEDMBD_V0312_MOVE_LEAF_TORNADO = 312;
	LMMLJBEDMBD_V0313_MOVE_LEECH_LIFE = 313;
	LMMLJBEDMBD_V0314_MOVE_DRAIN_PUNCH = 314;
	LMMLJBEDMBD_V0315_MOVE_SHADOW_BONE = 315;
	LMMLJBEDMBD_V0316_MOVE_MUDDY_WATER = 316;
	LMMLJBEDMBD_V0317_MOVE_BLAZE_KICK = 317;
	LMMLJBEDMBD_V0318_MOVE_RAZOR_SHELL = 318;
	LMMLJBEDMBD_V0319_MOVE_POWER_UP_PUNCH = 319;
	LMMLJBEDMBD_V0320_MOVE_CHARM_FAST = 320;
	LMMLJBEDMBD_V0321_MOVE_GIGA_IMPACT = 321;
	LMMLJBEDMBD_V0322_MOVE_FRUSTRATION = 322;
	LMMLJBEDMBD_V0323_MOVE_RETURN = 323;
	LMMLJBEDMBD_V0324_MOVE_SYNCHRONOISE = 324;
	LMMLJBEDMBD_V0325_MOVE_LOCK_ON_FAST = 325;
	LMMLJBEDMBD_V0326_MOVE_THUNDER_FANG_FAST = 326;
	LMMLJBEDMBD_V0327_MOVE_ICE_FANG_FAST = 327;
	LMMLJBEDMBD_V0328_MOVE_HORN_DRILL = 328;
	LMMLJBEDMBD_V0329_MOVE_FISSURE = 329;
	LMMLJBEDMBD_V0330_MOVE_SACRED_SWORD = 330;
	LMMLJBEDMBD_V0331_MOVE_FLYING_PRESS = 331;
	LMMLJBEDMBD_V0332_MOVE_AURA_SPHERE = 332;
	LMMLJBEDMBD_V0333_MOVE_PAYBACK = 333;
	LMMLJBEDMBD_V0334_MOVE_ROCK_WRECKER = 334;
	LMMLJBEDMBD_V0335_MOVE_AEROBLAST = 335;
	LMMLJBEDMBD_V0336_MOVE_TECHNO_BLAST_NORMAL = 336;
	LMMLJBEDMBD_V0337_MOVE_TECHNO_BLAST_BURN = 337;
	LMMLJBEDMBD_V0338_MOVE_TECHNO_BLAST_CHILL = 338;
	LMMLJBEDMBD_V0339_MOVE_TECHNO_BLAST_WATER = 339;
	LMMLJBEDMBD_V0340_MOVE_TECHNO_BLAST_SHOCK = 340;
	LMMLJBEDMBD_V0341_MOVE_FLY = 341;
	LMMLJBEDMBD_V0342_MOVE_V_CREATE = 342;
	LMMLJBEDMBD_V0343_MOVE_LEAF_STORM = 343;
	LMMLJBEDMBD_V0344_MOVE_TRI_ATTACK = 344;
	LMMLJBEDMBD_V0345_MOVE_GUST_FAST = 345;
	LMMLJBEDMBD_V0346_MOVE_INCINERATE_FAST = 346;
	LMMLJBEDMBD_V0347_MOVE_DARK_VOID = 347;
	LMMLJBEDMBD_V0348_MOVE_FEATHER_DANCE = 348;
	LMMLJBEDMBD_V0349_MOVE_FIERY_DANCE = 349;
	LMMLJBEDMBD_V0350_MOVE_FAIRY_WIND_FAST = 350;
	LMMLJBEDMBD_V0351_MOVE_RELIC_SONG = 351;
	LMMLJBEDMBD_V0352_MOVE_WEATHER_BALL_NORMAL = 352;
	LMMLJBEDMBD_V0353_MOVE_PSYCHIC_FANGS = 353;
	LMMLJBEDMBD_V0354_MOVE_HYPERSPACE_FURY = 354;
	LMMLJBEDMBD_V0355_MOVE_HYPERSPACE_HOLE = 355;
	LMMLJBEDMBD_V0356_MOVE_DOUBLE_KICK_FAST = 356;
	LMMLJBEDMBD_V0357_MOVE_MAGICAL_LEAF_FAST = 357;
	LMMLJBEDMBD_V0358_MOVE_SACRED_FIRE = 358;
	LMMLJBEDMBD_V0359_MOVE_ICICLE_SPEAR = 359;
	LMMLJBEDMBD_V0360_MOVE_AEROBLAST_PLUS = 360;
	LMMLJBEDMBD_V0361_MOVE_AEROBLAST_PLUS_PLUS = 361;
	LMMLJBEDMBD_V0362_MOVE_SACRED_FIRE_PLUS = 362;
	LMMLJBEDMBD_V0363_MOVE_SACRED_FIRE_PLUS_PLUS = 363;
	LMMLJBEDMBD_V0364_MOVE_ACROBATICS = 364;
	LMMLJBEDMBD_V0365_MOVE_LUSTER_PURGE = 365;
	LMMLJBEDMBD_V0366_MOVE_MIST_BALL = 366;
	LMMLJBEDMBD_V0367_MOVE_BRUTAL_SWING = 367;
	LMMLJBEDMBD_V0368_MOVE_ROLLOUT_FAST = 368;
	LMMLJBEDMBD_V0369_MOVE_SEED_FLARE = 369;
}

enum LMPLGPLAEIC {
	LMPLGPLAEIC_POKEMON_TAG_COLOR_UNSET = 0;
	LMPLGPLAEIC_POKEMON_TAG_COLOR_BLUE = 1;
	LMPLGPLAEIC_POKEMON_TAG_COLOR_GREEN = 2;
	LMPLGPLAEIC_POKEMON_TAG_COLOR_PURPLE = 3;
	LMPLGPLAEIC_POKEMON_TAG_COLOR_YELLOW = 4;
	LMPLGPLAEIC_POKEMON_TAG_COLOR_RED = 5;
	LMPLGPLAEIC_POKEMON_TAG_COLOR_ORANGE = 6;
	LMPLGPLAEIC_POKEMON_TAG_COLOR_GREY = 7;
	LMPLGPLAEIC_POKEMON_TAG_COLOR_BLACK = 8;
}

enum LoginActionTelemetryIds {
	LOGIN_ACTION_TELEMETRY_IDS_UNDEFINED_LOGIN_ACTION = 0;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_AGE_GATE = 1;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_NEW_PLAYER = 2;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_EXISTING_PLAYER = 3;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_GOOGLE = 4;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_GOOGLE = 5;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_GOOGLE = 6;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_FACEBOOK = 7;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_FACEBOOK = 8;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_FACEBOOK = 9;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_PTC = 10;
	LOGIN_ACTION_TELEMETRY_IDS_EXIT_PTC = 11;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_PTC_REGISTER = 12;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_PTC_SIGN_IN = 13;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_PTC_SIGN_IN = 14;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_PTC_SIGN_IN = 15;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_SUPERAWESOME = 16;
	LOGIN_ACTION_TELEMETRY_IDS_EXIT_SUPERAWESOME = 17;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_SUPERAWESOME_REGISTER = 18;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_SUPERAWESOME_FORGOT_PASSWORD = 19;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_SUPERAWESOME_SIGN_IN = 20;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_SUPERAWESOME_SIGN_IN = 21;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_SUPERAWESOME_SIGN_IN = 22;
	LOGIN_ACTION_TELEMETRY_IDS_EXIT_NEW_PLAYER = 23;
	LOGIN_ACTION_TELEMETRY_IDS_EXIT_EXISTING_PLAYER = 24;
	LOGIN_ACTION_TELEMETRY_IDS_LOGIN_STARTED = 25;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_APPLE = 26;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_APPLE = 27;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_APPLE = 28;
}

enum MBJGAPHFDHC {
	MBJGAPHFDHC_UNSET = 0;
	MBJGAPHFDHC_TEAM_BLUE = 1;
	MBJGAPHFDHC_TEAM_RED = 2;
	MBJGAPHFDHC_TEAM_YELLOW = 3;
}

enum MapEventsTelemetryIds {
	MAP_EVENTS_TELEMETRY_IDS_UNDEFINED_MAP_EVENT = 0;
	MAP_EVENTS_TELEMETRY_IDS_ITEM_BAG = 1;
	MAP_EVENTS_TELEMETRY_IDS_MAIN_MENU = 2;
	MAP_EVENTS_TELEMETRY_IDS_POKEDEX = 3;
	MAP_EVENTS_TELEMETRY_IDS_PROFILE = 4;
	MAP_EVENTS_TELEMETRY_IDS_SETTINGS = 5;
	MAP_EVENTS_TELEMETRY_IDS_SHOP_FROM_MAP = 6;
	MAP_EVENTS_TELEMETRY_IDS_GYM = 7;
	MAP_EVENTS_TELEMETRY_IDS_POKESTOP = 8;
	MAP_EVENTS_TELEMETRY_IDS_RESEARCH = 9;
	MAP_EVENTS_TELEMETRY_IDS_COMPASS = 10;
	MAP_EVENTS_TELEMETRY_IDS_NEARBY = 11;
}

enum MapLayer {
	MAP_LAYER_UNDEFINED = 0;
	MAP_LAYER_BOUNDARIES = 1;
	MAP_LAYER_BUILDINGS = 2;
	MAP_LAYER_LANDMASS = 3;
	MAP_LAYER_LANDUSE = 4;
	MAP_LAYER_PLACES = 5;
	MAP_LAYER_POIS = 6;
	MAP_LAYER_ROADS = 7;
	MAP_LAYER_TRANSIT = 8;
	MAP_LAYER_WATER = 9;
	MAP_LAYER_DEBUG_TILE_BOUNDARIES = 10;
}

enum NGNLLGHCIBC {
	NGNLLGHCIBC_LEGAL_SCREEN = 0;
	NGNLLGHCIBC_AVATAR_SELECTION = 1;
	NGNLLGHCIBC_ACCOUNT_CREATION = 2;
	NGNLLGHCIBC_POKEMON_CAPTURE = 3;
	NGNLLGHCIBC_NAME_SELECTION = 4;
	NGNLLGHCIBC_POKEMON_BERRY = 5;
	NGNLLGHCIBC_USE_ITEM = 6;
	NGNLLGHCIBC_FIRST_TIME_EXPERIENCE_COMPLETE = 7;
	NGNLLGHCIBC_POKESTOP_TUTORIAL = 8;
	NGNLLGHCIBC_GYM_TUTORIAL = 9;
	NGNLLGHCIBC_CHALLENGE_QUEST_TUTORIAL = 10;
	NGNLLGHCIBC_PRIVACY_POLICY_CONFIRMATION = 11;
	NGNLLGHCIBC_TRADING_TUTORIAL = 12;
	NGNLLGHCIBC_POI_SUBMISSION_TUTORIAL = 13;
	NGNLLGHCIBC_V1_START_TUTORIAL = 14;
	NGNLLGHCIBC_V2_START_TUTORIAL = 15;
	NGNLLGHCIBC_V2_CUSTOMIZED_AVATAR = 16;
	NGNLLGHCIBC_V2_CAUGHT_FIRST_WILD = 17;
	NGNLLGHCIBC_V2_FINISHED_TUTORIAL_CATCHES = 18;
	NGNLLGHCIBC_V2_NAME_SELECTION = 19;
	NGNLLGHCIBC_V2_EGG_GIVEN = 20;
	NGNLLGHCIBC_V2_START_EGG_TUTORIAL = 21;
	NGNLLGHCIBC_V2_COMPLETED_EGG_TUTORIAL = 22;
	NGNLLGHCIBC_AR_PHOTO_TUTORIAL = 23;
	NGNLLGHCIBC_STARTER_POKEMON_CAPTURED = 24;
	NGNLLGHCIBC_AR_PHOTO_FIRST_TIME_DIALOG = 25;
	NGNLLGHCIBC_AR_CLASSIC_PHOTO_TUTORIAL = 26;
	NGNLLGHCIBC_AR_PLUS_PHOTO_TUTORIAL = 27;
	NGNLLGHCIBC_INVASION_INTRODUCTION_DIALOG = 29;
	NGNLLGHCIBC_INVASION_ENCOUNTER_DIALOG = 30;
	NGNLLGHCIBC_INVASION_SHADOW_POKEMON_DIALOG = 31;
	NGNLLGHCIBC_ROUTES_CREATION = 32;
	NGNLLGHCIBC_INVASION_MAP_FRAGMENT_DIALOG = 33;
	NGNLLGHCIBC_INVASION_MAP_RECEIVED_DIALOG = 34;
	NGNLLGHCIBC_INVASION_MAP_2_RECEIVED_DIALOG = 35;
	NGNLLGHCIBC_BUDDY_WELCOME_PROMPT = 36;
	NGNLLGHCIBC_BUDDY_AR_PLUS_TUTORIAL = 37;
	NGNLLGHCIBC_BUDDY_FEED_TUTORIAL = 38;
	NGNLLGHCIBC_BUDDY_ON_MAP_PROMPT = 39;
	NGNLLGHCIBC_BATTLE_LEAGUE_HELP_TUTORIAL = 40;
	NGNLLGHCIBC_ARMP_TOS_CONFIRMATION = 41;
	NGNLLGHCIBC_BUDDY_REMOTE_GIFT_TUTORIAL = 42;
	NGNLLGHCIBC_XL_CANDY_TUTORIAL = 43;
	NGNLLGHCIBC_LEVEL_UP_PAGE_TUTORIAL = 44;
	NGNLLGHCIBC_DAILY_BONUS_ENCOUNTER_TUTORIAL = 45;
	NGNLLGHCIBC_SPONSORED_GIFT_TUTORIAL = 46;
	NGNLLGHCIBC_XGS_ONLINE_CONSENT_NOTE = 47;
	NGNLLGHCIBC_APP_TRACKING_OPTIN_REQUIRED_TUTORIAL = 48;
	NGNLLGHCIBC_APP_TRACKING_OPTIN_DIALOG = 49;
	NGNLLGHCIBC_ADDRESS_BOOK_IMPORT_PROMPT = 50;
	NGNLLGHCIBC_POKEMON_TAGS_INTRODUCTION = 51;
	NGNLLGHCIBC_GYM_TUTORIAL_BUTTON_PROMPT_SHOWN = 52;
	NGNLLGHCIBC_RAID_TUTORIAL_BUTTON_PROMPT_SHOWN = 53;
	NGNLLGHCIBC_POTION_AND_REVIVE_TUTORIAL_INTRODUCED = 54;
	NGNLLGHCIBC_POTION_AND_REVIVE_TUTORIAL_VIEWED = 55;
	NGNLLGHCIBC_POSTCARD_COLLECTION_TUTORIAL_VIEWED = 56;
	NGNLLGHCIBC_SHOULD_SHOW_POTION_AND_REVIVE_TUTORIAL = 57;
	NGNLLGHCIBC_RECEIVED_GIFT = 58;
	NGNLLGHCIBC_FRIEND_TUTORIAL_BUTTON_PROMPT_SHOWN = 59;
	NGNLLGHCIBC_SHOULD_SHOW_GIFT_TUTORIAL = 60;
	NGNLLGHCIBC_GIFT_TUTORIAL_INTRODUCED = 61;
	NGNLLGHCIBC_GIFT_TUTORIAL_COMPLETE = 62;
	NGNLLGHCIBC_CHALLENGE_CATCH_RAZZBERRY = 63;
	NGNLLGHCIBC_SHOULD_SHOW_LURE_TUTORIAL = 64;
	NGNLLGHCIBC_LURE_TUTORIAL_INTRODUCED = 65;
	NGNLLGHCIBC_LURE_BUTTON_PROMPT_SHOWN = 66;
	NGNLLGHCIBC_LURE_BUTTON_DIALOG_SHOWN = 67;
	NGNLLGHCIBC_REMOTE_RAID_TUTORIAL = 68;
	NGNLLGHCIBC_TRADE_TUTORIAL_INTRODUCED = 69;
	NGNLLGHCIBC_TRADE_TUTORIAL_COMPLETE = 70;
	NGNLLGHCIBC_LUCKY_FRIEND_TUTORIAL = 71;
	NGNLLGHCIBC_LUCKY_TRADE_TUTORIAL = 72;
	NGNLLGHCIBC_MEGA_LEVELS_TUTORIAL = 73;
}

enum NJMFCLNADGI {
	NJMFCLNADGI_BASELINE = 0;
	NJMFCLNADGI_FAST_MOVE_ALWAYS_LEAK = 1;
	NJMFCLNADGI_MINIGAME_FAST_MOVE_CLEAR = 2;
	NJMFCLNADGI_SWAP_FAST_MOVE_CLEAR = 3;
	NJMFCLNADGI_DOWNSTREAM_REDUNDANCY = 4;
	NJMFCLNADGI_DEFENSIVE_ACK_CHECK = 5;
	NJMFCLNADGI_SERVER_FLY_IN_FLY_OUT = 6;
	NJMFCLNADGI_CLIENT_REOBSERVER_COMBAT_STATE = 7;
}

enum NewsPageTelemetryIds {
	NEWS_PAGE_TELEMETRY_IDS_UNDEFINED_NEWS_EVENT = 0;
	NEWS_PAGE_TELEMETRY_IDS_NEWS_VIEWED = 1;
	NEWS_PAGE_TELEMETRY_IDS_NEWS_DISMISSED = 2;
	NEWS_PAGE_TELEMETRY_IDS_NEWS_LINK_CLICKED = 3;
	NEWS_PAGE_TELEMETRY_IDS_NEWS_UPDATED_APP = 4;
}

enum NotificationState {
	NOTIFICATION_STATE_UNSET_STATE = 0;
	NOTIFICATION_STATE_VIEWED = 1;
}

enum OBICLGNCNFN {
	OBICLGNCNFN_FRIENDSHIP_LEVEL_UNSET = 0;
	OBICLGNCNFN_FRIENDSHIP_LEVEL_0 = 1;
	OBICLGNCNFN_FRIENDSHIP_LEVEL_1 = 2;
	OBICLGNCNFN_FRIENDSHIP_LEVEL_2 = 3;
	OBICLGNCNFN_FRIENDSHIP_LEVEL_3 = 4;
	OBICLGNCNFN_FRIENDSHIP_LEVEL_4 = 5;
}

enum OBIDFLEEEGB {
	OBIDFLEEEGB_CAM_TARGET_ATTACKER = 0;
	OBIDFLEEEGB_CAM_TARGET_ATTACKER_EDGE = 1;
	OBIDFLEEEGB_CAM_TARGET_ATTACKER_GROUND = 2;
	OBIDFLEEEGB_CAM_TARGET_DEFENDER = 3;
	OBIDFLEEEGB_CAM_TARGET_DEFENDER_EDGE = 4;
	OBIDFLEEEGB_CAM_TARGET_DEFENDER_GROUND = 5;
	OBIDFLEEEGB_CAM_TARGET_ATTACKER_DEFENDER = 6;
	OBIDFLEEEGB_CAM_TARGET_ATTACKER_DEFENDER_EDGE = 7;
	OBIDFLEEEGB_CAM_TARGET_DEFENDER_ATTACKER = 8;
	OBIDFLEEEGB_CAM_TARGET_DEFENDER_ATTACKER_EDGE = 9;
	OBIDFLEEEGB_CAM_TARGET_ATTACKER_DEFENDER_MIRROR = 11;
	OBIDFLEEEGB_CAM_TARGET_SHOULDER_ATTACKER_DEFENDER = 12;
	OBIDFLEEEGB_CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR = 13;
	OBIDFLEEEGB_CAM_TARGET_ATTACKER_DEFENDER_WORLD = 14;
}

enum OCGLMKHCMFN {
	OCGLMKHCMFN_AVATAR_UNKNOWN = 0;
	OCGLMKHCMFN_AVATAR_MALE = 1;
	OCGLMKHCMFN_AVATAR_FEMALE = 2;
}

enum ODAMJPADCEA {
	ODAMJPADCEA_ORGANIC = 0;
	ODAMJPADCEA_OFFICIAL = 1;
}

enum OFKHNHHPPBD {
	OFKHNHHPPBD_PLATFORM_UNSET = 0;
	OFKHNHHPPBD_PLATFORM_IOS = 1;
	OFKHNHHPPBD_PLATFORM_ANDROID = 2;
	OFKHNHHPPBD_PLATFORM_OSX = 3;
	OFKHNHHPPBD_PLATFORM_WINDOWS = 4;
	OFKHNHHPPBD_PLATFORM_APPLE_WATCH = 5;
}

enum OGMPIKOPPBG {
	OGMPIKOPPBG_ITEM_EFFECT_NONE = 0;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_NO_FLEE = 1000;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_NO_MOVEMENT = 1002;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_NO_THREAT = 1003;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_TARGET_MAX = 1004;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_TARGET_SLOW = 1005;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_CHANCE_NIGHT = 1006;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_CHANCE_TRAINER = 1007;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_CHANCE_FIRST_THROW = 1008;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_CHANCE_LEGEND = 1009;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_CHANCE_HEAVY = 1010;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_CHANCE_REPEAT = 1011;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_CHANCE_MULTI_THROW = 1012;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_CHANCE_ALWAYS = 1013;
	OGMPIKOPPBG_ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW = 1014;
	OGMPIKOPPBG_ITEM_EFFECT_CANDY_AWARD = 1015;
	OGMPIKOPPBG_ITEM_EFFECT_FULL_MOTIVATION = 1016;
}

enum OHBIGINBFMN {
	OHBIGINBFMN_PLAYER_AVATAR_MALE = 0;
	OHBIGINBFMN_PLAYER_AVATAR_FEMALE = 1;
}

enum OIDHNJCLMOK {
	OIDHNJCLMOK_CAM_INTERP_CUT = 0;
	OIDHNJCLMOK_CAM_INTERP_LINEAR = 1;
	OIDHNJCLMOK_CAM_INTERP_SMOOTH = 2;
	OIDHNJCLMOK_CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE = 3;
	OIDHNJCLMOK_CAM_INTERP_DEPENDS = 4;
}

enum OMCCLHKGJGC {
	OMCCLHKGJGC_BUDDY_EMOTION_LEVEL_UNSET = 0;
	OMCCLHKGJGC_BUDDY_EMOTION_LEVEL_0 = 1;
	OMCCLHKGJGC_BUDDY_EMOTION_LEVEL_1 = 2;
	OMCCLHKGJGC_BUDDY_EMOTION_LEVEL_2 = 3;
	OMCCLHKGJGC_BUDDY_EMOTION_LEVEL_3 = 4;
	OMCCLHKGJGC_BUDDY_EMOTION_LEVEL_4 = 5;
	OMCCLHKGJGC_BUDDY_EMOTION_LEVEL_5 = 6;
	OMCCLHKGJGC_BUDDY_EMOTION_LEVEL_6 = 7;
}

enum OMDCMKIAADD {
	OMDCMKIAADD_COMBAT_TYPE_UNSET = 0;
	OMDCMKIAADD_SOLO = 1;
	OMDCMKIAADD_QR_CODE = 2;
	OMDCMKIAADD_FRIENDS = 3;
	OMDCMKIAADD_NEARBY = 4;
	OMDCMKIAADD_SOLO_INVASION = 5;
	OMDCMKIAADD_VS_SEEKER = 6;
}

enum OnboardingArStatus {
	ONBOARDING_AR_STATUS_UNSET = 0;
	ONBOARDING_AR_STATUS_OFF = 1;
	ONBOARDING_AR_STATUS_AR_STANDARD = 2;
	ONBOARDING_AR_STATUS_AR_PLUS = 3;
}

enum OnboardingEventIds {
	ONBOARDING_EVENT_IDS_TOS_ACCEPTED = 0;
	ONBOARDING_EVENT_IDS_PRIVACY_ACCEPTED = 1;
	ONBOARDING_EVENT_IDS_CONVERSATION = 2;
	ONBOARDING_EVENT_IDS_ENCOUNTER_ENTER = 3;
	ONBOARDING_EVENT_IDS_ENCOUNTER_LEAVE = 4;
	ONBOARDING_EVENT_IDS_AVATAR_SELECTION = 5;
	ONBOARDING_EVENT_IDS_AVATAR_GENDER = 6;
	ONBOARDING_EVENT_IDS_AVATAR_GENDER_CHOSEN = 7;
	ONBOARDING_EVENT_IDS_AVATAR_HEAD_CHOSEN = 8;
	ONBOARDING_EVENT_IDS_AVATAR_BODY_CHOSEN = 9;
	ONBOARDING_EVENT_IDS_AVATAR_TRY_AGAIN = 10;
	ONBOARDING_EVENT_IDS_AVATAR_ACCEPTED = 11;
	ONBOARDING_EVENT_IDS_NAME_ENTRY = 12;
	ONBOARDING_EVENT_IDS_NAME_UNAVAILABLE = 13;
	ONBOARDING_EVENT_IDS_NAME_ACCEPTED = 14;
	ONBOARDING_EVENT_IDS_POKEDEX_TUTORIAL_STARTED = 15;
	ONBOARDING_EVENT_IDS_POKEDEX_TUTORIAL_INFO_PANEL_EXIT_PRESSED = 16;
	ONBOARDING_EVENT_IDS_POKEDEX_EXIT_PRESSED = 17;
	ONBOARDING_EVENT_IDS_EGG_TUTORIAL_STARTED = 18;
	ONBOARDING_EVENT_IDS_EGG_TUTORIAL_PRESS = 19;
	ONBOARDING_EVENT_IDS_EGG_TUTORIAL_FINISHED = 20;
	ONBOARDING_EVENT_IDS_POKESTOP_LETSGO = 21;
	ONBOARDING_EVENT_IDS_WILD_POKEMON_ENCOUNTER_ENTERED = 22;
	ONBOARDING_EVENT_IDS_WILD_POKEMON_CAUGHT = 23;
	ONBOARDING_EVENT_IDS_AR_STANDARD_ENABLED = 24;
	ONBOARDING_EVENT_IDS_AR_STANDARD_REJECTED = 25;
	ONBOARDING_EVENT_IDS_AR_PLUS_ENABLED = 26;
	ONBOARDING_EVENT_IDS_AR_PLUS_REJECTED = 27;
	ONBOARDING_EVENT_IDS_SEE_TOS_MODAL = 28;
	ONBOARDING_EVENT_IDS_TOS_DECLINED = 29;
	ONBOARDING_EVENT_IDS_SEE_PRIVACY_MODAL = 30;
	ONBOARDING_EVENT_IDS_INTRO_DIALOG_COMPLETE = 31;
	ONBOARDING_EVENT_IDS_CATCH_DIALOG_COMPLETE = 32;
	ONBOARDING_EVENT_IDS_USERNAME_DIALOG_COMPLETE = 33;
	ONBOARDING_EVENT_IDS_POKESTOP_DIALOG_COMPLETE = 34;
	ONBOARDING_EVENT_IDS_ACCEPTED_TOS = 35;
}

enum OnboardingPathIds {
	ONBOARDING_PATH_IDS_V1 = 0;
	ONBOARDING_PATH_IDS_V2 = 1;
	ONBOARDING_PATH_IDS_VERSION_1 = 2;
}

enum PCNMLNDPOML {
	PCNMLNDPOML_POKEMON_UNSET = 0;
	PCNMLNDPOML_V0001_POKEMON_BULBASAUR = 1;
	PCNMLNDPOML_V0002_POKEMON_IVYSAUR = 2;
	PCNMLNDPOML_V0003_POKEMON_VENUSAUR = 3;
	PCNMLNDPOML_V0004_POKEMON_CHARMANDER = 4;
	PCNMLNDPOML_V0005_POKEMON_CHARMELEON = 5;
	PCNMLNDPOML_V0006_POKEMON_CHARIZARD = 6;
	PCNMLNDPOML_V0007_POKEMON_SQUIRTLE = 7;
	PCNMLNDPOML_V0008_POKEMON_WARTORTLE = 8;
	PCNMLNDPOML_V0009_POKEMON_BLASTOISE = 9;
	PCNMLNDPOML_V0010_POKEMON_CATERPIE = 10;
	PCNMLNDPOML_V0011_POKEMON_METAPOD = 11;
	PCNMLNDPOML_V0012_POKEMON_BUTTERFREE = 12;
	PCNMLNDPOML_V0013_POKEMON_WEEDLE = 13;
	PCNMLNDPOML_V0014_POKEMON_KAKUNA = 14;
	PCNMLNDPOML_V0015_POKEMON_BEEDRILL = 15;
	PCNMLNDPOML_V0016_POKEMON_PIDGEY = 16;
	PCNMLNDPOML_V0017_POKEMON_PIDGEOTTO = 17;
	PCNMLNDPOML_V0018_POKEMON_PIDGEOT = 18;
	PCNMLNDPOML_V0019_POKEMON_RATTATA = 19;
	PCNMLNDPOML_V0020_POKEMON_RATICATE = 20;
	PCNMLNDPOML_V0021_POKEMON_SPEAROW = 21;
	PCNMLNDPOML_V0022_POKEMON_FEAROW = 22;
	PCNMLNDPOML_V0023_POKEMON_EKANS = 23;
	PCNMLNDPOML_V0024_POKEMON_ARBOK = 24;
	PCNMLNDPOML_V0025_POKEMON_PIKACHU = 25;
	PCNMLNDPOML_V0026_POKEMON_RAICHU = 26;
	PCNMLNDPOML_V0027_POKEMON_SANDSHREW = 27;
	PCNMLNDPOML_V0028_POKEMON_SANDSLASH = 28;
	PCNMLNDPOML_V0029_POKEMON_NIDORAN = 29;
	PCNMLNDPOML_V0030_POKEMON_NIDORINA = 30;
	PCNMLNDPOML_V0031_POKEMON_NIDOQUEEN = 31;
	PCNMLNDPOML_V0032_POKEMON_NIDORAN = 32;
	PCNMLNDPOML_V0033_POKEMON_NIDORINO = 33;
	PCNMLNDPOML_V0034_POKEMON_NIDOKING = 34;
	PCNMLNDPOML_V0035_POKEMON_CLEFAIRY = 35;
	PCNMLNDPOML_V0036_POKEMON_CLEFABLE = 36;
	PCNMLNDPOML_V0037_POKEMON_VULPIX = 37;
	PCNMLNDPOML_V0038_POKEMON_NINETALES = 38;
	PCNMLNDPOML_V0039_POKEMON_JIGGLYPUFF = 39;
	PCNMLNDPOML_V0040_POKEMON_WIGGLYTUFF = 40;
	PCNMLNDPOML_V0041_POKEMON_ZUBAT = 41;
	PCNMLNDPOML_V0042_POKEMON_GOLBAT = 42;
	PCNMLNDPOML_V0043_POKEMON_ODDISH = 43;
	PCNMLNDPOML_V0044_POKEMON_GLOOM = 44;
	PCNMLNDPOML_V0045_POKEMON_VILEPLUME = 45;
	PCNMLNDPOML_V0046_POKEMON_PARAS = 46;
	PCNMLNDPOML_V0047_POKEMON_PARASECT = 47;
	PCNMLNDPOML_V0048_POKEMON_VENONAT = 48;
	PCNMLNDPOML_V0049_POKEMON_VENOMOTH = 49;
	PCNMLNDPOML_V0050_POKEMON_DIGLETT = 50;
	PCNMLNDPOML_V0051_POKEMON_DUGTRIO = 51;
	PCNMLNDPOML_V0052_POKEMON_MEOWTH = 52;
	PCNMLNDPOML_V0053_POKEMON_PERSIAN = 53;
	PCNMLNDPOML_V0054_POKEMON_PSYDUCK = 54;
	PCNMLNDPOML_V0055_POKEMON_GOLDUCK = 55;
	PCNMLNDPOML_V0056_POKEMON_MANKEY = 56;
	PCNMLNDPOML_V0057_POKEMON_PRIMEAPE = 57;
	PCNMLNDPOML_V0058_POKEMON_GROWLITHE = 58;
	PCNMLNDPOML_V0059_POKEMON_ARCANINE = 59;
	PCNMLNDPOML_V0060_POKEMON_POLIWAG = 60;
	PCNMLNDPOML_V0061_POKEMON_POLIWHIRL = 61;
	PCNMLNDPOML_V0062_POKEMON_POLIWRATH = 62;
	PCNMLNDPOML_V0063_POKEMON_ABRA = 63;
	PCNMLNDPOML_V0064_POKEMON_KADABRA = 64;
	PCNMLNDPOML_V0065_POKEMON_ALAKAZAM = 65;
	PCNMLNDPOML_V0066_POKEMON_MACHOP = 66;
	PCNMLNDPOML_V0067_POKEMON_MACHOKE = 67;
	PCNMLNDPOML_V0068_POKEMON_MACHAMP = 68;
	PCNMLNDPOML_V0069_POKEMON_BELLSPROUT = 69;
	PCNMLNDPOML_V0070_POKEMON_WEEPINBELL = 70;
	PCNMLNDPOML_V0071_POKEMON_VICTREEBEL = 71;
	PCNMLNDPOML_V0072_POKEMON_TENTACOOL = 72;
	PCNMLNDPOML_V0073_POKEMON_TENTACRUEL = 73;
	PCNMLNDPOML_V0074_POKEMON_GEODUDE = 74;
	PCNMLNDPOML_V0075_POKEMON_GRAVELER = 75;
	PCNMLNDPOML_V0076_POKEMON_GOLEM = 76;
	PCNMLNDPOML_V0077_POKEMON_PONYTA = 77;
	PCNMLNDPOML_V0078_POKEMON_RAPIDASH = 78;
	PCNMLNDPOML_V0079_POKEMON_SLOWPOKE = 79;
	PCNMLNDPOML_V0080_POKEMON_SLOWBRO = 80;
	PCNMLNDPOML_V0081_POKEMON_MAGNEMITE = 81;
	PCNMLNDPOML_V0082_POKEMON_MAGNETON = 82;
	PCNMLNDPOML_V0083_POKEMON_FARFETCHD = 83;
	PCNMLNDPOML_V0084_POKEMON_DODUO = 84;
	PCNMLNDPOML_V0085_POKEMON_DODRIO = 85;
	PCNMLNDPOML_V0086_POKEMON_SEEL = 86;
	PCNMLNDPOML_V0087_POKEMON_DEWGONG = 87;
	PCNMLNDPOML_V0088_POKEMON_GRIMER = 88;
	PCNMLNDPOML_V0089_POKEMON_MUK = 89;
	PCNMLNDPOML_V0090_POKEMON_SHELLDER = 90;
	PCNMLNDPOML_V0091_POKEMON_CLOYSTER = 91;
	PCNMLNDPOML_V0092_POKEMON_GASTLY = 92;
	PCNMLNDPOML_V0093_POKEMON_HAUNTER = 93;
	PCNMLNDPOML_V0094_POKEMON_GENGAR = 94;
	PCNMLNDPOML_V0095_POKEMON_ONIX = 95;
	PCNMLNDPOML_V0096_POKEMON_DROWZEE = 96;
	PCNMLNDPOML_V0097_POKEMON_HYPNO = 97;
	PCNMLNDPOML_V0098_POKEMON_KRABBY = 98;
	PCNMLNDPOML_V0099_POKEMON_KINGLER = 99;
	PCNMLNDPOML_V0100_POKEMON_VOLTORB = 100;
	PCNMLNDPOML_V0101_POKEMON_ELECTRODE = 101;
	PCNMLNDPOML_V0102_POKEMON_EXEGGCUTE = 102;
	PCNMLNDPOML_V0103_POKEMON_EXEGGUTOR = 103;
	PCNMLNDPOML_V0104_POKEMON_CUBONE = 104;
	PCNMLNDPOML_V0105_POKEMON_MAROWAK = 105;
	PCNMLNDPOML_V0106_POKEMON_HITMONLEE = 106;
	PCNMLNDPOML_V0107_POKEMON_HITMONCHAN = 107;
	PCNMLNDPOML_V0108_POKEMON_LICKITUNG = 108;
	PCNMLNDPOML_V0109_POKEMON_KOFFING = 109;
	PCNMLNDPOML_V0110_POKEMON_WEEZING = 110;
	PCNMLNDPOML_V0111_POKEMON_RHYHORN = 111;
	PCNMLNDPOML_V0112_POKEMON_RHYDON = 112;
	PCNMLNDPOML_V0113_POKEMON_CHANSEY = 113;
	PCNMLNDPOML_V0114_POKEMON_TANGELA = 114;
	PCNMLNDPOML_V0115_POKEMON_KANGASKHAN = 115;
	PCNMLNDPOML_V0116_POKEMON_HORSEA = 116;
	PCNMLNDPOML_V0117_POKEMON_SEADRA = 117;
	PCNMLNDPOML_V0118_POKEMON_GOLDEEN = 118;
	PCNMLNDPOML_V0119_POKEMON_SEAKING = 119;
	PCNMLNDPOML_V0120_POKEMON_STARYU = 120;
	PCNMLNDPOML_V0121_POKEMON_STARMIE = 121;
	PCNMLNDPOML_V0122_POKEMON_MR_MIME = 122;
	PCNMLNDPOML_V0123_POKEMON_SCYTHER = 123;
	PCNMLNDPOML_V0124_POKEMON_JYNX = 124;
	PCNMLNDPOML_V0125_POKEMON_ELECTABUZZ = 125;
	PCNMLNDPOML_V0126_POKEMON_MAGMAR = 126;
	PCNMLNDPOML_V0127_POKEMON_PINSIR = 127;
	PCNMLNDPOML_V0128_POKEMON_TAUROS = 128;
	PCNMLNDPOML_V0129_POKEMON_MAGIKARP = 129;
	PCNMLNDPOML_V0130_POKEMON_GYARADOS = 130;
	PCNMLNDPOML_V0131_POKEMON_LAPRAS = 131;
	PCNMLNDPOML_V0132_POKEMON_DITTO = 132;
	PCNMLNDPOML_V0133_POKEMON_EEVEE = 133;
	PCNMLNDPOML_V0134_POKEMON_VAPOREON = 134;
	PCNMLNDPOML_V0135_POKEMON_JOLTEON = 135;
	PCNMLNDPOML_V0136_POKEMON_FLAREON = 136;
	PCNMLNDPOML_V0137_POKEMON_PORYGON = 137;
	PCNMLNDPOML_V0138_POKEMON_OMANYTE = 138;
	PCNMLNDPOML_V0139_POKEMON_OMASTAR = 139;
	PCNMLNDPOML_V0140_POKEMON_KABUTO = 140;
	PCNMLNDPOML_V0141_POKEMON_KABUTOPS = 141;
	PCNMLNDPOML_V0142_POKEMON_AERODACTYL = 142;
	PCNMLNDPOML_V0143_POKEMON_SNORLAX = 143;
	PCNMLNDPOML_V0144_POKEMON_ARTICUNO = 144;
	PCNMLNDPOML_V0145_POKEMON_ZAPDOS = 145;
	PCNMLNDPOML_V0146_POKEMON_MOLTRES = 146;
	PCNMLNDPOML_V0147_POKEMON_DRATINI = 147;
	PCNMLNDPOML_V0148_POKEMON_DRAGONAIR = 148;
	PCNMLNDPOML_V0149_POKEMON_DRAGONITE = 149;
	PCNMLNDPOML_V0150_POKEMON_MEWTWO = 150;
	PCNMLNDPOML_V0151_POKEMON_MEW = 151;
	PCNMLNDPOML_V0152_POKEMON_CHIKORITA = 152;
	PCNMLNDPOML_V0153_POKEMON_BAYLEEF = 153;
	PCNMLNDPOML_V0154_POKEMON_MEGANIUM = 154;
	PCNMLNDPOML_V0155_POKEMON_CYNDAQUIL = 155;
	PCNMLNDPOML_V0156_POKEMON_QUILAVA = 156;
	PCNMLNDPOML_V0157_POKEMON_TYPHLOSION = 157;
	PCNMLNDPOML_V0158_POKEMON_TOTODILE = 158;
	PCNMLNDPOML_V0159_POKEMON_CROCONAW = 159;
	PCNMLNDPOML_V0160_POKEMON_FERALIGATR = 160;
	PCNMLNDPOML_V0161_POKEMON_SENTRET = 161;
	PCNMLNDPOML_V0162_POKEMON_FURRET = 162;
	PCNMLNDPOML_V0163_POKEMON_HOOTHOOT = 163;
	PCNMLNDPOML_V0164_POKEMON_NOCTOWL = 164;
	PCNMLNDPOML_V0165_POKEMON_LEDYBA = 165;
	PCNMLNDPOML_V0166_POKEMON_LEDIAN = 166;
	PCNMLNDPOML_V0167_POKEMON_SPINARAK = 167;
	PCNMLNDPOML_V0168_POKEMON_ARIADOS = 168;
	PCNMLNDPOML_V0169_POKEMON_CROBAT = 169;
	PCNMLNDPOML_V0170_POKEMON_CHINCHOU = 170;
	PCNMLNDPOML_V0171_POKEMON_LANTURN = 171;
	PCNMLNDPOML_V0172_POKEMON_PICHU = 172;
	PCNMLNDPOML_V0173_POKEMON_CLEFFA = 173;
	PCNMLNDPOML_V0174_POKEMON_IGGLYBUFF = 174;
	PCNMLNDPOML_V0175_POKEMON_TOGEPI = 175;
	PCNMLNDPOML_V0176_POKEMON_TOGETIC = 176;
	PCNMLNDPOML_V0177_POKEMON_NATU = 177;
	PCNMLNDPOML_V0178_POKEMON_XATU = 178;
	PCNMLNDPOML_V0179_POKEMON_MAREEP = 179;
	PCNMLNDPOML_V0180_POKEMON_FLAAFFY = 180;
	PCNMLNDPOML_V0181_POKEMON_AMPHAROS = 181;
	PCNMLNDPOML_V0182_POKEMON_BELLOSSOM = 182;
	PCNMLNDPOML_V0183_POKEMON_MARILL = 183;
	PCNMLNDPOML_V0184_POKEMON_AZUMARILL = 184;
	PCNMLNDPOML_V0185_POKEMON_SUDOWOODO = 185;
	PCNMLNDPOML_V0186_POKEMON_POLITOED = 186;
	PCNMLNDPOML_V0187_POKEMON_HOPPIP = 187;
	PCNMLNDPOML_V0188_POKEMON_SKIPLOOM = 188;
	PCNMLNDPOML_V0189_POKEMON_JUMPLUFF = 189;
	PCNMLNDPOML_V0190_POKEMON_AIPOM = 190;
	PCNMLNDPOML_V0191_POKEMON_SUNKERN = 191;
	PCNMLNDPOML_V0192_POKEMON_SUNFLORA = 192;
	PCNMLNDPOML_V0193_POKEMON_YANMA = 193;
	PCNMLNDPOML_V0194_POKEMON_WOOPER = 194;
	PCNMLNDPOML_V0195_POKEMON_QUAGSIRE = 195;
	PCNMLNDPOML_V0196_POKEMON_ESPEON = 196;
	PCNMLNDPOML_V0197_POKEMON_UMBREON = 197;
	PCNMLNDPOML_V0198_POKEMON_MURKROW = 198;
	PCNMLNDPOML_V0199_POKEMON_SLOWKING = 199;
	PCNMLNDPOML_V0200_POKEMON_MISDREAVUS = 200;
	PCNMLNDPOML_V0201_POKEMON_UNOWN = 201;
	PCNMLNDPOML_V0202_POKEMON_WOBBUFFET = 202;
	PCNMLNDPOML_V0203_POKEMON_GIRAFARIG = 203;
	PCNMLNDPOML_V0204_POKEMON_PINECO = 204;
	PCNMLNDPOML_V0205_POKEMON_FORRETRESS = 205;
	PCNMLNDPOML_V0206_POKEMON_DUNSPARCE = 206;
	PCNMLNDPOML_V0207_POKEMON_GLIGAR = 207;
	PCNMLNDPOML_V0208_POKEMON_STEELIX = 208;
	PCNMLNDPOML_V0209_POKEMON_SNUBBULL = 209;
	PCNMLNDPOML_V0210_POKEMON_GRANBULL = 210;
	PCNMLNDPOML_V0211_POKEMON_QWILFISH = 211;
	PCNMLNDPOML_V0212_POKEMON_SCIZOR = 212;
	PCNMLNDPOML_V0213_POKEMON_SHUCKLE = 213;
	PCNMLNDPOML_V0214_POKEMON_HERACROSS = 214;
	PCNMLNDPOML_V0215_POKEMON_SNEASEL = 215;
	PCNMLNDPOML_V0216_POKEMON_TEDDIURSA = 216;
	PCNMLNDPOML_V0217_POKEMON_URSARING = 217;
	PCNMLNDPOML_V0218_POKEMON_SLUGMA = 218;
	PCNMLNDPOML_V0219_POKEMON_MAGCARGO = 219;
	PCNMLNDPOML_V0220_POKEMON_SWINUB = 220;
	PCNMLNDPOML_V0221_POKEMON_PILOSWINE = 221;
	PCNMLNDPOML_V0222_POKEMON_CORSOLA = 222;
	PCNMLNDPOML_V0223_POKEMON_REMORAID = 223;
	PCNMLNDPOML_V0224_POKEMON_OCTILLERY = 224;
	PCNMLNDPOML_V0225_POKEMON_DELIBIRD = 225;
	PCNMLNDPOML_V0226_POKEMON_MANTINE = 226;
	PCNMLNDPOML_V0227_POKEMON_SKARMORY = 227;
	PCNMLNDPOML_V0228_POKEMON_HOUNDOUR = 228;
	PCNMLNDPOML_V0229_POKEMON_HOUNDOOM = 229;
	PCNMLNDPOML_V0230_POKEMON_KINGDRA = 230;
	PCNMLNDPOML_V0231_POKEMON_PHANPY = 231;
	PCNMLNDPOML_V0232_POKEMON_DONPHAN = 232;
	PCNMLNDPOML_V0233_POKEMON_PORYGON2 = 233;
	PCNMLNDPOML_V0234_POKEMON_STANTLER = 234;
	PCNMLNDPOML_V0235_POKEMON_SMEARGLE = 235;
	PCNMLNDPOML_V0236_POKEMON_TYROGUE = 236;
	PCNMLNDPOML_V0237_POKEMON_HITMONTOP = 237;
	PCNMLNDPOML_V0238_POKEMON_SMOOCHUM = 238;
	PCNMLNDPOML_V0239_POKEMON_ELEKID = 239;
	PCNMLNDPOML_V0240_POKEMON_MAGBY = 240;
	PCNMLNDPOML_V0241_POKEMON_MILTANK = 241;
	PCNMLNDPOML_V0242_POKEMON_BLISSEY = 242;
	PCNMLNDPOML_V0243_POKEMON_RAIKOU = 243;
	PCNMLNDPOML_V0244_POKEMON_ENTEI = 244;
	PCNMLNDPOML_V0245_POKEMON_SUICUNE = 245;
	PCNMLNDPOML_V0246_POKEMON_LARVITAR = 246;
	PCNMLNDPOML_V0247_POKEMON_PUPITAR = 247;
	PCNMLNDPOML_V0248_POKEMON_TYRANITAR = 248;
	PCNMLNDPOML_V0249_POKEMON_LUGIA = 249;
	PCNMLNDPOML_V0250_POKEMON_HO_OH = 250;
	PCNMLNDPOML_V0251_POKEMON_CELEBI = 251;
	PCNMLNDPOML_V0252_POKEMON_TREECKO = 252;
	PCNMLNDPOML_V0253_POKEMON_GROVYLE = 253;
	PCNMLNDPOML_V0254_POKEMON_SCEPTILE = 254;
	PCNMLNDPOML_V0255_POKEMON_TORCHIC = 255;
	PCNMLNDPOML_V0256_POKEMON_COMBUSKEN = 256;
	PCNMLNDPOML_V0257_POKEMON_BLAZIKEN = 257;
	PCNMLNDPOML_V0258_POKEMON_MUDKIP = 258;
	PCNMLNDPOML_V0259_POKEMON_MARSHTOMP = 259;
	PCNMLNDPOML_V0260_POKEMON_SWAMPERT = 260;
	PCNMLNDPOML_V0261_POKEMON_POOCHYENA = 261;
	PCNMLNDPOML_V0262_POKEMON_MIGHTYENA = 262;
	PCNMLNDPOML_V0263_POKEMON_ZIGZAGOON = 263;
	PCNMLNDPOML_V0264_POKEMON_LINOONE = 264;
	PCNMLNDPOML_V0265_POKEMON_WURMPLE = 265;
	PCNMLNDPOML_V0266_POKEMON_SILCOON = 266;
	PCNMLNDPOML_V0267_POKEMON_BEAUTIFLY = 267;
	PCNMLNDPOML_V0268_POKEMON_CASCOON = 268;
	PCNMLNDPOML_V0269_POKEMON_DUSTOX = 269;
	PCNMLNDPOML_V0270_POKEMON_LOTAD = 270;
	PCNMLNDPOML_V0271_POKEMON_LOMBRE = 271;
	PCNMLNDPOML_V0272_POKEMON_LUDICOLO = 272;
	PCNMLNDPOML_V0273_POKEMON_SEEDOT = 273;
	PCNMLNDPOML_V0274_POKEMON_NUZLEAF = 274;
	PCNMLNDPOML_V0275_POKEMON_SHIFTRY = 275;
	PCNMLNDPOML_V0276_POKEMON_TAILLOW = 276;
	PCNMLNDPOML_V0277_POKEMON_SWELLOW = 277;
	PCNMLNDPOML_V0278_POKEMON_WINGULL = 278;
	PCNMLNDPOML_V0279_POKEMON_PELIPPER = 279;
	PCNMLNDPOML_V0280_POKEMON_RALTS = 280;
	PCNMLNDPOML_V0281_POKEMON_KIRLIA = 281;
	PCNMLNDPOML_V0282_POKEMON_GARDEVOIR = 282;
	PCNMLNDPOML_V0283_POKEMON_SURSKIT = 283;
	PCNMLNDPOML_V0284_POKEMON_MASQUERAIN = 284;
	PCNMLNDPOML_V0285_POKEMON_SHROOMISH = 285;
	PCNMLNDPOML_V0286_POKEMON_BRELOOM = 286;
	PCNMLNDPOML_V0287_POKEMON_SLAKOTH = 287;
	PCNMLNDPOML_V0288_POKEMON_VIGOROTH = 288;
	PCNMLNDPOML_V0289_POKEMON_SLAKING = 289;
	PCNMLNDPOML_V0290_POKEMON_NINCADA = 290;
	PCNMLNDPOML_V0291_POKEMON_NINJASK = 291;
	PCNMLNDPOML_V0292_POKEMON_SHEDINJA = 292;
	PCNMLNDPOML_V0293_POKEMON_WHISMUR = 293;
	PCNMLNDPOML_V0294_POKEMON_LOUDRED = 294;
	PCNMLNDPOML_V0295_POKEMON_EXPLOUD = 295;
	PCNMLNDPOML_V0296_POKEMON_MAKUHITA = 296;
	PCNMLNDPOML_V0297_POKEMON_HARIYAMA = 297;
	PCNMLNDPOML_V0298_POKEMON_AZURILL = 298;
	PCNMLNDPOML_V0299_POKEMON_NOSEPASS = 299;
	PCNMLNDPOML_V0300_POKEMON_SKITTY = 300;
	PCNMLNDPOML_V0301_POKEMON_DELCATTY = 301;
	PCNMLNDPOML_V0302_POKEMON_SABLEYE = 302;
	PCNMLNDPOML_V0303_POKEMON_MAWILE = 303;
	PCNMLNDPOML_V0304_POKEMON_ARON = 304;
	PCNMLNDPOML_V0305_POKEMON_LAIRON = 305;
	PCNMLNDPOML_V0306_POKEMON_AGGRON = 306;
	PCNMLNDPOML_V0307_POKEMON_MEDITITE = 307;
	PCNMLNDPOML_V0308_POKEMON_MEDICHAM = 308;
	PCNMLNDPOML_V0309_POKEMON_ELECTRIKE = 309;
	PCNMLNDPOML_V0310_POKEMON_MANECTRIC = 310;
	PCNMLNDPOML_V0311_POKEMON_PLUSLE = 311;
	PCNMLNDPOML_V0312_POKEMON_MINUN = 312;
	PCNMLNDPOML_V0313_POKEMON_VOLBEAT = 313;
	PCNMLNDPOML_V0314_POKEMON_ILLUMISE = 314;
	PCNMLNDPOML_V0315_POKEMON_ROSELIA = 315;
	PCNMLNDPOML_V0316_POKEMON_GULPIN = 316;
	PCNMLNDPOML_V0317_POKEMON_SWALOT = 317;
	PCNMLNDPOML_V0318_POKEMON_CARVANHA = 318;
	PCNMLNDPOML_V0319_POKEMON_SHARPEDO = 319;
	PCNMLNDPOML_V0320_POKEMON_WAILMER = 320;
	PCNMLNDPOML_V0321_POKEMON_WAILORD = 321;
	PCNMLNDPOML_V0322_POKEMON_NUMEL = 322;
	PCNMLNDPOML_V0323_POKEMON_CAMERUPT = 323;
	PCNMLNDPOML_V0324_POKEMON_TORKOAL = 324;
	PCNMLNDPOML_V0325_POKEMON_SPOINK = 325;
	PCNMLNDPOML_V0326_POKEMON_GRUMPIG = 326;
	PCNMLNDPOML_V0327_POKEMON_SPINDA = 327;
	PCNMLNDPOML_V0328_POKEMON_TRAPINCH = 328;
	PCNMLNDPOML_V0329_POKEMON_VIBRAVA = 329;
	PCNMLNDPOML_V0330_POKEMON_FLYGON = 330;
	PCNMLNDPOML_V0331_POKEMON_CACNEA = 331;
	PCNMLNDPOML_V0332_POKEMON_CACTURNE = 332;
	PCNMLNDPOML_V0333_POKEMON_SWABLU = 333;
	PCNMLNDPOML_V0334_POKEMON_ALTARIA = 334;
	PCNMLNDPOML_V0335_POKEMON_ZANGOOSE = 335;
	PCNMLNDPOML_V0336_POKEMON_SEVIPER = 336;
	PCNMLNDPOML_V0337_POKEMON_LUNATONE = 337;
	PCNMLNDPOML_V0338_POKEMON_SOLROCK = 338;
	PCNMLNDPOML_V0339_POKEMON_BARBOACH = 339;
	PCNMLNDPOML_V0340_POKEMON_WHISCASH = 340;
	PCNMLNDPOML_V0341_POKEMON_CORPHISH = 341;
	PCNMLNDPOML_V0342_POKEMON_CRAWDAUNT = 342;
	PCNMLNDPOML_V0343_POKEMON_BALTOY = 343;
	PCNMLNDPOML_V0344_POKEMON_CLAYDOL = 344;
	PCNMLNDPOML_V0345_POKEMON_LILEEP = 345;
	PCNMLNDPOML_V0346_POKEMON_CRADILY = 346;
	PCNMLNDPOML_V0347_POKEMON_ANORITH = 347;
	PCNMLNDPOML_V0348_POKEMON_ARMALDO = 348;
	PCNMLNDPOML_V0349_POKEMON_FEEBAS = 349;
	PCNMLNDPOML_V0350_POKEMON_MILOTIC = 350;
	PCNMLNDPOML_V0351_POKEMON_CASTFORM = 351;
	PCNMLNDPOML_V0352_POKEMON_KECLEON = 352;
	PCNMLNDPOML_V0353_POKEMON_SHUPPET = 353;
	PCNMLNDPOML_V0354_POKEMON_BANETTE = 354;
	PCNMLNDPOML_V0355_POKEMON_DUSKULL = 355;
	PCNMLNDPOML_V0356_POKEMON_DUSCLOPS = 356;
	PCNMLNDPOML_V0357_POKEMON_TROPIUS = 357;
	PCNMLNDPOML_V0358_POKEMON_CHIMECHO = 358;
	PCNMLNDPOML_V0359_POKEMON_ABSOL = 359;
	PCNMLNDPOML_V0360_POKEMON_WYNAUT = 360;
	PCNMLNDPOML_V0361_POKEMON_SNORUNT = 361;
	PCNMLNDPOML_V0362_POKEMON_GLALIE = 362;
	PCNMLNDPOML_V0363_POKEMON_SPHEAL = 363;
	PCNMLNDPOML_V0364_POKEMON_SEALEO = 364;
	PCNMLNDPOML_V0365_POKEMON_WALREIN = 365;
	PCNMLNDPOML_V0366_POKEMON_CLAMPERL = 366;
	PCNMLNDPOML_V0367_POKEMON_HUNTAIL = 367;
	PCNMLNDPOML_V0368_POKEMON_GOREBYSS = 368;
	PCNMLNDPOML_V0369_POKEMON_RELICANTH = 369;
	PCNMLNDPOML_V0370_POKEMON_LUVDISC = 370;
	PCNMLNDPOML_V0371_POKEMON_BAGON = 371;
	PCNMLNDPOML_V0372_POKEMON_SHELGON = 372;
	PCNMLNDPOML_V0373_POKEMON_SALAMENCE = 373;
	PCNMLNDPOML_V0374_POKEMON_BELDUM = 374;
	PCNMLNDPOML_V0375_POKEMON_METANG = 375;
	PCNMLNDPOML_V0376_POKEMON_METAGROSS = 376;
	PCNMLNDPOML_V0377_POKEMON_REGIROCK = 377;
	PCNMLNDPOML_V0378_POKEMON_REGICE = 378;
	PCNMLNDPOML_V0379_POKEMON_REGISTEEL = 379;
	PCNMLNDPOML_V0380_POKEMON_LATIAS = 380;
	PCNMLNDPOML_V0381_POKEMON_LATIOS = 381;
	PCNMLNDPOML_V0382_POKEMON_KYOGRE = 382;
	PCNMLNDPOML_V0383_POKEMON_GROUDON = 383;
	PCNMLNDPOML_V0384_POKEMON_RAYQUAZA = 384;
	PCNMLNDPOML_V0385_POKEMON_JIRACHI = 385;
	PCNMLNDPOML_V0386_POKEMON_DEOXYS = 386;
	PCNMLNDPOML_V0387_POKEMON_TURTWIG = 387;
	PCNMLNDPOML_V0388_POKEMON_GROTLE = 388;
	PCNMLNDPOML_V0389_POKEMON_TORTERRA = 389;
	PCNMLNDPOML_V0390_POKEMON_CHIMCHAR = 390;
	PCNMLNDPOML_V0391_POKEMON_MONFERNO = 391;
	PCNMLNDPOML_V0392_POKEMON_INFERNAPE = 392;
	PCNMLNDPOML_V0393_POKEMON_PIPLUP = 393;
	PCNMLNDPOML_V0394_POKEMON_PRINPLUP = 394;
	PCNMLNDPOML_V0395_POKEMON_EMPOLEON = 395;
	PCNMLNDPOML_V0396_POKEMON_STARLY = 396;
	PCNMLNDPOML_V0397_POKEMON_STARAVIA = 397;
	PCNMLNDPOML_V0398_POKEMON_STARAPTOR = 398;
	PCNMLNDPOML_V0399_POKEMON_BIDOOF = 399;
	PCNMLNDPOML_V0400_POKEMON_BIBAREL = 400;
	PCNMLNDPOML_V0401_POKEMON_KRICKETOT = 401;
	PCNMLNDPOML_V0402_POKEMON_KRICKETUNE = 402;
	PCNMLNDPOML_V0403_POKEMON_SHINX = 403;
	PCNMLNDPOML_V0404_POKEMON_LUXIO = 404;
	PCNMLNDPOML_V0405_POKEMON_LUXRAY = 405;
	PCNMLNDPOML_V0406_POKEMON_BUDEW = 406;
	PCNMLNDPOML_V0407_POKEMON_ROSERADE = 407;
	PCNMLNDPOML_V0408_POKEMON_CRANIDOS = 408;
	PCNMLNDPOML_V0409_POKEMON_RAMPARDOS = 409;
	PCNMLNDPOML_V0410_POKEMON_SHIELDON = 410;
	PCNMLNDPOML_V0411_POKEMON_BASTIODON = 411;
	PCNMLNDPOML_V0412_POKEMON_BURMY = 412;
	PCNMLNDPOML_V0413_POKEMON_WORMADAM = 413;
	PCNMLNDPOML_V0414_POKEMON_MOTHIM = 414;
	PCNMLNDPOML_V0415_POKEMON_COMBEE = 415;
	PCNMLNDPOML_V0416_POKEMON_VESPIQUEN = 416;
	PCNMLNDPOML_V0417_POKEMON_PACHIRISU = 417;
	PCNMLNDPOML_V0418_POKEMON_BUIZEL = 418;
	PCNMLNDPOML_V0419_POKEMON_FLOATZEL = 419;
	PCNMLNDPOML_V0420_POKEMON_CHERUBI = 420;
	PCNMLNDPOML_V0421_POKEMON_CHERRIM = 421;
	PCNMLNDPOML_V0422_POKEMON_SHELLOS = 422;
	PCNMLNDPOML_V0423_POKEMON_GASTRODON = 423;
	PCNMLNDPOML_V0424_POKEMON_AMBIPOM = 424;
	PCNMLNDPOML_V0425_POKEMON_DRIFLOON = 425;
	PCNMLNDPOML_V0426_POKEMON_DRIFBLIM = 426;
	PCNMLNDPOML_V0427_POKEMON_BUNEARY = 427;
	PCNMLNDPOML_V0428_POKEMON_LOPUNNY = 428;
	PCNMLNDPOML_V0429_POKEMON_MISMAGIUS = 429;
	PCNMLNDPOML_V0430_POKEMON_HONCHKROW = 430;
	PCNMLNDPOML_V0431_POKEMON_GLAMEOW = 431;
	PCNMLNDPOML_V0432_POKEMON_PURUGLY = 432;
	PCNMLNDPOML_V0433_POKEMON_CHINGLING = 433;
	PCNMLNDPOML_V0434_POKEMON_STUNKY = 434;
	PCNMLNDPOML_V0435_POKEMON_SKUNTANK = 435;
	PCNMLNDPOML_V0436_POKEMON_BRONZOR = 436;
	PCNMLNDPOML_V0437_POKEMON_BRONZONG = 437;
	PCNMLNDPOML_V0438_POKEMON_BONSLY = 438;
	PCNMLNDPOML_V0439_POKEMON_MIME_JR = 439;
	PCNMLNDPOML_V0440_POKEMON_HAPPINY = 440;
	PCNMLNDPOML_V0441_POKEMON_CHATOT = 441;
	PCNMLNDPOML_V0442_POKEMON_SPIRITOMB = 442;
	PCNMLNDPOML_V0443_POKEMON_GIBLE = 443;
	PCNMLNDPOML_V0444_POKEMON_GABITE = 444;
	PCNMLNDPOML_V0445_POKEMON_GARCHOMP = 445;
	PCNMLNDPOML_V0446_POKEMON_MUNCHLAX = 446;
	PCNMLNDPOML_V0447_POKEMON_RIOLU = 447;
	PCNMLNDPOML_V0448_POKEMON_LUCARIO = 448;
	PCNMLNDPOML_V0449_POKEMON_HIPPOPOTAS = 449;
	PCNMLNDPOML_V0450_POKEMON_HIPPOWDON = 450;
	PCNMLNDPOML_V0451_POKEMON_SKORUPI = 451;
	PCNMLNDPOML_V0452_POKEMON_DRAPION = 452;
	PCNMLNDPOML_V0453_POKEMON_CROAGUNK = 453;
	PCNMLNDPOML_V0454_POKEMON_TOXICROAK = 454;
	PCNMLNDPOML_V0455_POKEMON_CARNIVINE = 455;
	PCNMLNDPOML_V0456_POKEMON_FINNEON = 456;
	PCNMLNDPOML_V0457_POKEMON_LUMINEON = 457;
	PCNMLNDPOML_V0458_POKEMON_MANTYKE = 458;
	PCNMLNDPOML_V0459_POKEMON_SNOVER = 459;
	PCNMLNDPOML_V0460_POKEMON_ABOMASNOW = 460;
	PCNMLNDPOML_V0461_POKEMON_WEAVILE = 461;
	PCNMLNDPOML_V0462_POKEMON_MAGNEZONE = 462;
	PCNMLNDPOML_V0463_POKEMON_LICKILICKY = 463;
	PCNMLNDPOML_V0464_POKEMON_RHYPERIOR = 464;
	PCNMLNDPOML_V0465_POKEMON_TANGROWTH = 465;
	PCNMLNDPOML_V0466_POKEMON_ELECTIVIRE = 466;
	PCNMLNDPOML_V0467_POKEMON_MAGMORTAR = 467;
	PCNMLNDPOML_V0468_POKEMON_TOGEKISS = 468;
	PCNMLNDPOML_V0469_POKEMON_YANMEGA = 469;
	PCNMLNDPOML_V0470_POKEMON_LEAFEON = 470;
	PCNMLNDPOML_V0471_POKEMON_GLACEON = 471;
	PCNMLNDPOML_V0472_POKEMON_GLISCOR = 472;
	PCNMLNDPOML_V0473_POKEMON_MAMOSWINE = 473;
	PCNMLNDPOML_V0474_POKEMON_PORYGON_Z = 474;
	PCNMLNDPOML_V0475_POKEMON_GALLADE = 475;
	PCNMLNDPOML_V0476_POKEMON_PROBOPASS = 476;
	PCNMLNDPOML_V0477_POKEMON_DUSKNOIR = 477;
	PCNMLNDPOML_V0478_POKEMON_FROSLASS = 478;
	PCNMLNDPOML_V0479_POKEMON_ROTOM = 479;
	PCNMLNDPOML_V0480_POKEMON_UXIE = 480;
	PCNMLNDPOML_V0481_POKEMON_MESPRIT = 481;
	PCNMLNDPOML_V0482_POKEMON_AZELF = 482;
	PCNMLNDPOML_V0483_POKEMON_DIALGA = 483;
	PCNMLNDPOML_V0484_POKEMON_PALKIA = 484;
	PCNMLNDPOML_V0485_POKEMON_HEATRAN = 485;
	PCNMLNDPOML_V0486_POKEMON_REGIGIGAS = 486;
	PCNMLNDPOML_V0487_POKEMON_GIRATINA = 487;
	PCNMLNDPOML_V0488_POKEMON_CRESSELIA = 488;
	PCNMLNDPOML_V0489_POKEMON_PHIONE = 489;
	PCNMLNDPOML_V0490_POKEMON_MANAPHY = 490;
	PCNMLNDPOML_V0491_POKEMON_DARKRAI = 491;
	PCNMLNDPOML_V0492_POKEMON_SHAYMIN = 492;
	PCNMLNDPOML_V0493_POKEMON_ARCEUS = 493;
	PCNMLNDPOML_V0494_POKEMON_VICTINI = 494;
	PCNMLNDPOML_V0495_POKEMON_SNIVY = 495;
	PCNMLNDPOML_V0496_POKEMON_SERVINE = 496;
	PCNMLNDPOML_V0497_POKEMON_SERPERIOR = 497;
	PCNMLNDPOML_V0498_POKEMON_TEPIG = 498;
	PCNMLNDPOML_V0499_POKEMON_PIGNITE = 499;
	PCNMLNDPOML_V0500_POKEMON_EMBOAR = 500;
	PCNMLNDPOML_V0501_POKEMON_OSHAWOTT = 501;
	PCNMLNDPOML_V0502_POKEMON_DEWOTT = 502;
	PCNMLNDPOML_V0503_POKEMON_SAMUROTT = 503;
	PCNMLNDPOML_V0504_POKEMON_PATRAT = 504;
	PCNMLNDPOML_V0505_POKEMON_WATCHOG = 505;
	PCNMLNDPOML_V0506_POKEMON_LILLIPUP = 506;
	PCNMLNDPOML_V0507_POKEMON_HERDIER = 507;
	PCNMLNDPOML_V0508_POKEMON_STOUTLAND = 508;
	PCNMLNDPOML_V0509_POKEMON_PURRLOIN = 509;
	PCNMLNDPOML_V0510_POKEMON_LIEPARD = 510;
	PCNMLNDPOML_V0511_POKEMON_PANSAGE = 511;
	PCNMLNDPOML_V0512_POKEMON_SIMISAGE = 512;
	PCNMLNDPOML_V0513_POKEMON_PANSEAR = 513;
	PCNMLNDPOML_V0514_POKEMON_SIMISEAR = 514;
	PCNMLNDPOML_V0515_POKEMON_PANPOUR = 515;
	PCNMLNDPOML_V0516_POKEMON_SIMIPOUR = 516;
	PCNMLNDPOML_V0517_POKEMON_MUNNA = 517;
	PCNMLNDPOML_V0518_POKEMON_MUSHARNA = 518;
	PCNMLNDPOML_V0519_POKEMON_PIDOVE = 519;
	PCNMLNDPOML_V0520_POKEMON_TRANQUILL = 520;
	PCNMLNDPOML_V0521_POKEMON_UNFEZANT = 521;
	PCNMLNDPOML_V0522_POKEMON_BLITZLE = 522;
	PCNMLNDPOML_V0523_POKEMON_ZEBSTRIKA = 523;
	PCNMLNDPOML_V0524_POKEMON_ROGGENROLA = 524;
	PCNMLNDPOML_V0525_POKEMON_BOLDORE = 525;
	PCNMLNDPOML_V0526_POKEMON_GIGALITH = 526;
	PCNMLNDPOML_V0527_POKEMON_WOOBAT = 527;
	PCNMLNDPOML_V0528_POKEMON_SWOOBAT = 528;
	PCNMLNDPOML_V0529_POKEMON_DRILBUR = 529;
	PCNMLNDPOML_V0530_POKEMON_EXCADRILL = 530;
	PCNMLNDPOML_V0531_POKEMON_AUDINO = 531;
	PCNMLNDPOML_V0532_POKEMON_TIMBURR = 532;
	PCNMLNDPOML_V0533_POKEMON_GURDURR = 533;
	PCNMLNDPOML_V0534_POKEMON_CONKELDURR = 534;
	PCNMLNDPOML_V0535_POKEMON_TYMPOLE = 535;
	PCNMLNDPOML_V0536_POKEMON_PALPITOAD = 536;
	PCNMLNDPOML_V0537_POKEMON_SEISMITOAD = 537;
	PCNMLNDPOML_V0538_POKEMON_THROH = 538;
	PCNMLNDPOML_V0539_POKEMON_SAWK = 539;
	PCNMLNDPOML_V0540_POKEMON_SEWADDLE = 540;
	PCNMLNDPOML_V0541_POKEMON_SWADLOON = 541;
	PCNMLNDPOML_V0542_POKEMON_LEAVANNY = 542;
	PCNMLNDPOML_V0543_POKEMON_VENIPEDE = 543;
	PCNMLNDPOML_V0544_POKEMON_WHIRLIPEDE = 544;
	PCNMLNDPOML_V0545_POKEMON_SCOLIPEDE = 545;
	PCNMLNDPOML_V0546_POKEMON_COTTONEE = 546;
	PCNMLNDPOML_V0547_POKEMON_WHIMSICOTT = 547;
	PCNMLNDPOML_V0548_POKEMON_PETILIL = 548;
	PCNMLNDPOML_V0549_POKEMON_LILLIGANT = 549;
	PCNMLNDPOML_V0550_POKEMON_BASCULIN = 550;
	PCNMLNDPOML_V0551_POKEMON_SANDILE = 551;
	PCNMLNDPOML_V0552_POKEMON_KROKOROK = 552;
	PCNMLNDPOML_V0553_POKEMON_KROOKODILE = 553;
	PCNMLNDPOML_V0554_POKEMON_DARUMAKA = 554;
	PCNMLNDPOML_V0555_POKEMON_DARMANITAN = 555;
	PCNMLNDPOML_V0556_POKEMON_MARACTUS = 556;
	PCNMLNDPOML_V0557_POKEMON_DWEBBLE = 557;
	PCNMLNDPOML_V0558_POKEMON_CRUSTLE = 558;
	PCNMLNDPOML_V0559_POKEMON_SCRAGGY = 559;
	PCNMLNDPOML_V0560_POKEMON_SCRAFTY = 560;
	PCNMLNDPOML_V0561_POKEMON_SIGILYPH = 561;
	PCNMLNDPOML_V0562_POKEMON_YAMASK = 562;
	PCNMLNDPOML_V0563_POKEMON_COFAGRIGUS = 563;
	PCNMLNDPOML_V0564_POKEMON_TIRTOUGA = 564;
	PCNMLNDPOML_V0565_POKEMON_CARRACOSTA = 565;
	PCNMLNDPOML_V0566_POKEMON_ARCHEN = 566;
	PCNMLNDPOML_V0567_POKEMON_ARCHEOPS = 567;
	PCNMLNDPOML_V0568_POKEMON_TRUBBISH = 568;
	PCNMLNDPOML_V0569_POKEMON_GARBODOR = 569;
	PCNMLNDPOML_V0570_POKEMON_ZORUA = 570;
	PCNMLNDPOML_V0571_POKEMON_ZOROARK = 571;
	PCNMLNDPOML_V0572_POKEMON_MINCCINO = 572;
	PCNMLNDPOML_V0573_POKEMON_CINCCINO = 573;
	PCNMLNDPOML_V0574_POKEMON_GOTHITA = 574;
	PCNMLNDPOML_V0575_POKEMON_GOTHORITA = 575;
	PCNMLNDPOML_V0576_POKEMON_GOTHITELLE = 576;
	PCNMLNDPOML_V0577_POKEMON_SOLOSIS = 577;
	PCNMLNDPOML_V0578_POKEMON_DUOSION = 578;
	PCNMLNDPOML_V0579_POKEMON_REUNICLUS = 579;
	PCNMLNDPOML_V0580_POKEMON_DUCKLETT = 580;
	PCNMLNDPOML_V0581_POKEMON_SWANNA = 581;
	PCNMLNDPOML_V0582_POKEMON_VANILLITE = 582;
	PCNMLNDPOML_V0583_POKEMON_VANILLISH = 583;
	PCNMLNDPOML_V0584_POKEMON_VANILLUXE = 584;
	PCNMLNDPOML_V0585_POKEMON_DEERLING = 585;
	PCNMLNDPOML_V0586_POKEMON_SAWSBUCK = 586;
	PCNMLNDPOML_V0587_POKEMON_EMOLGA = 587;
	PCNMLNDPOML_V0588_POKEMON_KARRABLAST = 588;
	PCNMLNDPOML_V0589_POKEMON_ESCAVALIER = 589;
	PCNMLNDPOML_V0590_POKEMON_FOONGUS = 590;
	PCNMLNDPOML_V0591_POKEMON_AMOONGUSS = 591;
	PCNMLNDPOML_V0592_POKEMON_FRILLISH = 592;
	PCNMLNDPOML_V0593_POKEMON_JELLICENT = 593;
	PCNMLNDPOML_V0594_POKEMON_ALOMOMOLA = 594;
	PCNMLNDPOML_V0595_POKEMON_JOLTIK = 595;
	PCNMLNDPOML_V0596_POKEMON_GALVANTULA = 596;
	PCNMLNDPOML_V0597_POKEMON_FERROSEED = 597;
	PCNMLNDPOML_V0598_POKEMON_FERROTHORN = 598;
	PCNMLNDPOML_V0599_POKEMON_KLINK = 599;
	PCNMLNDPOML_V0600_POKEMON_KLANG = 600;
	PCNMLNDPOML_V0601_POKEMON_KLINKLANG = 601;
	PCNMLNDPOML_V0602_POKEMON_TYNAMO = 602;
	PCNMLNDPOML_V0603_POKEMON_EELEKTRIK = 603;
	PCNMLNDPOML_V0604_POKEMON_EELEKTROSS = 604;
	PCNMLNDPOML_V0605_POKEMON_ELGYEM = 605;
	PCNMLNDPOML_V0606_POKEMON_BEHEEYEM = 606;
	PCNMLNDPOML_V0607_POKEMON_LITWICK = 607;
	PCNMLNDPOML_V0608_POKEMON_LAMPENT = 608;
	PCNMLNDPOML_V0609_POKEMON_CHANDELURE = 609;
	PCNMLNDPOML_V0610_POKEMON_AXEW = 610;
	PCNMLNDPOML_V0611_POKEMON_FRAXURE = 611;
	PCNMLNDPOML_V0612_POKEMON_HAXORUS = 612;
	PCNMLNDPOML_V0613_POKEMON_CUBCHOO = 613;
	PCNMLNDPOML_V0614_POKEMON_BEARTIC = 614;
	PCNMLNDPOML_V0615_POKEMON_CRYOGONAL = 615;
	PCNMLNDPOML_V0616_POKEMON_SHELMET = 616;
	PCNMLNDPOML_V0617_POKEMON_ACCELGOR = 617;
	PCNMLNDPOML_V0618_POKEMON_STUNFISK = 618;
	PCNMLNDPOML_V0619_POKEMON_MIENFOO = 619;
	PCNMLNDPOML_V0620_POKEMON_MIENSHAO = 620;
	PCNMLNDPOML_V0621_POKEMON_DRUDDIGON = 621;
	PCNMLNDPOML_V0622_POKEMON_GOLETT = 622;
	PCNMLNDPOML_V0623_POKEMON_GOLURK = 623;
	PCNMLNDPOML_V0624_POKEMON_PAWNIARD = 624;
	PCNMLNDPOML_V0625_POKEMON_BISHARP = 625;
	PCNMLNDPOML_V0626_POKEMON_BOUFFALANT = 626;
	PCNMLNDPOML_V0627_POKEMON_RUFFLET = 627;
	PCNMLNDPOML_V0628_POKEMON_BRAVIARY = 628;
	PCNMLNDPOML_V0629_POKEMON_VULLABY = 629;
	PCNMLNDPOML_V0630_POKEMON_MANDIBUZZ = 630;
	PCNMLNDPOML_V0631_POKEMON_HEATMOR = 631;
	PCNMLNDPOML_V0632_POKEMON_DURANT = 632;
	PCNMLNDPOML_V0633_POKEMON_DEINO = 633;
	PCNMLNDPOML_V0634_POKEMON_ZWEILOUS = 634;
	PCNMLNDPOML_V0635_POKEMON_HYDREIGON = 635;
	PCNMLNDPOML_V0636_POKEMON_LARVESTA = 636;
	PCNMLNDPOML_V0637_POKEMON_VOLCARONA = 637;
	PCNMLNDPOML_V0638_POKEMON_COBALION = 638;
	PCNMLNDPOML_V0639_POKEMON_TERRAKION = 639;
	PCNMLNDPOML_V0640_POKEMON_VIRIZION = 640;
	PCNMLNDPOML_V0641_POKEMON_TORNADUS = 641;
	PCNMLNDPOML_V0642_POKEMON_THUNDURUS = 642;
	PCNMLNDPOML_V0643_POKEMON_RESHIRAM = 643;
	PCNMLNDPOML_V0644_POKEMON_ZEKROM = 644;
	PCNMLNDPOML_V0645_POKEMON_LANDORUS = 645;
	PCNMLNDPOML_V0646_POKEMON_KYUREM = 646;
	PCNMLNDPOML_V0647_POKEMON_KELDEO = 647;
	PCNMLNDPOML_V0648_POKEMON_MELOETTA = 648;
	PCNMLNDPOML_V0649_POKEMON_GENESECT = 649;
	PCNMLNDPOML_V0650_POKEMON_CHESPIN = 650;
	PCNMLNDPOML_V0651_POKEMON_QUILLADIN = 651;
	PCNMLNDPOML_V0652_POKEMON_CHESNAUGHT = 652;
	PCNMLNDPOML_V0653_POKEMON_FENNEKIN = 653;
	PCNMLNDPOML_V0654_POKEMON_BRAIXEN = 654;
	PCNMLNDPOML_V0655_POKEMON_DELPHOX = 655;
	PCNMLNDPOML_V0656_POKEMON_FROAKIE = 656;
	PCNMLNDPOML_V0657_POKEMON_FROGADIER = 657;
	PCNMLNDPOML_V0658_POKEMON_GRENINJA = 658;
	PCNMLNDPOML_V0659_POKEMON_BUNNELBY = 659;
	PCNMLNDPOML_V0660_POKEMON_DIGGERSBY = 660;
	PCNMLNDPOML_V0661_POKEMON_FLETCHLING = 661;
	PCNMLNDPOML_V0662_POKEMON_FLETCHINDER = 662;
	PCNMLNDPOML_V0663_POKEMON_TALONFLAME = 663;
	PCNMLNDPOML_V0664_POKEMON_SCATTERBUG = 664;
	PCNMLNDPOML_V0665_POKEMON_SPEWPA = 665;
	PCNMLNDPOML_V0666_POKEMON_VIVILLON = 666;
	PCNMLNDPOML_V0667_POKEMON_LITLEO = 667;
	PCNMLNDPOML_V0668_POKEMON_PYROAR = 668;
	PCNMLNDPOML_V0669_POKEMON_FLABEBE = 669;
	PCNMLNDPOML_V0670_POKEMON_FLOETTE = 670;
	PCNMLNDPOML_V0671_POKEMON_FLORGES = 671;
	PCNMLNDPOML_V0672_POKEMON_SKIDDO = 672;
	PCNMLNDPOML_V0673_POKEMON_GOGOAT = 673;
	PCNMLNDPOML_V0674_POKEMON_PANCHAM = 674;
	PCNMLNDPOML_V0675_POKEMON_PANGORO = 675;
	PCNMLNDPOML_V0676_POKEMON_FURFROU = 676;
	PCNMLNDPOML_V0677_POKEMON_ESPURR = 677;
	PCNMLNDPOML_V0678_POKEMON_MEOWSTIC = 678;
	PCNMLNDPOML_V0679_POKEMON_HONEDGE = 679;
	PCNMLNDPOML_V0680_POKEMON_DOUBLADE = 680;
	PCNMLNDPOML_V0681_POKEMON_AEGISLASH = 681;
	PCNMLNDPOML_V0682_POKEMON_SPRITZEE = 682;
	PCNMLNDPOML_V0683_POKEMON_AROMATISSE = 683;
	PCNMLNDPOML_V0684_POKEMON_SWIRLIX = 684;
	PCNMLNDPOML_V0685_POKEMON_SLURPUFF = 685;
	PCNMLNDPOML_V0686_POKEMON_INKAY = 686;
	PCNMLNDPOML_V0687_POKEMON_MALAMAR = 687;
	PCNMLNDPOML_V0688_POKEMON_BINACLE = 688;
	PCNMLNDPOML_V0689_POKEMON_BARBARACLE = 689;
	PCNMLNDPOML_V0690_POKEMON_SKRELP = 690;
	PCNMLNDPOML_V0691_POKEMON_DRAGALGE = 691;
	PCNMLNDPOML_V0692_POKEMON_CLAUNCHER = 692;
	PCNMLNDPOML_V0693_POKEMON_CLAWITZER = 693;
	PCNMLNDPOML_V0694_POKEMON_HELIOPTILE = 694;
	PCNMLNDPOML_V0695_POKEMON_HELIOLISK = 695;
	PCNMLNDPOML_V0696_POKEMON_TYRUNT = 696;
	PCNMLNDPOML_V0697_POKEMON_TYRANTRUM = 697;
	PCNMLNDPOML_V0698_POKEMON_AMAURA = 698;
	PCNMLNDPOML_V0699_POKEMON_AURORUS = 699;
	PCNMLNDPOML_V0700_POKEMON_SYLVEON = 700;
	PCNMLNDPOML_V0701_POKEMON_HAWLUCHA = 701;
	PCNMLNDPOML_V0702_POKEMON_DEDENNE = 702;
	PCNMLNDPOML_V0703_POKEMON_CARBINK = 703;
	PCNMLNDPOML_V0704_POKEMON_GOOMY = 704;
	PCNMLNDPOML_V0705_POKEMON_SLIGGOO = 705;
	PCNMLNDPOML_V0706_POKEMON_GOODRA = 706;
	PCNMLNDPOML_V0707_POKEMON_KLEFKI = 707;
	PCNMLNDPOML_V0708_POKEMON_PHANTUMP = 708;
	PCNMLNDPOML_V0709_POKEMON_TREVENANT = 709;
	PCNMLNDPOML_V0710_POKEMON_PUMPKABOO = 710;
	PCNMLNDPOML_V0711_POKEMON_GOURGEIST = 711;
	PCNMLNDPOML_V0712_POKEMON_BERGMITE = 712;
	PCNMLNDPOML_V0713_POKEMON_AVALUGG = 713;
	PCNMLNDPOML_V0714_POKEMON_NOIBAT = 714;
	PCNMLNDPOML_V0715_POKEMON_NOIVERN = 715;
	PCNMLNDPOML_V0716_POKEMON_XERNEAS = 716;
	PCNMLNDPOML_V0717_POKEMON_YVELTAL = 717;
	PCNMLNDPOML_V0718_POKEMON_ZYGARDE = 718;
	PCNMLNDPOML_V0719_POKEMON_DIANCIE = 719;
	PCNMLNDPOML_V0720_POKEMON_HOOPA = 720;
	PCNMLNDPOML_V0721_POKEMON_VOLCANION = 721;
	PCNMLNDPOML_V0722_POKEMON_ROWLET = 722;
	PCNMLNDPOML_V0723_POKEMON_DARTRIX = 723;
	PCNMLNDPOML_V0724_POKEMON_DECIDUEYE = 724;
	PCNMLNDPOML_V0725_POKEMON_LITTEN = 725;
	PCNMLNDPOML_V0726_POKEMON_TORRACAT = 726;
	PCNMLNDPOML_V0727_POKEMON_INCINEROAR = 727;
	PCNMLNDPOML_V0728_POKEMON_POPPLIO = 728;
	PCNMLNDPOML_V0729_POKEMON_BRIONNE = 729;
	PCNMLNDPOML_V0730_POKEMON_PRIMARINA = 730;
	PCNMLNDPOML_V0731_POKEMON_PIKIPEK = 731;
	PCNMLNDPOML_V0732_POKEMON_TRUMBEAK = 732;
	PCNMLNDPOML_V0733_POKEMON_TOUCANNON = 733;
	PCNMLNDPOML_V0734_POKEMON_YUNGOOS = 734;
	PCNMLNDPOML_V0735_POKEMON_GUMSHOOS = 735;
	PCNMLNDPOML_V0736_POKEMON_GRUBBIN = 736;
	PCNMLNDPOML_V0737_POKEMON_CHARJABUG = 737;
	PCNMLNDPOML_V0738_POKEMON_VIKAVOLT = 738;
	PCNMLNDPOML_V0739_POKEMON_CRABRAWLER = 739;
	PCNMLNDPOML_V0740_POKEMON_CRABOMINABLE = 740;
	PCNMLNDPOML_V0741_POKEMON_ORICORIO = 741;
	PCNMLNDPOML_V0742_POKEMON_CUTIEFLY = 742;
	PCNMLNDPOML_V0743_POKEMON_RIBOMBEE = 743;
	PCNMLNDPOML_V0744_POKEMON_ROCKRUFF = 744;
	PCNMLNDPOML_V0745_POKEMON_LYCANROC = 745;
	PCNMLNDPOML_V0746_POKEMON_WISHIWASHI = 746;
	PCNMLNDPOML_V0747_POKEMON_MAREANIE = 747;
	PCNMLNDPOML_V0748_POKEMON_TOXAPEX = 748;
	PCNMLNDPOML_V0749_POKEMON_MUDBRAY = 749;
	PCNMLNDPOML_V0750_POKEMON_MUDSDALE = 750;
	PCNMLNDPOML_V0751_POKEMON_DEWPIDER = 751;
	PCNMLNDPOML_V0752_POKEMON_ARAQUANID = 752;
	PCNMLNDPOML_V0753_POKEMON_FOMANTIS = 753;
	PCNMLNDPOML_V0754_POKEMON_LURANTIS = 754;
	PCNMLNDPOML_V0755_POKEMON_MORELULL = 755;
	PCNMLNDPOML_V0756_POKEMON_SHIINOTIC = 756;
	PCNMLNDPOML_V0757_POKEMON_SALANDIT = 757;
	PCNMLNDPOML_V0758_POKEMON_SALAZZLE = 758;
	PCNMLNDPOML_V0759_POKEMON_STUFFUL = 759;
	PCNMLNDPOML_V0760_POKEMON_BEWEAR = 760;
	PCNMLNDPOML_V0761_POKEMON_BOUNSWEET = 761;
	PCNMLNDPOML_V0762_POKEMON_STEENEE = 762;
	PCNMLNDPOML_V0763_POKEMON_TSAREENA = 763;
	PCNMLNDPOML_V0764_POKEMON_COMFEY = 764;
	PCNMLNDPOML_V0765_POKEMON_ORANGURU = 765;
	PCNMLNDPOML_V0766_POKEMON_PASSIMIAN = 766;
	PCNMLNDPOML_V0767_POKEMON_WIMPOD = 767;
	PCNMLNDPOML_V0768_POKEMON_GOLISOPOD = 768;
	PCNMLNDPOML_V0769_POKEMON_SANDYGAST = 769;
	PCNMLNDPOML_V0770_POKEMON_PALOSSAND = 770;
	PCNMLNDPOML_V0771_POKEMON_PYUKUMUKU = 771;
	PCNMLNDPOML_V0772_POKEMON_TYPE_NULL = 772;
	PCNMLNDPOML_V0773_POKEMON_SILVALLY = 773;
	PCNMLNDPOML_V0774_POKEMON_MINIOR = 774;
	PCNMLNDPOML_V0775_POKEMON_KOMALA = 775;
	PCNMLNDPOML_V0776_POKEMON_TURTONATOR = 776;
	PCNMLNDPOML_V0777_POKEMON_TOGEDEMARU = 777;
	PCNMLNDPOML_V0778_POKEMON_MIMIKYU = 778;
	PCNMLNDPOML_V0779_POKEMON_BRUXISH = 779;
	PCNMLNDPOML_V0780_POKEMON_DRAMPA = 780;
	PCNMLNDPOML_V0781_POKEMON_DHELMISE = 781;
	PCNMLNDPOML_V0782_POKEMON_JANGMO_O = 782;
	PCNMLNDPOML_V0783_POKEMON_HAKAMO_O = 783;
	PCNMLNDPOML_V0784_POKEMON_KOMMO_O = 784;
	PCNMLNDPOML_V0785_POKEMON_TAPU_KOKO = 785;
	PCNMLNDPOML_V0786_POKEMON_TAPU_LELE = 786;
	PCNMLNDPOML_V0787_POKEMON_TAPU_BULU = 787;
	PCNMLNDPOML_V0788_POKEMON_TAPU_FINI = 788;
	PCNMLNDPOML_V0789_POKEMON_COSMOG = 789;
	PCNMLNDPOML_V0790_POKEMON_COSMOEM = 790;
	PCNMLNDPOML_V0791_POKEMON_SOLGALEO = 791;
	PCNMLNDPOML_V0792_POKEMON_LUNALA = 792;
	PCNMLNDPOML_V0793_POKEMON_NIHILEGO = 793;
	PCNMLNDPOML_V0794_POKEMON_BUZZWOLE = 794;
	PCNMLNDPOML_V0795_POKEMON_PHEROMOSA = 795;
	PCNMLNDPOML_V0796_POKEMON_XURKITREE = 796;
	PCNMLNDPOML_V0797_POKEMON_CELESTEELA = 797;
	PCNMLNDPOML_V0798_POKEMON_KARTANA = 798;
	PCNMLNDPOML_V0799_POKEMON_GUZZLORD = 799;
	PCNMLNDPOML_V0800_POKEMON_NECROZMA = 800;
	PCNMLNDPOML_V0801_POKEMON_MAGEARNA = 801;
	PCNMLNDPOML_V0802_POKEMON_MARSHADOW = 802;
	PCNMLNDPOML_V0803_POKEMON_POIPOLE = 803;
	PCNMLNDPOML_V0804_POKEMON_NAGANADEL = 804;
	PCNMLNDPOML_V0805_POKEMON_STAKATAKA = 805;
	PCNMLNDPOML_V0806_POKEMON_BLACEPHALON = 806;
	PCNMLNDPOML_V0807_POKEMON_ZERAORA = 807;
	PCNMLNDPOML_V0808_POKEMON_MELTAN = 808;
	PCNMLNDPOML_V0809_POKEMON_MELMETAL = 809;
	PCNMLNDPOML_V0810_POKEMON_GROOKEY = 810;
	PCNMLNDPOML_V0811_POKEMON_THWACKEY = 811;
	PCNMLNDPOML_V0812_POKEMON_RILLABOOM = 812;
	PCNMLNDPOML_V0813_POKEMON_SCORBUNNY = 813;
	PCNMLNDPOML_V0814_POKEMON_RABOOT = 814;
	PCNMLNDPOML_V0815_POKEMON_CINDERACE = 815;
	PCNMLNDPOML_V0816_POKEMON_SOBBLE = 816;
	PCNMLNDPOML_V0817_POKEMON_DRIZZILE = 817;
	PCNMLNDPOML_V0818_POKEMON_INTELEON = 818;
	PCNMLNDPOML_V0819_POKEMON_SKWOVET = 819;
	PCNMLNDPOML_V0820_POKEMON_GREEDENT = 820;
	PCNMLNDPOML_V0821_POKEMON_ROOKIDEE = 821;
	PCNMLNDPOML_V0822_POKEMON_CORVISQUIRE = 822;
	PCNMLNDPOML_V0823_POKEMON_CORVIKNIGHT = 823;
	PCNMLNDPOML_V0824_POKEMON_BLIPBUG = 824;
	PCNMLNDPOML_V0825_POKEMON_DOTTLER = 825;
	PCNMLNDPOML_V0826_POKEMON_ORBEETLE = 826;
	PCNMLNDPOML_V0827_POKEMON_NICKIT = 827;
	PCNMLNDPOML_V0828_POKEMON_THIEVUL = 828;
	PCNMLNDPOML_V0829_POKEMON_GOSSIFLEUR = 829;
	PCNMLNDPOML_V0830_POKEMON_ELDEGOSS = 830;
	PCNMLNDPOML_V0831_POKEMON_WOOLOO = 831;
	PCNMLNDPOML_V0832_POKEMON_DUBWOOL = 832;
	PCNMLNDPOML_V0833_POKEMON_CHEWTLE = 833;
	PCNMLNDPOML_V0834_POKEMON_DREDNAW = 834;
	PCNMLNDPOML_V0835_POKEMON_YAMPER = 835;
	PCNMLNDPOML_V0836_POKEMON_BOLTUND = 836;
	PCNMLNDPOML_V0837_POKEMON_ROLYCOLY = 837;
	PCNMLNDPOML_V0838_POKEMON_CARKOL = 838;
	PCNMLNDPOML_V0839_POKEMON_COALOSSAL = 839;
	PCNMLNDPOML_V0840_POKEMON_APPLIN = 840;
	PCNMLNDPOML_V0841_POKEMON_FLAPPLE = 841;
	PCNMLNDPOML_V0842_POKEMON_APPLETUN = 842;
	PCNMLNDPOML_V0843_POKEMON_SILICOBRA = 843;
	PCNMLNDPOML_V0844_POKEMON_SANDACONDA = 844;
	PCNMLNDPOML_V0845_POKEMON_CRAMORANT = 845;
	PCNMLNDPOML_V0846_POKEMON_ARROKUDA = 846;
	PCNMLNDPOML_V0847_POKEMON_BARRASKEWDA = 847;
	PCNMLNDPOML_V0848_POKEMON_TOXEL = 848;
	PCNMLNDPOML_V0849_POKEMON_TOXTRICITY = 849;
	PCNMLNDPOML_V0850_POKEMON_SIZZLIPEDE = 850;
	PCNMLNDPOML_V0851_POKEMON_CENTISKORCH = 851;
	PCNMLNDPOML_V0852_POKEMON_CLOBBOPUS = 852;
	PCNMLNDPOML_V0853_POKEMON_GRAPPLOCT = 853;
	PCNMLNDPOML_V0854_POKEMON_SINISTEA = 854;
	PCNMLNDPOML_V0855_POKEMON_POLTEAGEIST = 855;
	PCNMLNDPOML_V0856_POKEMON_HATENNA = 856;
	PCNMLNDPOML_V0857_POKEMON_HATTREM = 857;
	PCNMLNDPOML_V0858_POKEMON_HATTERENE = 858;
	PCNMLNDPOML_V0859_POKEMON_IMPIDIMP = 859;
	PCNMLNDPOML_V0860_POKEMON_MORGREM = 860;
	PCNMLNDPOML_V0861_POKEMON_GRIMMSNARL = 861;
	PCNMLNDPOML_V0862_POKEMON_OBSTAGOON = 862;
	PCNMLNDPOML_V0863_POKEMON_PERRSERKER = 863;
	PCNMLNDPOML_V0864_POKEMON_CURSOLA = 864;
	PCNMLNDPOML_V0865_POKEMON_SIRFETCHD = 865;
	PCNMLNDPOML_V0866_POKEMON_MR_RIME = 866;
	PCNMLNDPOML_V0867_POKEMON_RUNERIGUS = 867;
	PCNMLNDPOML_V0868_POKEMON_MILCERY = 868;
	PCNMLNDPOML_V0869_POKEMON_ALCREMIE = 869;
	PCNMLNDPOML_V0870_POKEMON_FALINKS = 870;
	PCNMLNDPOML_V0871_POKEMON_PINCURCHIN = 871;
	PCNMLNDPOML_V0872_POKEMON_SNOM = 872;
	PCNMLNDPOML_V0873_POKEMON_FROSMOTH = 873;
	PCNMLNDPOML_V0874_POKEMON_STONJOURNER = 874;
	PCNMLNDPOML_V0875_POKEMON_EISCUE = 875;
	PCNMLNDPOML_V0876_POKEMON_INDEEDEE = 876;
	PCNMLNDPOML_V0877_POKEMON_MORPEKO = 877;
	PCNMLNDPOML_V0878_POKEMON_CUFANT = 878;
	PCNMLNDPOML_V0879_POKEMON_COPPERAJAH = 879;
	PCNMLNDPOML_V0880_POKEMON_DRACOZOLT = 880;
	PCNMLNDPOML_V0881_POKEMON_ARCTOZOLT = 881;
	PCNMLNDPOML_V0882_POKEMON_DRACOVISH = 882;
	PCNMLNDPOML_V0883_POKEMON_ARCTOVISH = 883;
	PCNMLNDPOML_V0884_POKEMON_DURALUDON = 884;
	PCNMLNDPOML_V0885_POKEMON_DREEPY = 885;
	PCNMLNDPOML_V0886_POKEMON_DRAKLOAK = 886;
	PCNMLNDPOML_V0887_POKEMON_DRAGAPULT = 887;
	PCNMLNDPOML_V0888_POKEMON_ZACIAN = 888;
	PCNMLNDPOML_V0889_POKEMON_ZAMAZENTA = 889;
	PCNMLNDPOML_V0890_POKEMON_ETERNATUS = 890;
	PCNMLNDPOML_V0891_POKEMON_KUBFU = 891;
	PCNMLNDPOML_V0892_POKEMON_URSHIFU = 892;
	PCNMLNDPOML_V0893_POKEMON_ZARUDE = 893;
	PCNMLNDPOML_V0894_POKEMON_REGIELEKI = 894;
	PCNMLNDPOML_V0895_POKEMON_REGIDRAGO = 895;
	PCNMLNDPOML_V0896_POKEMON_GLASTRIER = 896;
	PCNMLNDPOML_V0897_POKEMON_SPECTRIER = 897;
	PCNMLNDPOML_V0898_POKEMON_CALYREX = 898;
	PCNMLNDPOML_V0899_POKEMON_WYRDEER = 899;
	PCNMLNDPOML_V0900_POKEMON_KLEAVOR = 900;
	PCNMLNDPOML_V0901_POKEMON_URSALUNA = 901;
	PCNMLNDPOML_V0902_POKEMON_BASCULEGION = 902;
	PCNMLNDPOML_V0903_POKEMON_SNEASLER = 903;
	PCNMLNDPOML_V0904_POKEMON_OVERQWIL = 904;
	PCNMLNDPOML_V0905_POKEMON_ENAMORUS = 905;
}

enum PEDJLCIJFBE {
	PEDJLCIJFBE_BUDDY_ANIMATION_UNSET = 0;
	PEDJLCIJFBE_BUDDY_ANIMATION_HAPPY = 1;
	PEDJLCIJFBE_BUDDY_ANIMATION_HATE = 2;
}

enum PEKEKKLJHEB {
	PEKEKKLJHEB_UNSET = 0;
	PEKEKKLJHEB_MAIN = 1;
	PEKEKKLJHEB_SURROUNDING = 2;
}

enum PHAPLDDNIOC {
	PHAPLDDNIOC_UNDEFINED_USERNAME_SUGGESTION_EVENT = 0;
	PHAPLDDNIOC_REFRESHED_NAME_SUGGESTIONS = 1;
	PHAPLDDNIOC_TAPPED_SUGGESTED_NAME = 2;
	PHAPLDDNIOC_USED_SUGGESTED_NAME = 3;
}

enum PJBIONEILPM {
	PJBIONEILPM_GYM_BADGE_UNSET = 0;
	PJBIONEILPM_GYM_BADGE_VANILLA = 1;
	PJBIONEILPM_GYM_BADGE_BRONZE = 2;
	PJBIONEILPM_GYM_BADGE_SILVER = 3;
	PJBIONEILPM_GYM_BADGE_GOLD = 4;
}

enum PermissionContextTelemetryIds {
	PERMISSION_CONTEXT_TELEMETRY_IDS_UNDEFINED_PERMISSION_CONTEXT = 0;
	PERMISSION_CONTEXT_TELEMETRY_IDS_EGG_HATCH = 1;
	PERMISSION_CONTEXT_TELEMETRY_IDS_BUDDY_CANDY_FOUND = 2;
	PERMISSION_CONTEXT_TELEMETRY_IDS_PLAYER_PROFILE_CLICKED = 3;
	PERMISSION_CONTEXT_TELEMETRY_IDS_SMART_WATCH_INSTALLED = 4;
	PERMISSION_CONTEXT_TELEMETRY_IDS_SFIDA_SESSION_STARTED = 5;
	PERMISSION_CONTEXT_TELEMETRY_IDS_SETTINGS_TOGGLE = 6;
	PERMISSION_CONTEXT_TELEMETRY_IDS_NEARBY_PANEL_OPENED = 7;
	PERMISSION_CONTEXT_TELEMETRY_IDS_FTUE_PROMPT = 8;
	PERMISSION_CONTEXT_TELEMETRY_IDS_LEVEL_UP_PROMPT = 9;
}

enum PermissionFlowStepTelemetryIds {
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_UNDEFINED_PERMISSION_FLOW_STEP = 0;
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_INITIAL_PROMPT = 1;
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_FITNESS_PERMISSION = 2;
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_LOCATION_PERMISSION = 3;
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_ACTIVITY_PERMISSIONS = 4;
}

enum PermissionType {
	PERMISSION_TYPE_UNSET = 0;
	PERMISSION_TYPE_READ_CONTACTS = 1;
}

enum PlatformClientAction {
	PLATFORM_CLIENT_ACTION_UNKNOWN_PLATFORM_CLIENT_ACTION = 0;
	PLATFORM_CLIENT_ACTION_REGISTER_PUSH_NOTIFICATION = 5000;
	PLATFORM_CLIENT_ACTION_UNREGISTER_PUSH_NOTIFICATION = 5001;
	PLATFORM_CLIENT_ACTION_UPDATE_NOTIFICATION_STATUS = 5002;
	PLATFORM_CLIENT_ACTION_OPT_OUT_PUSH_NOTIFICATION_CATEGORY = 5003;
	PLATFORM_CLIENT_ACTION_DOWNLOAD_GAME_MASTER_TEMPLATES = 5004;
	PLATFORM_CLIENT_ACTION_GET_INVENTORY = 5005;
	PLATFORM_CLIENT_ACTION_REDEEM_PASSCODE = 5006;
	PLATFORM_CLIENT_ACTION_PING = 5007;
	PLATFORM_CLIENT_ACTION_ADD_LOGIN_ACTION = 5008;
	PLATFORM_CLIENT_ACTION_REMOVE_LOGIN_ACTION = 5009;
	PLATFORM_CLIENT_ACTION_LIST_LOGIN_ACTION = 5010;
	PLATFORM_CLIENT_ACTION_ADD_NEW_POI = 5011;
	PLATFORM_CLIENT_ACTION_PROXY_SOCIAL_ACTION = 5012;
	PLATFORM_CLIENT_ACTION_DEPRECATED_CLIENT_TELEMETRY = 5013;
	PLATFORM_CLIENT_ACTION_GET_AVAILABLE_SUBMISSIONS = 5014;
	PLATFORM_CLIENT_ACTION_GET_SIGNED_URL_FOR_PHOTO_UPLOAD = 5015;
	PLATFORM_CLIENT_ACTION_REPLACE_LOGIN_ACTION = 5016;
	PLATFORM_CLIENT_ACTION_PROXY_SOCIAL_SIDE_CHANNEL_ACTION = 5017;
	PLATFORM_CLIENT_ACTION_COLLECT_CLIENT_TELEMETRY = 5018;
	PLATFORM_CLIENT_ACTION_PURCHASE_SKU = 5019;
	PLATFORM_CLIENT_ACTION_GET_AVAILABLE_SKUS_AND_BALANCES = 5020;
	PLATFORM_CLIENT_ACTION_REDEEM_GOOGLE_RECEIPT = 5021;
	PLATFORM_CLIENT_ACTION_REDEEM_APPLE_RECEIPT = 5022;
	PLATFORM_CLIENT_ACTION_REDEEM_DESKTOP_RECEIPT = 5023;
	PLATFORM_CLIENT_ACTION_UPDATE_FITNESS_METRICS = 5024;
	PLATFORM_CLIENT_ACTION_GET_FITNESS_REPORT = 5025;
	PLATFORM_CLIENT_ACTION_GET_CLIENT_TELEMETRY_SETTINGS = 5026;
	PLATFORM_CLIENT_ACTION_PING_ASYNC = 5027;
	PLATFORM_CLIENT_ACTION_REGISTER_BACKGROUND_SERVICE = 5028;
	PLATFORM_CLIENT_ACTION_GET_CLIENT_BGMODE_SETTINGS = 5029;
	PLATFORM_CLIENT_ACTION_PING_DOWNSTREAM = 5030;
	PLATFORM_CLIENT_ACTION_SET_IN_GAME_CURRENCY_EXCHANGE_RATE = 5032;
	PLATFORM_CLIENT_ACTION_REQUEST_GEOFENCE_UPDATES = 5033;
	PLATFORM_CLIENT_ACTION_UPDATE_PLAYER_LOCATION = 5034;
	PLATFORM_CLIENT_ACTION_GENERATE_GMAP_SIGNED_URL = 5035;
	PLATFORM_CLIENT_ACTION_GET_GMAP_SETTINGS = 5036;
	PLATFORM_CLIENT_ACTION_REDEEM_SAMSUNG_RECEIPT = 5037;
	PLATFORM_CLIENT_ACTION_ADD_NEW_ROUTE = 5038;
	PLATFORM_CLIENT_ACTION_GET_OUTSTANDING_WARNINGS = 5039;
	PLATFORM_CLIENT_ACTION_ACKNOWLEDGE_WARNINGS = 5040;
	PLATFORM_CLIENT_ACTION_SUBMIT_POI_IMAGE = 5041;
	PLATFORM_CLIENT_ACTION_SUBMIT_POI_TEXT_METADATA_UPDATE = 5042;
	PLATFORM_CLIENT_ACTION_SUBMIT_POI_LOCATION_UPDATE = 5043;
	PLATFORM_CLIENT_ACTION_SUBMIT_POI_TAKEDOWN_REQUEST = 5044;
	PLATFORM_CLIENT_ACTION_GET_WEB_TOKEN_ACTION = 5045;
	PLATFORM_CLIENT_ACTION_GET_ADVENTURE_SYNC_SETTINGS = 5046;
	PLATFORM_CLIENT_ACTION_UPDATE_ADVENTURE_SYNC_SETTINGS = 5047;
	PLATFORM_CLIENT_ACTION_SET_BIRTHDAY = 5048;
}

enum PlayerSubmissionAction {
	PLAYER_SUBMISSION_ACTION_UNKNOWN_GAME_POI_ACTION = 0;
	PLAYER_SUBMISSION_ACTION_ADD_NEW_POI = 620000;
	PLAYER_SUBMISSION_ACTION_GET_AVAILABLE_SUBMISSIONS = 620001;
	PLAYER_SUBMISSION_ACTION_GET_SIGNED_URL_FOR_PHOTO_UPLOAD = 620002;
	PLAYER_SUBMISSION_ACTION_GET_PLAYER_SUBMISSION_VALIDATION_SETTINGS = 620003;
	PLAYER_SUBMISSION_ACTION_SUBMIT_POI_IMAGE = 620100;
	PLAYER_SUBMISSION_ACTION_SUBMIT_POI_TEXT_METADATA_UPDATE = 620101;
	PLAYER_SUBMISSION_ACTION_SUBMIT_POI_LOCATION_UPDATE = 620102;
	PLAYER_SUBMISSION_ACTION_SUBMIT_POI_TAKEDOWN_REQUEST = 620103;
	PLAYER_SUBMISSION_ACTION_SUBMIT_SPONSOR_POI_REPORT = 620104;
	PLAYER_SUBMISSION_ACTION_SUBMIT_SPONSOR_POI_LOCATION_UPDATE = 620105;
	PLAYER_SUBMISSION_ACTION_SUBMIT_POI_CATEGORY_VOTE = 620106;
	PLAYER_SUBMISSION_ACTION_ADD_NEW_ROUTE = 620200;
	PLAYER_SUBMISSION_ACTION_GENERATE_GMAP_SIGNED_URL = 620300;
	PLAYER_SUBMISSION_ACTION_GET_GMAP_SETTINGS = 620301;
	PLAYER_SUBMISSION_ACTION_SUBMIT_POI_AR_VIDEO_METADATA = 620400;
	PLAYER_SUBMISSION_ACTION_GET_GRAPESHOT_FILE_UPLOAD_URL = 620401;
	PLAYER_SUBMISSION_ACTION_ASYNC_FILE_UPLOAD_COMPLETE = 620402;
	PLAYER_SUBMISSION_ACTION_GET_AR_MAPPING_SETTINGS = 620403;
	PLAYER_SUBMISSION_ACTION_GET_IMAGES_FOR_POI = 620500;
	PLAYER_SUBMISSION_ACTION_SUBMIT_PLAYER_IMAGE_VOTE_FOR_POI = 620501;
	PLAYER_SUBMISSION_ACTION_GET_IMAGE_GALLERY_SETTINGS = 620502;
	PLAYER_SUBMISSION_ACTION_GET_MAP_DATA = 620600;
	PLAYER_SUBMISSION_ACTION_GET_POIS_IN_RADIUS = 620601;
}

enum PlayerSubmissionTypeProto {
	PLAYER_SUBMISSION_TYPE_PROTO_TYPE_UNSPECIFIED = 0;
	PLAYER_SUBMISSION_TYPE_PROTO_POI_SUBMISSION = 1;
	PLAYER_SUBMISSION_TYPE_PROTO_ROUTE_SUBMISSION = 2;
	PLAYER_SUBMISSION_TYPE_PROTO_POI_IMAGE_SUBMISSION = 3;
	PLAYER_SUBMISSION_TYPE_PROTO_POI_TEXT_METADATA_UPDATE = 4;
	PLAYER_SUBMISSION_TYPE_PROTO_POI_LOCATION_UPDATE = 5;
	PLAYER_SUBMISSION_TYPE_PROTO_POI_TAKEDOWN_REQUEST = 6;
	PLAYER_SUBMISSION_TYPE_PROTO_POI_AR_VIDEO_SUBMISSION = 7;
	PLAYER_SUBMISSION_TYPE_PROTO_SPONSOR_POI_REPORT = 8;
	PLAYER_SUBMISSION_TYPE_PROTO_SPONSOR_POI_LOCATION_UPDATE = 9;
	PLAYER_SUBMISSION_TYPE_PROTO_POI_CATEGORY_VOTE_SUBMISSION = 10;
}

enum PoiImageType {
	POI_IMAGE_TYPE_UNSET = 0;
	POI_IMAGE_TYPE_MAIN = 1;
	POI_IMAGE_TYPE_SURROUNDING = 2;
}

enum PoiInvalidReason {
	POI_INVALID_REASON_INVALID_REASON_UNSPECIFIED = 0;
	POI_INVALID_REASON_NO_PEDESTRIAN_ACCESS = 1;
	POI_INVALID_REASON_OBSTRUCTS_EMERGENCY_SERVICES = 2;
	POI_INVALID_REASON_PRIVATE_RESIDENTIAL_PROPERTY = 3;
	POI_INVALID_REASON_SCHOOL = 4;
	POI_INVALID_REASON_PERMANENTLY_REMOVED = 5;
	POI_INVALID_REASON_DUPLICATE = 6;
}

enum PokemonGoPlusIds {
	POKEMON_GO_PLUS_IDS_UNDEFINED_POKEMON_GO_PLUS_EVENT = 0;
	POKEMON_GO_PLUS_IDS_CANNOT_CONNECT_TO_PGP = 1;
	POKEMON_GO_PLUS_IDS_REGISTERING_PGP_FAILED = 2;
	POKEMON_GO_PLUS_IDS_REGISTERING_RETRY = 3;
	POKEMON_GO_PLUS_IDS_CONNECTION_SUCCESS = 4;
	POKEMON_GO_PLUS_IDS_PGP_DISCONNECTED_BY_USER = 5;
	POKEMON_GO_PLUS_IDS_PGP_DISCONNECTED_BY_TIMEOUT = 6;
	POKEMON_GO_PLUS_IDS_PGP_DISCONNECTED_BY_ERROR = 7;
	POKEMON_GO_PLUS_IDS_PGP_LOW_BATTERY = 8;
	POKEMON_GO_PLUS_IDS_BLUETOOTH_SENT_ERROR = 9;
	POKEMON_GO_PLUS_IDS_PGP_SEEN_BY_DEVICE = 10;
	POKEMON_GO_PLUS_IDS_POKEMON_CAUGHT = 11;
	POKEMON_GO_PLUS_IDS_POKEMON_NOT_CAUGHT = 12;
	POKEMON_GO_PLUS_IDS_POKEMON_NOT_CAUGHT_DUE_ERROR = 13;
	POKEMON_GO_PLUS_IDS_POKESTOP_SPUN = 14;
	POKEMON_GO_PLUS_IDS_POKESTOP_NOT_SPUN_DUE_ERROR = 15;
}

enum PokemonHomeTelemetryIds {
	POKEMON_HOME_TELEMETRY_IDS_UNDEFINED_POKEMON_HOME_EVENT = 0;
	POKEMON_HOME_TELEMETRY_IDS_OPEN_SETTINGS = 1;
	POKEMON_HOME_TELEMETRY_IDS_SIGN_IN = 2;
	POKEMON_HOME_TELEMETRY_IDS_SELECTED_POKEMON = 3;
}

enum PokemonInventoryTelemetryIds {
	POKEMON_INVENTORY_TELEMETRY_IDS_UNDEFINED_POKEMON_INVENTORY_EVENT = 0;
	POKEMON_INVENTORY_TELEMETRY_IDS_OPEN = 1;
	POKEMON_INVENTORY_TELEMETRY_IDS_SORTING_CHANGE = 2;
	POKEMON_INVENTORY_TELEMETRY_IDS_FILTER = 3;
}

enum ProfilePageTelemetryIds {
	PROFILE_PAGE_TELEMETRY_IDS_UNDEFINED_PROFILE_PAGE = 0;
	PROFILE_PAGE_TELEMETRY_IDS_SHOP_FROM_PROFILE = 1;
	PROFILE_PAGE_TELEMETRY_IDS_LOG = 2;
	PROFILE_PAGE_TELEMETRY_IDS_SET_BUDDY = 3;
	PROFILE_PAGE_TELEMETRY_IDS_CUSTOMIZE_AVATAR = 4;
}

enum PushGatewayTelemetryIds {
	PUSH_GATEWAY_TELEMETRY_IDS_UNDEFINED_PUSH_GATEWAY_EVENT = 0;
	PUSH_GATEWAY_TELEMETRY_IDS_WEB_SOCKET_STARTED = 1;
	PUSH_GATEWAY_TELEMETRY_IDS_WEB_SOCKET_FAILED = 2;
	PUSH_GATEWAY_TELEMETRY_IDS_WEB_SOCKET_TIMEOUT = 3;
	PUSH_GATEWAY_TELEMETRY_IDS_NEW_INBOX_DOWNSTREAM = 4;
}

enum PushNotificationTelemetryIds {
	PUSH_NOTIFICATION_TELEMETRY_IDS_UNDEFINED_PUSH_NOTIFICATION_EVENT = 0;
	PUSH_NOTIFICATION_TELEMETRY_IDS_OPEN_APP = 1;
}

enum RaidTelemetryIds {
	RAID_TELEMETRY_IDS_UNDEFINED_RAID_EVENT = 0;
	RAID_TELEMETRY_IDS_APPROACH_ENTER = 1;
	RAID_TELEMETRY_IDS_APPROACH_CLICK_SPINNER = 2;
	RAID_TELEMETRY_IDS_APPROACH_JOIN = 3;
	RAID_TELEMETRY_IDS_APPROACH_TICKET_CONFIRMATION = 4;
	RAID_TELEMETRY_IDS_APPROACH_CLICK_TUTORIAL = 5;
	RAID_TELEMETRY_IDS_APPROACH_CLICK_SHOP = 6;
	RAID_TELEMETRY_IDS_APPROACH_CLICK_INSPECT = 7;
	RAID_TELEMETRY_IDS_LOBBY_ENTER = 8;
	RAID_TELEMETRY_IDS_LOBBY_CLICK_INVENTORY = 9;
	RAID_TELEMETRY_IDS_LOBBY_CLICK_EXIT = 10;
	RAID_TELEMETRY_IDS_LOBBY_TAP_AVATAR = 11;
	RAID_TELEMETRY_IDS_LOBBY_CLICK_REJOIN_BATTLE = 12;
	RAID_TELEMETRY_IDS_LOBBY_CLICK_LOBBY_PUBLIC = 13;
	RAID_TELEMETRY_IDS_MVT_CLICK_SHARE = 14;
}

enum RemoteRaidInviteAcceptSource {
	REMOTE_RAID_INVITE_ACCEPT_SOURCE_UNDEFINED_REMOTE_RAID_INVITE_ACCEPT_SOURCE = 0;
	REMOTE_RAID_INVITE_ACCEPT_SOURCE_REMOTE_RAID_IN_APP = 1;
	REMOTE_RAID_INVITE_ACCEPT_SOURCE_REMOTE_RAID_PUSH_NOTIFICATION = 2;
	REMOTE_RAID_INVITE_ACCEPT_SOURCE_REMOTE_RAID_NEARBY_WINDOW = 3;
}

enum RemoteRaidJoinSource {
	REMOTE_RAID_JOIN_SOURCE_UNDEFINED_REMOTE_RAID_JOIN_SOURCE = 0;
	REMOTE_RAID_JOIN_SOURCE_REMOTE_RAID_USED_MAP = 1;
	REMOTE_RAID_JOIN_SOURCE_REMOTE_RAID_NEARBY_GUI = 2;
	REMOTE_RAID_JOIN_SOURCE_REMOTE_RAID_INVITED_BY_FRIEND = 3;
}

enum RemoteRaidTelemetryIds {
	REMOTE_RAID_TELEMETRY_IDS_UNDEFINED_REMOTE_RAID_EVENT = 0;
	REMOTE_RAID_TELEMETRY_IDS_REMOTE_RAID_LOBBY_ENTER = 1;
	REMOTE_RAID_TELEMETRY_IDS_REMOTE_RAID_INVITE_SENT = 2;
	REMOTE_RAID_TELEMETRY_IDS_REMOTE_RAID_INVITE_ACCEPTED = 3;
	REMOTE_RAID_TELEMETRY_IDS_REMOTE_RAID_INVITE_REJECTED = 4;
}

enum ShoppingPageScrollIds {
	SHOPPING_PAGE_SCROLL_IDS_UNDEFINED_SHOPPING_PAGE_SCROLL_TYPE = 0;
	SHOPPING_PAGE_SCROLL_IDS_LAST_SCROLL = 1;
	SHOPPING_PAGE_SCROLL_IDS_MAX_SCROLL = 2;
}

enum ShoppingPageTelemetryIds {
	SHOPPING_PAGE_TELEMETRY_IDS_UNDEFINED_SHOPPING_PAGE_EVENT = 0;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_CUSTOMIZE_AVATAR = 1;
	SHOPPING_PAGE_TELEMETRY_IDS_QUICK_SHOP_MORE = 2;
	SHOPPING_PAGE_TELEMETRY_IDS_QUICK_SHOP_EXCHANGE = 3;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_SHOP = 4;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_SHOP = 5;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_SKU = 6;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_SKU = 7;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_SKU_EXCHANGE = 8;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_SHOP_AVATAR = 9;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_SHOP_AVATAR = 10;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_AVATAR_TYPE = 11;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_AVATAR_TYPE = 12;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_AVATAR_ITEM = 13;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_AVATAR_ITEM = 14;
	SHOPPING_PAGE_TELEMETRY_IDS_CONFIRM_AVATAR_ITEM = 15;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_AVATAR_ITEM_COLOR = 16;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_AVATAR_ITEM_COLOR = 17;
	SHOPPING_PAGE_TELEMETRY_IDS_CONFIRM_AVATAR_ITEM_COLOR = 18;
}

enum ShoppingPageTelemetrySource {
	SHOPPING_PAGE_TELEMETRY_SOURCE_UNDEFINED_SHOPPING_PAGE_SOURCE = 0;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_MAIN_MENU = 1;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_POKEMON_BAG_FULL = 2;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_INCUBATOR_SELECTOR = 3;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_POKESTOP_DISK_INTERACTION = 4;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_OPEN_GIFT_BAG_FULL = 5;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BAG_FULL_ENCOUNTER = 6;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BAG_FULL_RAID = 7;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_MORE = 8;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_AVATAR_ITEM = 9;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_POKEMON_ENCOUNTER = 10;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_PLAYER_PROFILE_PAGE = 11;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_STORE_FRONT = 12;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_AVATAR_CUSTOMIZATION_AWARD = 13;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_FIRST_TIME_USER_FLOW = 14;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_BADGE_DETAIL_AVATAR_REWARD = 15;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_DEEP_LINK = 16;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BAG_MISSING_RAID_PASS = 17;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BAG_MISSING_REMOTE_RAID_PASS = 18;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BUDDY_INTERACTION_POFFIN = 100;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BUDDY_QUICK_FEED_POFFIN = 101;
}

enum SocialAction {
	SOCIAL_ACTION_UNKNOWN_SOCIAL_ACTION = 0;
	SOCIAL_ACTION_SEARCH_PLAYER = 10000;
	SOCIAL_ACTION_SEND_FRIEND_INVITE = 10002;
	SOCIAL_ACTION_CANCEL_FRIEND_INVITE = 10003;
	SOCIAL_ACTION_ACCEPT_FRIEND_INVITE = 10004;
	SOCIAL_ACTION_DECLINE_FRIEND_INVITE = 10005;
	SOCIAL_ACTION_LIST_FRIENDS = 10006;
	SOCIAL_ACTION_LIST_OUTGOING_FRIEND_INVITES = 10007;
	SOCIAL_ACTION_LIST_INCOMING_FRIEND_INVITES = 10008;
	SOCIAL_ACTION_REMOVE_FRIEND = 10009;
	SOCIAL_ACTION_LIST_FRIEND_STATUS = 10010;
	SOCIAL_ACTION_SEND_FACEBOOK_FRIEND_INVITE = 10011;
	SOCIAL_ACTION_IS_MY_FRIEND = 10012;
	SOCIAL_ACTION_CREATE_INVITE_CODE = 10013;
	SOCIAL_ACTION_GET_FACEBOOK_FRIEND_LIST = 10014;
	SOCIAL_ACTION_UPDATE_FACEBOOK_STATUS = 10015;
	SOCIAL_ACTION_SAVE_PLAYER_SETTINGS = 10016;
	SOCIAL_ACTION_GET_PLAYER_SETTINGS = 10017;
	SOCIAL_ACTION_GET_NIANTIC_FRIEND_LIST_DELETED = 10018;
	SOCIAL_ACTION_GET_NIANTIC_FRIEND_DETAILS_DELETED = 10019;
	SOCIAL_ACTION_SEND_NIANTIC_FRIEND_INVITE_DELETED = 10020;
	SOCIAL_ACTION_SET_ACCOUNT_SETTINGS = 10021;
	SOCIAL_ACTION_GET_ACCOUNT_SETTINGS = 10022;
	SOCIAL_ACTION_ADD_FAVORITE_FRIEND = 10023;
	SOCIAL_ACTION_REMOVE_FAVORITE_FRIEND = 10024;
	SOCIAL_ACTION_REGISTER_PUSH_NOTIFICATION = 10101;
	SOCIAL_ACTION_UNREGISTER_PUSH_NOTIFICATION = 10102;
	SOCIAL_ACTION_UPDATE_NOTIFICATION = 10103;
	SOCIAL_ACTION_OPT_OUT_PUSH_NOTIFICATION_CATEGORY = 10104;
	SOCIAL_ACTION_GET_INBOX = 10105;
	SOCIAL_ACTION_GET_SIGNED_URL = 10201;
	SOCIAL_ACTION_SUBMIT_IMAGE = 10202;
	SOCIAL_ACTION_GET_PHOTOS = 10203;
	SOCIAL_ACTION_DELETE_PHOTO = 10204;
	SOCIAL_ACTION_FLAG_PHOTO = 10205;
	SOCIAL_ACTION_UPDATE_PROFILE_V2 = 20001;
	SOCIAL_ACTION_UPDATE_FRIENDSHIP_V2 = 20002;
	SOCIAL_ACTION_GET_PROFILE_V2 = 20003;
	SOCIAL_ACTION_INVITE_GAME_V2 = 20004;
	SOCIAL_ACTION_RESERVED_ACTION_2 = 20005;
	SOCIAL_ACTION_LIST_FRIENDS_V2 = 20006;
	SOCIAL_ACTION_GET_FRIEND_DETAILS_V2 = 20007;
	SOCIAL_ACTION_GET_CLIENT_FEATURE_FLAGS_V2 = 20008;
	SOCIAL_ACTION_RESERVED_ACTION_1 = 20009;
	SOCIAL_ACTION_GET_INCOMING_GAME_INVITES_V2 = 20010;
	SOCIAL_ACTION_UPDATE_INCOMING_GAME_INVITE_V2 = 20011;
	SOCIAL_ACTION_DISMISS_OUTGOING_GAME_INVITES_V2 = 20012;
	SOCIAL_ACTION_SYNC_CONTACT_LIST_V2 = 20013;
	SOCIAL_ACTION_SEND_CONTACT_LIST_FRIEND_INVITE_V2 = 20014;
	SOCIAL_ACTION_REFER_CONTACT_LIST_FRIEND_V2 = 20015;
	SOCIAL_ACTION_GET_CONTACT_LIST_INFO_V2 = 20016;
	SOCIAL_ACTION_DISMISS_CONTACT_LIST_UPDATE_V2 = 20017;
	SOCIAL_ACTION_NOTIFY_CONTACT_LIST_FRIENDS_V2 = 20018;
	SOCIAL_ACTION_RESERVED_ACTION_6 = 20019;
	SOCIAL_ACTION_RESERVED_ACTION_7 = 20020;
	SOCIAL_ACTION_RESERVED_ACTION_3 = 20400;
	SOCIAL_ACTION_RESERVED_ACTION_4 = 20401;
	SOCIAL_ACTION_RESERVED_ACTION_5 = 20402;
}

enum SocialTelemetryIds {
	SOCIAL_TELEMETRY_IDS_UNDEFINED_SOCIAL = 0;
	SOCIAL_TELEMETRY_IDS_FRIEND_TAB = 1;
	SOCIAL_TELEMETRY_IDS_NOTIFICATION_TAB = 2;
	SOCIAL_TELEMETRY_IDS_FRIEND_PROFILE = 3;
	SOCIAL_TELEMETRY_IDS_OPEN_FRIEND_SHIP_LEVEL_DETAIL = 4;
	SOCIAL_TELEMETRY_IDS_CLOSE_OPEN_GIFT_CONFIRMATION = 5;
	SOCIAL_TELEMETRY_IDS_FRIEND_LIST_SORT_CHANGED = 6;
	SOCIAL_TELEMETRY_IDS_FRIEND_LIST_CLOSED = 7;
}

enum SponsorPoiInvalidReason {
	SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_UNSPECIFIED = 0;
	SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_DOES_NOT_EXIST = 1;
	SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_NOT_SAFE = 2;
	SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_NOT_TRUTHFUL = 3;
	SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_NOT_FAMILY_FRIENDLY = 4;
	SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_OFFENSIVE_CONTENT = 5;
}

enum TweenAction {
	TWEEN_ACTION_MOVE_X = 0;
	TWEEN_ACTION_MOVE_Y = 1;
	TWEEN_ACTION_MOVE_Z = 2;
	TWEEN_ACTION_MOVE_LOCAL_X = 3;
	TWEEN_ACTION_MOVE_LOCAL_Y = 4;
	TWEEN_ACTION_MOVE_LOCAL_Z = 5;
	TWEEN_ACTION_MOVE_CURVED = 6;
	TWEEN_ACTION_MOVE_CURVED_LOCAL = 7;
	TWEEN_ACTION_MOVE_SPLINE = 8;
	TWEEN_ACTION_MOVE_SPLINE_LOCAL = 9;
	TWEEN_ACTION_SCALE_X = 10;
	TWEEN_ACTION_SCALE_Y = 11;
	TWEEN_ACTION_SCALE_Z = 12;
	TWEEN_ACTION_ROTATE_X = 13;
	TWEEN_ACTION_ROTATE_Y = 14;
	TWEEN_ACTION_ROTATE_Z = 15;
	TWEEN_ACTION_ROTATE_AROUND = 16;
	TWEEN_ACTION_ROTATE_AROUND_LOCAL = 17;
	TWEEN_ACTION_CANVAS_ROTATEAROUND = 18;
	TWEEN_ACTION_CANVAS_ROTATEAROUND_LOCAL = 19;
	TWEEN_ACTION_CANVAS_PLAYSPRITE = 20;
	TWEEN_ACTION_ALPHA = 21;
	TWEEN_ACTION_TEXT_ALPHA = 22;
	TWEEN_ACTION_CANVAS_ALPHA = 23;
	TWEEN_ACTION_ALPHA_VERTEX = 24;
	TWEEN_ACTION_COLOR = 25;
	TWEEN_ACTION_CALLBACK_COLOR = 26;
	TWEEN_ACTION_TEXT_COLOR = 27;
	TWEEN_ACTION_CANVAS_COLOR = 28;
	TWEEN_ACTION_CALLBACK = 29;
	TWEEN_ACTION_MOVE = 30;
	TWEEN_ACTION_MOVE_LOCAL = 31;
	TWEEN_ACTION_ROTATE = 32;
	TWEEN_ACTION_ROTATE_LOCAL = 33;
	TWEEN_ACTION_SCALE = 34;
	TWEEN_ACTION_VALUE3 = 35;
	TWEEN_ACTION_GUI_MOVE = 36;
	TWEEN_ACTION_GUI_MOVE_MARGIN = 37;
	TWEEN_ACTION_GUI_SCALE = 38;
	TWEEN_ACTION_GUI_ALPHA = 39;
	TWEEN_ACTION_GUI_ROTATE = 40;
	TWEEN_ACTION_DELAYED_SOUND = 41;
	TWEEN_ACTION_CANVAS_MOVE = 42;
	TWEEN_ACTION_CANVAS_SCALE = 43;
}

enum WebTelemetryIds {
	WEB_TELEMETRY_IDS_UNDEFINED_WEB_EVENT = 0;
	WEB_TELEMETRY_IDS_POINT_OF_INTEREST_DESCRIPTION_WEB_CLICK = 1;
}

message AAFHCDKDCHI {
	enum ELCJFIIOMPB {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_ALREADY_ACCEPTED = 4;
		ERROR_ALREADY_DECLINED = 5;
		ERROR_ALREADY_TIMEDOUT = 6;
		ERROR_ACCESS_DENIED = 7;
	}

	ELCJFIIOMPB hhkodmoefol = 1;
}

message AAOCFGKMKAH {
	enum NMACKBFCAGO {
		UNKNOWN = 0;
		SUCCESS = 1;
		ERROR_PLAYER_LEVEL_TOO_LOW = 2;
		ERROR_PLAYER_SIGNED_IN = 3;
	}

	NMACKBFCAGO llponloodfk = 1;
	string mcdggnpebgc = 2;
}

message ABGFCABPHEA {
	AGJKMAADOHK klkoojlegdk = 1;
}

message ABIDCAOPGIE {
	enum BBHPCDEPBGE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_ENABLED = 2;
		ERROR_TOO_MANY_REQUESTS = 3;
		ERROR_INVALID_FORMAT = 4;
		ERROR_EXCEEDS_SIZE_LIMIT = 5;
	}

	BBHPCDEPBGE hhkodmoefol = 1;
}

message ABIFKGLJJCP {
	enum MFJKIALGGAK {
		UNSET = 0;
		SUCCESS = 1;
	}

	MFJKIALGGAK hhkodmoefol = 1;
	BGOGOGOMLBN bkmmhnbfabl = 2;
	repeated KOFBOBFKIGL bphhdbmflfm = 3;
}

message ABNHIDIEOEB {
	string jlpmmlbclok = 1;
	repeated uint64 iepbdcjdpfk = 2;
	string blgcpjojdbm = 3;
	int64 djlhjjcekee = 4;
	OMDCMKIAADD cabpealgccm = 5;
}

message ABNOKACJLCL {
	repeated IMGKONDPGKH oeldbofmjnp = 1;
	bool emjidjbddfc = 2;
	int64 ajejajmcnfb = 3;
	string iomhbkhfabb = 4;
	string aooblimbnga = 5;
}

message ABPPMKMICAH {
	oneof FFGAEOAKCPK {
		BOJDGFGFLNL postcard_display = 5;
	}

	FOKDNDBFMHJ abmoflhjokk = 1;
	double chhgiikbnma = 2;
	double flaphjheime = 3;
	int64 gfegghodfgg = 4;
	string ajondmjjgpb = 6;
}

message ACDKIFDJAOP {
	string gfepbfmmdcc = 1;
	uint64 igfdgcikjem = 2;
	double icnndjclaef = 3;
	double ogmopfkhcpa = 4;
}

message ACEBIONOAAP {
	string ndlikaoblhi = 1;
	int64 bacjabapnmb = 2;
}

message ACHKJMBFMOE {
	BFABHCMKGCB acifngkjfjh = 1;
	uint64 pkljdiaplkc = 2;
	string albfofbkfle = 3;
}

message ACLABFMBKFM {
	enum GKEKKFPCBBC {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NO_PERMISSION = 2;
		ERROR_GYM_NOT_FOUND = 3;
		ERROR_LOBBY_NOT_FOUND = 4;
		ERROR_PAST_CUT_OFF_TIME = 5;
		ERROR_NO_INVITES_REMAINING = 6;
		ERROR_LOBBY_FULL = 7;
		ERROR_INVITER_NOT_FOUND = 8;
		ERROR_NO_REMOTE_SLOTS_REMAINING = 9;
	}

	GKEKKFPCBBC hhkodmoefol = 1;
	int32 dimbbjlcnib = 2;
}

message ACMJMCCMKOD {
	enum CFCAIAEPBLJ {
		BATTLE_TYPE_UNSET = 0;
		NORMAL = 1;
		TRAINING = 2;
		RAID = 3;
	}

	enum GHFKJCMAMFN {
		STATE_UNSET = 0;
		ACTIVE = 1;
		VICTORY = 2;
		DEFEATED = 3;
		TIMED_OUT = 4;
	}

	GHFKJCMAMFN aihkgechdic = 1;
	CFCAIAEPBLJ aillkknibkk = 2;
	int64 dgekaaoeode = 3;
	repeated BKMJKOAKFIM eimhnfbidac = 4;
	int64 pniikgdbnoa = 5;
	int64 moohipbgpjh = 6;
}

message ADFJGNDBJFG {
	uint64 kelhhealbli = 1;
	int64 ehjgagjcipk = 2;
	repeated MEIOBOCAPJH mlenelggcmc = 3;
	repeated OPGFDDNNKMF gaghhcojkdh = 4;
	repeated NCCAGPGHANA hiflecinhfb = 5;
	repeated string hblgcbgohjl = 6;
	bool bpkbfkleaol = 7;
	repeated HBGLFBGMBDH bajobdjiphp = 8;
	repeated OPGFDDNNKMF fedldnbgjok = 9;
	repeated GKLMOIKOIKE ghioldgfplo = 10;
	repeated OCCOFDCHDFJ mdjmgcadmoe = 11;
	string eoipeieophb = 15;
}

message ADJADEEDCOI {
	bool pijnhodgkhc = 1;
	bool nihggfchhnl = 2;
}

message ADKOBJGPHMK {
	bool bldfjlfhibl = 1;
	EHIECBBPACE cephaffhbfh = 2;
}

message AEGJCDDKMBA {
	repeated NDDJFAGALDG ciffdecapka = 1;
}

message AEOJFEMHBIO {
}

message AFOGNGAPPFB {
	bool bldfjlfhibl = 1;
	InventoryDeltaProto oncjoppagka = 2;
}

message AGAEICMMHEC {
	enum KKGMMPHOHKO {
		BGM_UNSET = 0;
		BGM_EVENT = 101;
		BGM_HALLOWEEN = 200;
		BGM_GO_TOUR_00 = 201;
		BGM_GO_TOUR_01 = 202;
		BGM_GO_TOUR_02 = 203;
		BGM_GO_TOUR_03 = 204;
		BGM_GO_TOUR_04 = 205;
		BGM_GO_TOUR_05 = 206;
		BGM_GO_TOUR_06 = 207;
		BGM_GO_TOUR_07 = 208;
		BGM_GO_TOUR_08 = 209;
		BGM_GO_TOUR_09 = 210;
		BGM_TEAM_ROCKET_DEFAULT = 300;
	}

	enum NKABOJOCEGO {
		EFFECT_NONE = 0;
		EFFECT_CONFETTI_BASIC = 1;
		EFFECT_CONFETTI_FIRE = 2;
		EFFECT_CONFETTI_WATER = 3;
		EFFECT_CONFETTI_GRASS = 4;
		EFFECT_CONFETTI_RAID_BATTLE = 5;
		EFFECT_CONFETTI_FRIENDSHIP = 6;
		EFFECT_CONFETTI_ROCKET = 7;
		EFFECT_FIREWORKS_PLAIN = 8;
		EFFECT_CONFETTI_FLOWER = 9;
		EFFECT_CONFETTI_PLAINS = 10;
		EFFECT_CONFETTI_CITY = 11;
		EFFECT_CONFETTI_TUNDRA = 12;
		EFFECT_CONFETTI_RAINFOREST = 13;
	}

	NKABOJOCEGO ilfpdaodhej = 1;
	string gkijddohlnl = 2;
	KKGMMPHOHKO klpcmjphcof = 3;
	bool pokdffakggh = 4;
	string kahbjohjgjo = 5;
	string epipcihhehg = 6;
	string jhapmpogolf = 7;
	bool nffgghapoin = 8;
}

message AGENAAGBEEE {
	FNMDDHBCCFB kanajhkhmhb = 1;
}

message AGJKMAADOHK {
	enum KLHBAOENIMK {
		UNSET = 0;
		SHARE_WITH_FRIENDS = 1;
		DO_NOT_SHARE = 2;
	}

	bool hpgohcinhgo = 1;
	LGADBIMIBCH nhlknjjblpk = 2;
	string gkbcdbilnfh = 3;
	KLHBAOENIMK nhonakkkngh = 4;
}

message AGLCNAMFKDD {
	double oedjmlkfadc = 1;
	double ohdbdabebkk = 2;
}

message AGLNJINLLFD {
	string oikeljpelkn = 1;
	bool dgcmgpjadeb = 2;
}

message AIFKHJGIIPE {
	DMPNAOEDHIF dpmplnjinki = 1;
	ANFMPHJKPBJ nbackpkggmk = 2;
	bool bldfjlfhibl = 3;
}

message AIFODDOHDJN {
	int64 gaedbmagkhh = 1;
}

message AIIIKINAFLJ {
	enum NDBMPOLHNIG {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	message GMJCNLJFJOG {
		int64 ehmhemllaog = 1;
		int32 geedgefhfoa = 2;
		int32 cocdohbaafn = 3;
		int32 gngmmcplcha = 4;
		int32 hjpjjofoioi = 5;
		int32 jbackbofkbc = 6;
		int32 nciipajcpae = 7;
		int32 befiedhdejp = 8;
		int32 cnnihmijjdb = 9;
		string kidnpajigel = 10;
	}

	NDBMPOLHNIG llponloodfk = 1;
	repeated GMJCNLJFJOG dopmnlkoggf = 2;
}

message AILLKLCJADL {
	enum JGLBDBHCEGO {
		UNSET = 0;
		SUCCESS = 1;
		FAILED = 2;
		ERROR_INVALID_POKEMON_ID = 3;
		ERROR_POKEMON_DEPLOYED = 4;
		ERROR_POKEMON_NOT_ALLOWED = 5;
		ERROR_POKEMON_IS_BUDDY = 6;
		ERROR_INVALID_TRANSACTION_ID = 7;
		ERROR_MISSING_TRANSACTION_ID = 8;
	}

	JGLBDBHCEGO llponloodfk = 1;
	int32 jhbbfkcbjlo = 2;
	PAEHCJKJPLP kgehkabmadl = 3;
	ELGKCAAELHC ffmjiajngal = 4;
	int32 aohiiainapk = 5;
	map<int32, int32> dabfcdbomhd = 6;
}

message AJCGONGLNMB {
	enum GKAOGEAIIED {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_MEMENTO_TYPE_NOT_ENABLED = 2;
		ERROR_INVALID_REQUEST = 3;
		NOT_MODIFIED = 4;
	}

	GKAOGEAIIED llponloodfk = 1;
	repeated ABPPMKMICAH jofchekmnpk = 2;
	string bigmchmhlpg = 3;
}

message AJCPEICMFNO {
	float hmkeadegdnh = 1;
	float ohjodidekhd = 2;
	float dlbkplejpin = 3;
	float aoeagfbimai = 4;
	bool gagpheblpfb = 5;
}

message AJDMPIPJNAF {
	repeated HLDMMODAABB hhleffhkhmn = 1;
}

message AJEKJKJHIBM {
	bytes kclkpcagdbm = 1;
	int64 nofgjkkmopj = 2;
	bytes jooinopppbe = 3;
}

message AJFLMFOCOHK {
	int32 ficmgmlbhmp = 1;
}

message AJIBDJCMKDD {
	DMCJDACCAFM eocojmbfhni = 1;
}

message AJIFHJJEHAP {
	enum NCHJPCIBNFL {
		UNSET = 0;
		SUCCESS = 1;
	}

	NCHJPCIBNFL hhkodmoefol = 1;
	string godfillmpmn = 2;
	int64 begjlpedpna = 3;
}

message AJJKADOGFHE {
	repeated KOFBOBFKIGL bphhdbmflfm = 1;
	int32 ljafcllohfl = 2;
	int32 fnofplcglfp = 3;
	string godfillmpmn = 4;
	string nefcmignngd = 5;
}

message AJKKHDHDMMK {
	enum FMIOMPCAHHC {
		UNKNOWN = 0;
		SUCCESS = 1;
		NOT_AVAILABLE = 2;
		NOT_IN_RANGE = 3;
		ENCOUNTER_ALREADY_FINISHED = 4;
		POKEMON_INVENTORY_FULL = 5;
	}

	FMIOMPCAHHC hhkodmoefol = 1;
	NHLCGNMFNOM piddpkfgmod = 2;
	DCMHMGIGNLJ ihnhoapaepl = 3;
	BFABHCMKGCB kkagkkighdm = 4;
	int32 mhigdejohkh = 5;
}

message AJNBMAHCDOA {
	OFKHNHHPPBD kkfblfmelbk = 1;
	string hinjeppgdph = 2;
	string ambapacfacm = 3;
	string kjokpkcjmmg = 4;
	uint32 npfplijbieh = 5;
	ENFPMLCKGFH doacbkkeena = 6;
	string ghmmgepakpo = 7;
	string nfepehdnobf = 8;
}

message AJNNMOBHLLJ {
	enum DCMCDKJACAJ {
		UNDEFINED = 0;
		BOOT_UTIL = 1;
		BOOT_METRICS = 2;
		BOOT_NETWORK = 3;
		BOOT_STORAGE = 4;
		BOOT_LOCATION = 5;
		BOOT_AUTH = 6;
	}

	double dcngfefebkm = 1;
	DCMCDKJACAJ ciophjmhmgb = 2;
}

message AKBLFMELONN {
	enum LENOJGCFCIO {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	LENOJGCFCIO hhkodmoefol = 1;
}

message AKCMGKIKMDJ {
	string adggcabhinj = 1;
	repeated string bcogiapafoa = 2;
}

message AKDIKMNLJEI {
	enum IBCKMCIBJOJ {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_DISABLED = 2;
	}

	IBCKMCIBJOJ llponloodfk = 1;
}

message ALDMICIDBFI {
	enum KMIFLDEPPGM {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_POKEMON_NOT_FOUND = 2;
		ERROR_UNLOCK_NOT_AVAILABLE = 3;
		ERROR_ALREADY_UNLOCKED = 4;
		ERROR_INSUFFICIENT_RESOURCES = 5;
		ERROR_DISABLED = 6;
	}

	KMIFLDEPPGM hhkodmoefol = 1;
	NHLCGNMFNOM mgoicelpfkn = 2;
}

message ALEFNJLMGGK {
	PCNMLNDPOML piddpkfgmod = 1;
	repeated LDBLCKAEJDB jhaepipgfih = 2;
}

message ALGKLIDGAJI {
	KEFCKGDMLFB ekanafkcoje = 1;
}

message ALILGDAJJAF {
	enum CJGPBFOLPDE {
		UNSET = 0;
		SUCCESS = 1;
	}

	CJGPBFOLPDE hhkodmoefol = 1;
	string ajbpmokphcc = 2;
}

message ALJOLCCDJLH {
	bool bnoehgcmhpe = 1;
	bool fobdplppooo = 2;
	bool pkpfccjhmai = 3;
	bool pphkamliioc = 4;
	bool feklbooigkn = 5;
	bool mmjimgeieic = 6;
}

message ALOCBADNLJC {
	enum IFINICEPNLK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
		ERROR_FORT_NOT_FOUND = 3;
		ERROR_INCIDENT_NOT_FOUND = 4;
		ERROR_STEP_ALREADY_COMPLETED = 5;
		ERROR_WRONG_STEP = 6;
		ERROR_PLAYER_BELOW_MIN_LEVEL = 7;
		ERROR_INCIDENT_EXPIRED = 8;
		ERROR_MISSING_INCIDENT_TICKET = 9;
		ERROR_ENCOUNTER_POKEMON_INVENTORY_FULL = 10;
		ERROR_PLAYER_BELOW_V2_MIN_LEVEL = 11;
		ERROR_RETRY = 12;
		ERROR_INVALID_HEALTH_UPDATES = 20;
		ERROR_ATTACKING_POKEMON_INVALID = 30;
	}

}

message ALPAADFICGP {
	EFDCDOBEKEN hedgnndaede = 1;
	JHKHBGIEONB lkhbkijafld = 2;
	bool dmnnpijbboh = 3;
}

message AMCIEFDMAPH {
	bool bldfjlfhibl = 1;
	EHIECBBPACE cephaffhbfh = 2;
	bool lkonddocaci = 3;
	bool iehllbbkmkb = 4;
	bool anaammiaikl = 5;
	bool kgkchpbnplc = 6;
	bool eijibdhgbke = 7;
	bool epibombgcna = 8;
	int64 agmebeehelg = 9;
	repeated int32 njcikbhegcj = 10;
}

message AMJNCLEPHBG {
	repeated BHCNOFEPILP enimilkdmhc = 1;
	BHCNOFEPILP pkmkkebhfcc = 2;
	uint32 idenflinoio = 3;
}

message AMKKJIAEOGO {
	oneof HKDCGBKOMND {
		PCNMLNDPOML pokemon_id = 1;
		bool use_quest_pokemon_encounter_distribuition = 2;
	}

	IBGGKKNEKOA nnnmmlpnchp = 3;
	bool bmpgkbfnmgp = 4;
	IBGGKKNEKOA jjelhmmjbad = 5;
	BFABHCMKGCB ngaiagcfcma = 6;
}

message AMLJPMNGMEB {
	string ldhboodfimm = 1;
	repeated PCNMLNDPOML jokgfiibhhn = 2;
}

message AMPMNBBLMEB {
	bool foohopcghgg = 1;
}

message ANBNHEPLNLI {
	LDKENAMCIPK.NFOKKLIKGJA llponloodfk = 1;
	PAEHCJKJPLP aflnkbolkmh = 2;
}

message ANFIFMCOLPJ {
	string gfepbfmmdcc = 1;
	int64 bkkcjfmmhpl = 2;
}

message ANFMPHJKPBJ {
	APIODDEEDLJ ojlhbiocljn = 1;
	GJAOMGNNMKC angmoiohjei = 2;
	JNPCNHMKDMB jnpheagceai = 3;
}

message ANIHCLDCDDB {
	bool ikjoabbncnc = 1;
	int32 fjeiligoama = 2;
}

message ANNEIDDJGLM {
	enum MDIBLPLPANK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	MDIBLPLPANK hhkodmoefol = 1;
	repeated CEBNGOPPBMH heajfohaibl = 2;
}

message ANOCJHMLGAN {
	repeated DCAECPGGPON nhkgopbkbig = 1;
	int32 apfapaooaco = 2;
	int32 lfbajfmidfg = 3;
	repeated DCAECPGGPON nekgccohgeb = 4;
}

message AOAGPFDAFKO {
	enum ONCAIGNJEOL {
		UNSET = 0;
		SUCCESS = 1;
		NO_POKEMON = 2;
		NO_OTHER_MOVES = 3;
		NO_PLAYER = 4;
		WRONG_ITEM_TYPE = 5;
		ITEM_NOT_IN_INVENTORY = 6;
		INVALID_POKEMON = 7;
		MOVE_LOCKED = 8;
		MOVE_CANNOT_BE_REROLLED = 9;
		INVALID_ELITE_MOVE = 10;
	}

	ONCAIGNJEOL hhkodmoefol = 1;
	NHLCGNMFNOM agecpgbeone = 2;
}

message AOFPDHACNHC {
	enum FAJDELJACBL {
		UNKNOWN = 0;
		SUCCESS = 1;
		ERROR_PLAYER_LEVEL_TOO_LOW = 2;
		ERROR_NO_LINKED_NAID = 3;
		ERROR_TRANSFER_IN_PROGRESS = 4;
	}

	FAJDELJACBL llponloodfk = 1;
}

message AOLBNMIEDDI {
	oneof LMDOEAIGKID {
		LEMCAJEHFLF complaint_reason = 5;
		CJOFDMIDIFC not_interested_reason = 6;
		JKPLNFIDCOE like_reason = 7;
	}

	string pdchpjgngea = 1;
	string engaeellgja = 2;
	string enlldmodagi = 3;
	bytes dpneefelkgi = 4;
	string jlemddmjljk = 8;
}

message APIODDEEDLJ {
	NHLCGNMFNOM piddpkfgmod = 1;
	int64 bnpiomcjmhn = 2;
	int32 dnpopgpdgdc = 3;
	double kcgabidfdbk = 4;
	int32 nhlgjeemjkl = 5;
	float ahbdffbkiia = 6;
	int64 docjakkjpad = 7;
	repeated GFIENAEGANE acljloajgnd = 8;
}

message APKBDBNEONB {
}

message APMKFBALANE {
	int32 lbhfjmbpidk = 1;
	repeated LIDCAHNLDMG algnecefjki = 2;
	int32 ecdbedkcpnl = 3;
	int32 cdobmklgkib = 4;
}

message APPANLHEPGH {
	repeated string jbnlddihjhb = 1;
	map<string, string> hjidlgclake = 2;
}

message APPOGOJBHFH {
	bool nmfmhmhmkpk = 1;
	int32 oenfpdkkfkb = 2;
}

message ARBuddyMultiplayerSessionTelemetry {
	bool camera_permission_granted = 1;
	int64 host_time_to_publish_first_map = 2;
	int32 host_number_of_maps_published = 3;
	bool host_mapping_successful = 4;
	bool lobby_connection_successful = 5;
	int64 time_from_start_of_session_to_sync = 6;
	bool sync_successful = 7;
	int64 session_length = 8;
	int32 crash_count = 9;
	int64 duration_spent_in_lobby = 10;
	int64 time_from_invite_to_lobby = 11;
	int64 time_from_lobby_to_session = 12;
	int64 length_of_ar_session = 13;
	int32 players_connected = 14;
	int32 players_dropped = 15;
	int32 num_photos_taken = 16;
	bool is_host = 17;
}

message AcceptFriendInviteOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVITE_DOES_NOT_EXIST = 3;
		ERROR_MAX_FRIENDS_LIMIT_REACHED_DELETED = 4;
		ERROR_INVITE_HAS_BEEN_CANCELLED = 5;
		ERROR_SENDER_HAS_MAX_FRIENDS = 6;
		ERROR_RECEIVER_HAS_MAX_FRIENDS = 7;
	}

	Result result = 1;
	PlayerSummaryProto friend = 2;
}

message AcceptFriendInviteProto {
	string player_id = 1;
	string nia_account_id = 2;
}

message AccountSettingsProto {
	bool opt_out_social_graph_import = 1;
	SocialSettings.ConsentStatus online_status_consent = 2;
	SocialSettings.ConsentStatus last_played_date_consent = 3;
	SocialSettings.ConsentStatus codename_consent = 4;
	SocialSettings.ConsentStatus contact_list_consent = 5;
	string full_name = 6;
}

message AddLoginActionOutProto {
	enum Status {
		UNSET = 0;
		AUTH_FAILURE = 1;
		LOGIN_TAKEN = 2;
	}

	bool success = 1;
	repeated LoginDetail login_detail = 2;
	Status status = 3;
}

message AddLoginActionProto {
	IdentityProvider identity_provider = 1;
	bytes inner_message = 2;
	string auth_provider_id = 3;
}

message AddressBookImportTelemetry {
	enum AddressBookImportTelemetryId {
		UNDEFINED = 0;
		SEE_PGO_NEW_PLAYER_ONBOARDING_SCREEN = 1;
		CLICK_IMPORT_CONTACTS_BUTTON = 2;
		OPEN_ADDRESS_BOOK_IMPORT_FROM_PGO_ONBOARDING = 3;
		DISMISS_PGO_ONBOARDING = 4;
	}

	AddressBookImportTelemetryId abi_telemetry_id = 1;
}

message AdventureSyncSettingsProto {
	bool fitness_service_enabled = 1;
	bool awareness_service_enabled = 2;
	bool persistent_breadcrumb_service_enabled = 3;
	bool sensor_service_enabled = 4;
}

message AndroidDataSource {
	bool is_raw = 1;
	string app_package_name = 2;
	string stream_identifier = 3;
	string stream_name = 4;
	AndroidDevice device = 5;
	string data_type = 6;
}

message AndroidDevice {
	enum DeviceType {
		UNKNOWN = 0;
		PHONE = 1;
		TABLET = 2;
		WATCH = 3;
		CHEST_STRAP = 4;
		SCALE = 5;
		HEAD_MOUNTED = 6;
	}

	string manufacturer = 1;
	string model = 2;
	string uid = 3;
}

message ApnToken {
	string registration_id = 1;
	string bundle_identifier = 2;
	int32 payload_byte_size = 3;
}

message AppleToken {
	string id_token = 1;
}

message ApprovedCommonTelemetryProto {
	oneof TelemetryData {
		CommonTelemetryBootTime boot_time = 1;
		CommonTelemetryShopClick shop_click = 2;
		CommonTelemetryShopView shop_view = 3;
		PoiSubmissionTelemetry poi_submission_telemetry = 4;
		PoiSubmissionPhotoUploadErrorTelemetry poi_submission_photo_upload_error_telemetry = 5;
		CommonTelemetryLogIn log_in = 6;
		CommonTelemetryOmniPushReceived omni_push_received = 7;
		CommonTelemetryOmniPushOpened omni_push_opened = 8;
		PoiCategorizationEntryTelemetry poi_categorization_entry_telemetry = 9;
		PoiCategorizationOperationTelemetry poi_categorization_operation_telemetry = 10;
		PoiCategorySelectedTelemetry poi_categorization_selected_telemetry = 11;
		PoiCategoryRemovedTelemetry poi_categorization_removed_telemetry = 12;
		WayfarerOnboardingFlowTelemetry wayfarer_onboarding_flow_telemetry = 13;
	}

	ServerRecordMetadata server_data = 14;
	ClientTelemetryCommonFilterProto common_filters = 15;
}

message ArMappingSessionTelemetryProto {
	bool fulfilled_geotargeted_quest = 1;
}

message ArMappingTelemetryProto {
	enum ArMappingEntryPoint {
		UNKNOWN_ENTRY = 0;
		POI_EDIT_MENU = 1;
		POI_EDIT_TITLE = 2;
		POI_EDIT_DESCRIPTION = 3;
		POI_ADD_PHOTO = 4;
		POI_EDIT_LOCATION = 5;
		POI_NOMINATION = 6;
		POI_FULLSCREEN_INSPECTION = 7;
		GEOTARGETED_QUESTS = 8;
	}

	enum ArMappingEventId {
		UNKNOWN = 0;
		ENTER_STATE = 1;
		OPT_IN_ACCEPT = 2;
		OPT_IN_DENY = 3;
		OPT_IN_SETTINGS = 4;
		OPT_OUT_SETTINGS = 5;
		EXIT_FROM_RECORDING = 6;
		START_RECORDING = 7;
		STOP_RECORDING = 8;
		CANCEL_ENCODING = 9;
		UPLOAD_NOW = 10;
		UPLOAD_LATER = 11;
		CANCEL_UPLOAD = 12;
		START_UPLOAD_SETTINGS = 13;
		UPLOAD_SUCCESS = 14;
		OPT_IN_LEARN_MORE = 15;
		EXIT_FROM_PREVIEW = 16;
		SUBMIT_POI_AR_VIDEO_METADATA_FAIL = 17;
		UPLOAD_FAILURE = 18;
		UPLOAD_LATER_WIFI_PROMPT = 19;
		CLEAR_SCANS = 20;
		OPEN_INFO_PANEL = 21;
		RESCAN_FROM_PREVIEW = 22;
		SCAN_VALIDATION_FAILURE = 23;
	}

	enum ArMappingValidationFailureReason {
		UNKNOWN_REASON = 0;
		TOO_FAST = 1;
		TOO_SLOW = 2;
		TOO_DARK = 3;
	}

	ArMappingEventId ar_mapping_telemetry_id = 1;
	ArMappingEntryPoint source = 2;
	float recording_length_seconds = 3;
	float time_elapsed_seconds = 4;
	float percent_encoded = 5;
	int64 data_size_bytes = 6;
	ArMappingValidationFailureReason validation_failure_reason = 7;
}

message ArPhotoSessionProto {
	enum ArContext {
		NONE = 0;
		AR_ENCOUNTER = 1;
		AR_SNAPSHOT = 2;
		SINGLEPLAYER_BUDDY = 3;
		MULTIPLAYER_BUDDY = 4;
	}

	enum ArType {
		UNSET = 0;
		PLUS = 1;
		CLASSIC = 2;
	}

	enum BatteryStatus {
		UNDETERMINED = 0;
		CHARGING = 1;
		DISCHARGING = 2;
		NOT_CHARGING = 3;
		FULL = 4;
	}

	enum Step {
		UNKNOWN = 0;
		CAMERA_PERMISSION_GRANTED = 1;
		ARPLUS_PLANE_FOUND = 2;
		ARPLUS_POKEMON_PLACED = 3;
		PHOTO_TAKEN = 4;
		PHOTO_SHARED = 5;
	}

	message ArConditions {
		int64 timestamp = 1;
		bool occlusions_enabled = 2;
		Step current_ar_step = 3;
	}

	message BatterySample {
		ArConditions conditions = 1;
		float battery_level = 2;
		BatteryStatus status = 3;
	}

	message FramerateSample {
		ArConditions conditions = 1;
		int32 framerate = 2;
	}

	message ProcessorSample {
		ArConditions conditions = 1;
		float cpu_usage = 2;
		float gpu_usage = 3;
	}

	ArType ar_type = 1;
	Step furthest_step_completed = 2;
	int32 num_photos_taken = 3;
	int32 num_photos_shared = 4;
	int32 num_photos_taken_occlusions = 5;
	int32 num_occlusions_enabled = 6;
	int32 num_occlusions_disabled = 7;
	ArContext ar_context = 8;
	int64 session_length = 9;
	int64 session_length_occlusions = 10;
	int32 num_photos_shared_occlusions = 11;
	string model_url = 12;
	string ardk_version = 13;
	int32 average_framerate = 14;
	float average_battery_per_min = 15;
	float average_cpu_usage = 16;
	float average_gpu_usage = 17;
	repeated FramerateSample framerate_samples = 18;
	repeated BatterySample battery_samples = 19;
	repeated ProcessorSample processor_samples = 20;
	int32 session_start_to_plane_detection_ms = 21;
	int32 plane_detection_to_user_interaction_ms = 22;
}

message AssetBundleDownloadTelemetry {
	AssetTelemetryIds asset_event_id = 1;
	string bundle_name = 2;
	uint32 size = 3;
}

message AssetPoiDownloadTelemetry {
	AssetTelemetryIds asset_event_id = 1;
	string fort_id = 2;
	uint32 size = 3;
}

message AssetStreamCacheCulledTelemetry {
	AssetTelemetryIds asset_event_id = 1;
	uint32 space_released = 2;
}

message AssetStreamDownloadTelemetry {
	AssetTelemetryIds asset_event_id = 1;
	string url = 2;
	uint32 size = 3;
}

message AsyncFileUploadCompleteOutProto {
	enum ErrorStatus {
		UNSET = 0;
		SERVER_UPDATE_FAILED = 1;
		MISSING_SUBMISSION_ID = 2;
		MISSING_SUBMISSION_TYPE = 3;
		MISSING_UPLOAD_STATUS = 4;
	}

	string poi_id = 1;
	bytes post_action_game_info = 2;
}

message AsyncFileUploadCompleteProto {
	enum Status {
		UNSET = 0;
		UPLOAD_DONE = 1;
		UPLOAD_FAILED = 2;
	}

	string submission_id = 1;
	Status upload_status = 2;
}

message AvailableSkuProto {
	string id = 1;
	bool is_third_party_vendor_item = 2;
	repeated CurrencyQuantityProto price = 3;
	repeated CurrencyQuantityProto currency_granted = 4;
	repeated GameItemContentProto game_item_content = 5;
	repeated SkuPresentationProto presentation_data = 6;
	bool can_be_purchased = 7;
	string subscription_id = 8;
}

message AvailableSubmissionsPerSubmissionType {
	int32 submissions_left = 1;
	int32 min_player_level = 2;
	bool is_feature_enabled = 3;
	int64 time_window_for_submissions_limit_ms = 4;
	int32 max_poi_distance_in_meters = 5;
	repeated string blacklisted_os = 6;
	repeated string blacklisted_device_id = 7;
	bool is_whitelisted_user = 8;
	bool is_upload_later_enabled = 9;
	float daily_new_submissions = 10;
	int32 max_submissions = 11;
	bool is_wayfarer_onboarding_enabled = 12;
}

message AvatarCustomizationTelemetry {
	AvatarCustomizationTelemetryIds avatar_customization_click_id = 1;
	string asset_name = 2;
	string sku = 3;
	bool has_enough_coins = 4;
	string group_name = 5;
	string color_choice_id = 6;
}

message BAAOKGNMHCA {
	string jdloancnick = 1;
	bool jlhkneckmal = 2;
}

message BADOCDOEMKM {
	string flnekghfefk = 1;
	string lbcoedmpjff = 2;
}

message BAJPDMOFJGM {
	FFHMCAEIELD bhapbonoheo = 1;
	FFHMCAEIELD hgacgnehjjk = 2;
	repeated NDLCKIKMCOO njjjmdmbacb = 4;
	FFHMCAEIELD cpmeedigfpo = 5;
}

message BAPONHFEJEM {
	enum HKGNKEKIFOP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	HKGNKEKIFOP hhkodmoefol = 1;
}

message BBCLOIBKMLL {
	int32 gpajobppnke = 1;
	int32 eibpbejeogb = 2;
}

message BBEOEGEEGGI {
}

message BBGANBNHABH {
}

message BBKFFFNNJOF {
	uint64 igfdgcikjem = 1;
}

message BBKKIBGFOCJ {
	int32 gjjphgnclek = 1;
	int32 ojekmifomon = 2;
	int32 moganjjaico = 3;
	int32 caaegollclf = 4;
}

message BBMBBEMEBPF {
	enum JCDAOBPCBEH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVALID_ROUTE = 3;
		ERROR_OLD_VERSION = 4;
		ERROR_ROUTE_NOT_EDITABLE = 5;
	}

	JCDAOBPCBEH hhkodmoefol = 1;
	NDDJFAGALDG ncncmpngplk = 2;
	MIMJGJBDMIH bhnpoihopkm = 3;
}

message BCFBIFHJGLO {
	uint64 igfdgcikjem = 1;
	bool dcdflocpcki = 2;
	uint32 dnpkkjjggel = 3;
	int32 ldmkmblagjf = 4;
}

message BCFBPANEMFP {
	string bdlnhilgeab = 1;
	NKDPOODGENC.OHPOBKKLMHO eonalmmgobe = 2;
	NKDPOODGENC.BMIEKPGKNMG cghampncghf = 3;
}

message BCFOPFOFKHO {
	float hckalfhlppd = 1;
	float hkbfobibkbm = 2;
	float agjncbgdhpb = 3;
	float ccaofjbpbhg = 4;
	float bemjdlfkgcm = 5;
	float mjcnbnaamha = 6;
	float dhflikeigdc = 7;
	float kjfcblhllgd = 8;
	float kpibfmhnapo = 9;
	float jkmifhfkgpj = 10;
}

message BCGAPOJCPJF {
	int32 namaeojjhba = 1;
	repeated PCNMLNDPOML kngdhlifpic = 2;
}

message BCKDMLPDPCC {
	IGBJMLOPACK aapbgmpbflo = 1;
}

message BCPANMIIGLE {
	double chhgiikbnma = 1;
	double flaphjheime = 2;
	string gfepbfmmdcc = 3;
	bool mcgaibpklmm = 4;
}

message BDBFDABJAMF {
	bool lopibpgplck = 1;
}

message BDCHOGFOPJM {
	message KGEJLKIAHHH {
		int32 bgedafloohd = 1;
		PCNMLNDPOML igfdgcikjem = 2;
		IBGGKKNEKOA nnnmmlpnchp = 3;
	}

	repeated KGEJLKIAHHH ipfdpnkiben = 1;
}

message BDFFFKEOJAD {
}

message BDIEGMBHCGE {
	uint64 igfdgcikjem = 1;
	BFABHCMKGCB nagjhmlkogb = 2;
	PCNMLNDPOML ppcoajflhnl = 3;
	IBGGKKNEKOA.IBGFAGKHKGN iklbjllillb = 4;
	bool gegkmcapagn = 5;
	bool dcdflocpcki = 6;
	FLPEKKJPPFC dfkgpalmmke = 7;
}

message BDKIGPBKPNA {
	string nagacbjfknm = 1;
	int64 apebeecjloh = 2;
}

message BDLILFKJFJJ {
	string ambapacfacm = 1;
	string blciolooobm = 2;
}

message BEBAFPEANPB {
}

message BEDPDBIHAJB {
}

message BEGGKGHLMBF {
	BFABHCMKGCB jhjcnaadmnb = 1;
}

message BELDODCMJBD {
	enum KABABDPABMG {
		EXPRESSION_UNSET = 0;
	}

	enum LOCCKLCPFOD {
		CHARACTER_UNSET = 0;
	}

	LOCCKLCPFOD eonalmmgobe = 1;
	KABABDPABMG cghampncghf = 2;
}

message BEPCNJEBCJD {
	bytes igbehjkcakh = 1;
	string ehphefgfidk = 2;
}

message BEPHAAOFDHN {
	HBIFOKJCJED hhkodmoefol = 1;
	NABADAFLIPI hcfclimmoca = 2;
	JNPCNHMKDMB fcdigeponpf = 3;
}

message BFFFJBALIMJ {
	bool plmpdlcoemi = 1;
	repeated string jfpmmhohmhf = 2;
}

message BFGBLHDGLGM {
	ALOCBADNLJC.IFINICEPNLK llponloodfk = 1;
	PAEHCJKJPLP acbpiimiphk = 2;
	bool bbdbkaoegnl = 3;
}

message BFNJLCGGMOA {
	string agiklpibnjc = 1;
}

message BGAHMIKEONL {
	IDJMLGDHNHI ldccnikjabe = 1;
	float ebjppbjkhpd = 2;
	float kdlphkpkjdl = 3;
	float gkepngmapkj = 4;
}

message BGAOHCCGAGJ {
	enum CFKDMJEKJDO {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_LEVEL_TOO_LOW = 2;
		ERROR_NO_NAID_LINKED = 3;
		ERROR_TOO_MANY_POKEMON = 4;
		ERROR_SERVER_CLIENT_ENERGY_COST_MISMATCH = 5;
		ERROR_INSUFFICIENT_ENERGY = 6;
		ERROR_TRANSFER_IN_PROGRESS = 7;
		ERROR_POKEMON_DEPLOYED = 10;
		ERROR_POKEMON_IS_EGG = 11;
		ERROR_POKEMON_IS_BUDDY = 12;
		ERROR_POKEMON_BAD = 13;
		ERROR_POKEMON_IS_MEGA = 14;
		ERROR_POKEMON_FAVORITED = 15;
		ERROR_POKEMON_NOT_FOUND = 16;
		ERROR_VALIDATION_UNKNOWN = 17;
		ERROR_POKEMON_HAS_COSTUME = 21;
		ERROR_POKEMON_IS_SHADOW = 22;
		ERROR_POKEMON_DISALLOWED = 23;
		ERROR_PHAPI_REQUEST_BODY_FALSE = 30;
		ERROR_PHAPI_REQUEST_PARAMETERS_DNE = 31;
		ERROR_PHAPI_REQUEST_PARAMETERS_FALSE = 32;
		ERROR_PHAPI_MAINTENANCE = 33;
		ERROR_PHAPI_SERVICE_ENDED = 34;
		ERROR_PHAPI_UNKNOWN = 35;
		ERROR_PHAPI_NAID_DOES_NOT_EXIST = 36;
		ERROR_PHAPI_NO_SPACE_IN_BOX = 37;
		ERROR_PHAPI_DATA_CONVERSION_FAILURE = 38;
		ERROR_PHAPI_WAITING_FOR_RECEIPT = 39;
		ERROR_PHAPI_PLAYER_NOT_USING_PH_APP = 40;
	}

	CFKDMJEKJDO llponloodfk = 1;
	int32 jhbbfkcbjlo = 2;
	int32 ghnhlkpncig = 3;
	map<int32, int32> dabfcdbomhd = 4;
}

message BGFJALEIHNE {
	int64 bkkcjfmmhpl = 1;
	string ahcgfgkkkdn = 2;
	repeated int32 gdghkinahdb = 3;
	double icnndjclaef = 4;
	double ogmopfkhcpa = 5;
	double kbgeoncpmbj = 6;
	double jkgggjheffd = 7;
	string cffbhlodofi = 8;
}

message BGGGBCMEHDB {
	enum AIKHBGNFHAD {
		UNSET = 0;
		SUCCESS = 1;
	}

	AIKHBGNFHAD hhkodmoefol = 1;
	repeated NCFPKMAHCKB aflnkbolkmh = 2;
}

message BGGJJKFKBAH {
	BFABHCMKGCB fgajkiejlgl = 1;
	string gfepbfmmdcc = 2;
	double icnndjclaef = 3;
	double ogmopfkhcpa = 4;
}

message BGHBCCEGNKK {
	message CGMJJPJNNNK {
		int64 hikiiohcioo = 1;
		double chhgiikbnma = 3;
		double flaphjheime = 4;
	}

	LLMADHGMIEE pganhliigaj = 1;
	repeated CGMJJPJNNNK mmdnnmoanon = 2;
}

message BGOGOGOMLBN {
	MBKJCODCAKE bkmmhnbfabl = 1;
	MAIHDOEJGIJ nondcanmhmc = 2;
}

message BGPCHGHEGKK {
	string ahcgfgkkkdn = 1;
	string dileendfikh = 2;
	repeated BKMJKOAKFIM enimilkdmhc = 3;
	BKMJKOAKFIM pkmkkebhfcc = 4;
	int64 ehmhemllaog = 5;
	MDKGHCMCNMF jlpegfaaibo = 6;
}

message BHANAENDPCM {
	repeated PGPFHAIMLNH hehhapknalf = 1;
}

message BHCMFBEDOEL {
	enum GGFAOCIPGMF {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_NOT_FOUND = 2;
		ERROR_ACCESS_DENIED = 3;
	}

	GGFAOCIPGMF hhkodmoefol = 1;
	EPEFIKFDABP pjjfecngafl = 2;
}

message BHCNOFEPILP {
	BKMJKOAKFIM.OOKHABKBLAB ldccnikjabe = 1;
	uint32 necmjpacjaa = 2;
	int32 aeaajncnogj = 3;
	int32 ccmakpidfhl = 4;
	int32 knleifffbdd = 5;
	int32 ockdoifjhec = 6;
	uint64 gpdelkhfogk = 7;
	uint32 ihmmmjhelbh = 8;
	uint32 idnnkfeppgn = 9;
}

message BHDLBNFBLHK {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	ALOCBADNLJC.IFINICEPNLK hhkodmoefol = 3;
	FNMDDHBCCFB kanajhkhmhb = 4;
}

message BHHDOMDBFKG {
	string ahcgfgkkkdn = 1;
	double icnndjclaef = 2;
	double ogmopfkhcpa = 3;
	double kbgeoncpmbj = 4;
	double jkgggjheffd = 5;
	string cffbhlodofi = 6;
}

message BHJLGOJLHKJ {
}

message BHMIGJOMIBB {
	int32 hiinemaebde = 1;
	int64 foelkjkdeca = 2;
}

message BHMJJACGLIJ {
	string dileendfikh = 1;
	int64 ddamlnnedfe = 2;
	bool cnplcbdolod = 3;
}

message BHOCCJPNHGC {
	repeated GMICNCPLCMG gaokcnnjnpf = 1;
}

message BIEMLEDNKNK {
	string ljknacljjeb = 1;
}

message BIEPMDIBFDP {
	repeated CLBPAJOPOEH odmdefehenm = 2;
}

message BINLLKFOEDD {
	int32 hiinemaebde = 1;
	int64 hapleckidoo = 2;
}

message BJANIHKBELB {
	string godfillmpmn = 1;
	double icnndjclaef = 2;
	double ogmopfkhcpa = 3;
	double ebgmfhpehdl = 4;
	double fbhdidimill = 5;
	MDKGHCMCNMF jlpegfaaibo = 7;
	bool pojjmoaoifd = 8;
}

message BJBJJBOKJBP {
	message NBJDLPGIJFG {
		enum JMOICIHMOEG {
			UNSET = 0;
			ADVENTURE_SYNC = 1;
			BUDDY = 2;
			CANDY_GENERAL = 3;
			EGG = 4;
			EGG_INCUBATOR = 5;
			EVENT_MOVE = 6;
			EVOLUTION = 7;
			FIELD_RESEARCH = 8;
			FRIENDSHIP = 9;
			GIFT = 10;
			INCENSE = 11;
			LUCKY_EGG = 12;
			LURE_MODULE = 13;
			PHOTOBOMB = 14;
			POKESTOP = 15;
			RAID = 16;
			RAID_PASS = 17;
			SPAWN_UNKNOWN = 18;
			STAR_PIECE = 19;
			STARDUST = 20;
			TEAM_ROCKET = 21;
			TRADE = 22;
			TRANSFER_CANDY = 23;
			BATTLE = 24;
			XP = 25;
			SHOP = 26;
			LOCATION = 27;
			EVENT = 28;
			MYSTERY_BOX = 29;
			TRADE_BALL = 30;
			CANDY_XL = 31;
			HEART = 32;
			TIMER = 33;
		}

		string bdlnhilgeab = 1;
		JMOICIHMOEG iofhmehcpio = 2;
	}

	string gakkodlmcpa = 1;
	AIIIKINAFLJ.GMJCNLJFJOG odojoiohoca = 3;
	string ennjjhpgkej = 4;
	repeated NBJDLPGIJFG iiabjjhoglb = 5;
}

message BJBPJICMDMC {
	enum NPLEJDCMENA {
		UNSET = 0;
		ALL = 1;
		DEFAULT = 2;
		OWNED = 3;
		FEATURED = 4;
		PURCHASABLE = 5;
		UNLOCKABLE = 6;
	}

	OHBIGINBFMN bkgmankfofi = 1;
	repeated MHODMLNNIIP.LJMHHPCIOCM hhjkoenlkdl = 2;
	repeated NPLEJDCMENA ajfjnckaejk = 3;
	int32 omknghpbcol = 4;
	int32 ffcapiaddcc = 5;
}

message BJENEHFCKDC {
	string gfepbfmmdcc = 1;
	uint64 igfdgcikjem = 2;
	double icnndjclaef = 3;
	double ogmopfkhcpa = 4;
}

message BJFIKANNBOP {
	FPJEELJLGLH pdoalpalndj = 1;
	bool paofikcmlak = 2;
}

message BJGOFBHLGLA {
	bool oeoopldjjlf = 1;
	int32 alholjmebcd = 2;
}

message BJIOAENMIKC {
	int32 ffgmdjnjoml = 1;
	int32 hglnjohehkn = 2;
	int32 cnmgnplkdcc = 3;
	int32 ojcfmpeedjl = 4;
	int32 fcgccpcgbed = 5;
	int32 ljcinhfobnj = 6;
	int64 dlooadglado = 7;
	int64 mofpbklenae = 8;
	int32 fjfciilhglo = 9;
	bool kenkficafao = 10;
	int32 nofcaoedjoh = 11;
	bool ngdcdghnjff = 12;
	bool pnpkboifmlk = 13;
	int32 cgahjdoddpn = 14;
	int32 iinciigenfl = 15;
}

message BJLPEAMODOH {
	string flnekghfefk = 1;
}

message BJMJHHELJFN {
	enum CAADMJEMGEM {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_DISABLED = 2;
		ERROR_UNAVAILABLE = 3;
		ERROR_GENERATING_IN_COOL_DOWN = 4;
	}

	CAADMJEMGEM llponloodfk = 1;
	string oikeljpelkn = 2;
}

message BJPPEABJPNH {
	enum BADEPNNIIDG {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		ERROR_ALREADY_HAS_POKEMON_ON_FORT = 2;
		ERROR_OPPOSING_TEAM_OWNS_FORT = 3;
		ERROR_FORT_IS_FULL = 4;
		ERROR_NOT_IN_RANGE = 5;
		ERROR_PLAYER_HAS_NO_TEAM = 6;
		ERROR_POKEMON_NOT_FULL_HP = 7;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 8;
		ERROR_POKEMON_IS_BUDDY = 9;
		ERROR_FORT_DEPLOY_LOCKOUT = 10;
		ERROR_PLAYER_HAS_NO_NICKNAME = 11;
		ERROR_POI_INACCESSIBLE = 12;
		ERROR_LEGENDARY_POKEMON = 13;
		ERROR_INVALID_POKEMON = 14;
	}

	BADEPNNIIDG hhkodmoefol = 1;
	OLBJHJGBGFK nmjandalhod = 2;
	NHLCGNMFNOM mclknpmojhc = 3;
	NIHBJDDHHNM kmhdejboghd = 4;
}

message BKAKCOFMHMP {
	repeated string mkdlflaoaki = 1;
}

message BKEDJHGEELJ {
	string doblngnlada = 1;
	repeated BJBJJBOKJBP.NBJDLPGIJFG inmlldjleba = 2;
	string lolpnmgeeca = 3;
	string llgbjcaklpc = 4;
	string lpgncpcdfbc = 5;
	string nhcckjckilk = 6;
	string jklfhfencda = 7;
	string madobcggmje = 8;
	string ddfdmcbipjb = 9;
}

message BKHAIPKDHAG {
	enum MOHMNCJFOGM {
		UNSET = 0;
		ENTER = 1;
		RETAKE = 2;
		CONFIRM = 3;
		EXIT = 4;
	}

	enum POBBFIKIFEF {
		UNKNOWN = 0;
		POI_NOMINATION_ENTER = 1;
		POI_TUTORIAL_COMPLETE = 2;
		POI_MAP_CHANGEDVIEW_MAP = 3;
		POI_MAP_CHANGEDVIEW_SATELLITE = 4;
		POI_MAP_CENTER_LOCATION = 5;
		POI_LOCATION_SET = 6;
		POI_PHOTO_CAMERA_ENTER = 7;
		POI_PHOTO_CAMERA_EXIT = 8;
		POI_TITLE_ENTERED = 9;
		POI_DESCRIPTION_ENTER = 10;
		POI_DETAILS_CONFIRM = 11;
		POI_SUPPORTINGINFO_ENTER = 12;
		POI_SUBMIT_BUTTON_HIT = 13;
		POI_EXIT_BUTTON_HIT = 14;
	}

	POBBFIKIFEF bjkjpdimbmf = 1;
	PEKEKKLJHEB lfbhamniogc = 2;
	MOHMNCJFOGM ngcghhpepbo = 3;
}

message BKLHBIHALGD {
	string mpaekobkjkh = 1;
	string nefcmignngd = 2;
	string kfecfadibeo = 3;
}

message BKMJKOAKFIM {
	enum OOKHABKBLAB {
		UNSET = 0;
		ATTACK = 1;
		DODGE = 2;
		SPECIAL_ATTACK = 3;
		SWAP_POKEMON = 4;
		FAINT = 5;
		PLAYER_JOIN = 6;
		PLAYER_QUIT = 7;
		VICTORY = 8;
		DEFEAT = 9;
		TIMED_OUT = 10;
		SPECIAL_ATTACK_2 = 11;
	}

	OOKHABKBLAB ldccnikjabe = 1;
	int64 kiopioaahbe = 2;
	int32 aeaajncnogj = 3;
	int32 ccmakpidfhl = 5;
	int32 knleifffbdd = 6;
	int32 ockdoifjhec = 7;
	uint64 gpdelkhfogk = 8;
	ELEGOIEBFIM gjhlbedkgfo = 9;
	OCIFIIGACHF hmaibjjedoa = 10;
	int64 nmklbgbmahe = 11;
	int64 kpkhjphakfb = 12;
	ELEGOIEBFIM bjlpdigfecl = 13;
	uint64 ppcoajflhnl = 14;
	CPGDIKHDJFK cgdemjggjkn = 15;
}

message BLBHFOMAAHK {
	uint64 igfdgcikjem = 1;
	string ljknacljjeb = 2;
}

message BLEBJMBMBNA {
	uint64 ijaiokookkb = 1;
	int32 feikfoemoca = 2;
	int64 jgefeolnhdk = 3;
}

message BLHGFCPDMDA {
}

message BLHOAMLPHPM {
	enum CNEGOAFOKDN {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 3;
		ERROR_ACCESS_DENIED = 4;
	}

	CNEGOAFOKDN hhkodmoefol = 1;
	JDHOCBHIAMN bniaebpgnal = 2;
}

message BLJACMAPGHP {
	oneof LAIHCDLBDDN {
		NEJJDLIMPDA join_lobby_data = 2;
		NAGODODJLEC join_lobby_response_data = 3;
		BEBAFPEANPB leave_lobby_data = 4;
		MFJBAGNLGGC leave_lobby_response_data = 5;
		DFCIIKDICFB lobby_visibility_data = 6;
		GHJPJPAHGIF lobby_visibility_response_data = 7;
		KDLPNEJHOGN get_raid_details_data = 8;
		JLCPCCCPGKN get_raid_details_response_data = 9;
		NDJMIFJGCAB start_raid_battle_data = 10;
		FNNAOINABOO start_raid_battle_response_data = 11;
		AMJNCLEPHBG attack_raid_data = 12;
		JPEKHIIBGOK attack_raid_response_data = 13;
		PGFBOGCMGHJ send_raid_invitation_data = 14;
		DEGFLEFHHAE send_raid_invitation_response_data = 15;
		IGBIBJHMFCF on_application_focus_data = 16;
		BDBFDABJAMF on_application_pause_data = 17;
		PDJAMOCJAAA on_application_quit_data = 18;
		PFIANKPDNLB exception_caught_data = 19;
		PKHBHFELMEE progress_token_data = 20;
		MFDBCLLLINJ rpc_error_data = 21;
		GMDGFNKIHDL client_prediction_inconsistency_data = 22;
		IEGLPFCLANN raid_end_data = 23;
	}

	message KKCINGDMPKK {
		enum CEOAGOPBEOD {
			NO_TYPE = 0;
			JOIN_LOBBY_REQUEST = 1;
			JOIN_LOBBY_RESPONSE = 2;
			LEAVE_LOBBY_REQUEST = 3;
			LEAVE_LOBBY_RESPONSE = 4;
			LOBBY_VISIBILITY_REQUEST = 5;
			LOBBY_VISIBILITY_RESPONSE = 6;
			GET_RAID_DETAILS_REQUEST = 7;
			GET_RAID_DETAILS_RESPONSE = 8;
			START_RAID_BATTLE_REQUEST = 9;
			START_RAID_BATTLE_RESPONSE = 10;
			ATTACK_RAID_REQUEST = 11;
			ATTACK_RAID_RESPONSE = 12;
			SEND_RAID_INVITATION_REQUEST = 13;
			SEND_RAID_INVITATION_RESPONSE = 14;
			ON_APPLICATION_FOCUS = 15;
			ON_APPLICATION_PAUSE = 16;
			ON_APPLICATION_QUIT = 17;
			EXCEPTION_CAUGHT = 18;
			PROGRESS_TOKEN = 19;
			RPC_ERROR = 20;
			CLIENT_PREDICTION_INCONSISTENCY = 21;
			PLAYER_END_RAID = 22;
		}

		CEOAGOPBEOD ldccnikjabe = 1;
		uint32 jpejmpfnemc = 2;
		uint32 cdllhoejhkb = 3;
		float knabklagmip = 4;
		float oapfochbljl = 5;
	}

	KKCINGDMPKK mebcjpidnjm = 1;
}

message BLKHPJMAAOJ {
	bool mleemicdjji = 1;
	bool nmgijiogcab = 2;
	bool oddfhfoafaa = 3;
	bool fdjknmphbom = 4;
}

message BLLKLCHINHP {
	enum JOLHHPMGGEL {
		UNSET = 0;
		WITH_POKEMON_TYPE = 1;
		WITH_POKEMON_CATEGORY = 2;
		WITH_WEATHER_BOOST = 3;
		WITH_DAILY_CAPTURE_BONUS = 4;
		WITH_DAILY_SPIN_BONUS = 5;
		WITH_WIN_RAID_STATUS = 6;
		WITH_RAID_LEVEL = 7;
		WITH_THROW_TYPE = 8;
		WITH_WIN_GYM_BATTLE_STATUS = 9;
		WITH_SUPER_EFFECTIVE_CHARGE = 10;
		WITH_ITEM = 11;
		WITH_UNIQUE_POKESTOP = 12;
		WITH_QUEST_CONTEXT = 13;
		WITH_THROW_TYPE_IN_A_ROW = 14;
		WITH_CURVE_BALL = 15;
		WITH_BADGE_TYPE = 16;
		WITH_PLAYER_LEVEL = 17;
		WITH_WIN_BATTLE_STATUS = 18;
		WITH_NEW_FRIEND = 19;
		WITH_DAYS_IN_A_ROW = 20;
		WITH_UNIQUE_POKEMON = 21;
		WITH_NPC_COMBAT = 22;
		WITH_PVP_COMBAT = 23;
		WITH_LOCATION = 24;
		WITH_DISTANCE = 25;
		WITH_POKEMON_ALIGNMENT = 26;
		WITH_INVASION_CHARACTER = 27;
		WITH_BUDDY = 28;
		WITH_BUDDY_INTERESTING_POI = 29;
		WITH_DAILY_BUDDY_AFFECTION = 30;
		WITH_POKEMON_LEVEL = 31;
		WITH_SINGLE_DAY = 32;
		WITH_UNIQUE_POKEMON_TEAM = 33;
		WITH_MAX_CP = 34;
		WITH_LUCKY_POKEMON = 35;
		WITH_LEGENDARY_POKEMON = 36;
		WITH_TEMP_EVO_POKEMON = 37;
		WITH_GBL_RANK = 38;
		WITH_CATCHES_IN_A_ROW = 39;
		WITH_ENCOUNTER_TYPE = 40;
		WITH_COMBAT_TYPE = 41;
		WITH_GEOTARGETED_POI = 42;
		WITH_ITEM_TYPE = 43;
		WITH_RAID_ELAPSED_TIME = 44;
		WITH_FRIEND_LEVEL = 45;
		WITH_STICKER = 46;
		WITH_POKEMON_CP = 47;
		WITH_RAID_LOCATION = 48;
		WITH_FRIENDS_RAID = 49;
		WITH_POKEMON_COSTUME = 50;
	}

	oneof KNLMLCKIPEH {
		NFENEOKGAAG with_pokemon_type = 2;
		AMLJPMNGMEB with_pokemon_category = 3;
		JEIKOEDIMAG with_weather_boost = 4;
		JFJGADHOEMK with_daily_capture_bonus = 5;
		KJFDIFAJMAE with_daily_spin_bonus = 6;
		PKHHMKIPNGC with_win_raid_status = 7;
		EFNDHPBLEDO with_raid_level = 8;
		MBGEDDOJOJI with_throw_type = 9;
		ICPFFCNLIKF with_win_gym_battle_status = 10;
		OGLLHANMMGE with_super_effective_charge_move = 11;
		LNNHPJKMBJA with_item = 12;
		ICGJCOLIPFE with_unique_pokestop = 13;
		LGCGLJMMCOL with_quest_context = 14;
		ANOCJHMLGAN with_badge_type = 15;
		CFJIJIDMDII with_player_level = 16;
		DIOBMFEKBJL with_win_battle_status = 17;
		APKBDBNEONB with_unique_pokemon = 18;
		KBLOPKKNMJG with_npc_combat = 19;
		GEADAHNAJOM with_pvp_combat = 20;
		FHOIKKINAOI with_location = 21;
		MMEBGDDOFGJ with_distance = 22;
		IFKBBGPOIIO with_invasion_character = 23;
		JKBPCKHOGIJ with_pokemon_alignment = 24;
		GECPLDJBJMH with_buddy = 25;
		GEFIDLFOPMI with_daily_buddy_affection = 26;
		FFNJAPFFHEJ with_pokemon_level = 27;
		OCJDEIKFKJB with_max_cp = 28;
		BHOCCJPNHGC with_temp_evo_id = 29;
		HJGICGMKFJC with_gbl_rank = 30;
		HLDGADPPLEL with_encounter_type = 31;
		POILAFPCEPF with_combat_type = 32;
		CEHOOHHFLBA with_item_type = 33;
		AIFODDOHDJN with_elapsed_time = 34;
		EPEIBEDBKKN with_friend_level = 35;
		HKBBCEHHGMP with_pokemon_cp = 36;
		PLPADMHFABD with_raid_location = 37;
		NCJABLLOEPN with_friends_raid = 38;
		NBHAGEDANMM with_pokemon_costume = 39;
	}

	JOLHHPMGGEL ldccnikjabe = 1;
}

message BLMJFADJOOD {
	string kclkpcagdbm = 1;
	int32 gnjcdjmpajp = 2;
}

message BLPJLDALCOM {
	message BIHAEBPBHGL {
		message CNOFDLEAPOL {
			float bmlgfhobfkf = 1;
			float ibbepagpapi = 2;
			float fidhnhpidfo = 3;
			float pknnamkdnmk = 4;
			float cfjnchcgpgn = 5;
			float agbaagjchln = 6;
		}

		bool jfiepbnpegh = 1;
		int32 pjnkeakogoh = 2;
		bool oldpgjddnkc = 3;
		bool dmbeoolagnp = 4;
		int32 cjdlmoldihn = 5;
		CNOFDLEAPOL kdchlfkffpi = 6;
		bool opheipnnfeh = 7;
	}

	message CHBKCJIBDCM {
		string cedebeinicg = 1;
		string kggbifecdgf = 2;
		string clagjlfgplm = 3;
		string doblngnlada = 4;
		string gpchpipjlii = 5;
		string hkjimpfjnfd = 6;
		string kndcdmcicip = 7;
	}

	bool olemmeofbhh = 1;
	int32 fclkdklebea = 2;
	int32 gcedigchkkh = 3;
	bool khnbaiagojp = 4;
	bool onkohnccgfn = 5;
	bool mgmhahkolnd = 6;
	bool mmofnbnhbml = 7;
	bool impoeaedbhl = 8;
	int32 mdpcadkammn = 9;
	BIHAEBPBHGL gcfehmendak = 10;
	bool pfedjgpnkmf = 11;
	MJGAKBNIINJ pjieoddahki = 12;
	CHBKCJIBDCM ebmgmkgadhi = 13;
}

message BMJGPPGKJBI {
	EFDCDOBEKEN kobgohfemnn = 1;
	LGPDDJHCOJP digaaeaflgg = 2;
}

message BNLIDEEPPKB {
	enum EMLNEILKDCB {
		UNSET = 0;
		SUCCESS = 1;
	}

	message BCMBCJILEBG {
		repeated DMPNAOEDHIF dpmplnjinki = 1;
		int32 jdendfldilp = 2;
	}

	message CNDOLENGFIB {
		repeated GNADEEPKNPK hhedkaoobdd = 1;
		int32 jdendfldilp = 2;
	}

	EMLNEILKDCB hhkodmoefol = 1;
	int64 ogcbepbaeln = 2;
	repeated GAMMMHKHAMF aoapobnhdni = 3;
	BCMBCJILEBG kpmgddkijcf = 4;
	CNDOLENGFIB baejdbomnio = 5;
}

message BNNFDBJDMJG {
	oneof JBNIHGNFFPJ {
		uint64 pokemon_id = 1;
		BFABHCMKGCB item = 2;
		int32 pokedex_entry_id = 3;
		bool player_stats = 4;
		bool player_currency = 5;
		bool player_camera = 6;
		bool inventory_upgrades = 7;
		bool applied_items = 8;
		bool egg_incubators = 9;
		int32 pokemon_family_id = 10;
		EFDCDOBEKEN quest_type = 11;
		string avatar_template_id = 12;
		bool raid_tickets = 13;
		bool quests = 14;
		bool gift_boxes = 15;
		bool beluga_incense_box = 16;
		bool vs_seeker_upgrades = 17;
		bool route_maker = 18;
		bool limited_purchase_sku_record = 19;
		bool route_play = 20;
		int32 mega_evo_pokemon_species_id = 21;
		string sticker_id = 22;
		bool pokemon_home = 23;
		DCAECPGGPON badge = 24;
		bool player_stats_snapshot = 25;
		int64 unknown_key = 26;
		uint64 fake_data = 27;
		FFKJOOMBLDO pokedex_category = 28;
		bool player_attributes = 30;
	}

}

message BOCDLIGKPGI {
	int32 ficmgmlbhmp = 1;
	int32 fdnjgblooda = 2;
}

message BOHMFLNECKA {
	bool innkieapkle = 1;
	int32 abpepejfnee = 2;
}

message BOJDGFGFLNL {
	string jdloancnick = 1;
	string gfepbfmmdcc = 2;
	double kdfjiijebjg = 3;
	double agndimhpnjk = 4;
	int64 dfnocjfpleg = 5;
	string mpaekobkjkh = 6;
	bool jlhkneckmal = 7;
	string ekcogckcfmn = 8;
	string aficmjlndpa = 9;
	repeated string ncmogglbdib = 10;
	string idjkokooncn = 11;
	string mgeiaokbdbi = 12;
	GDLGLBOBHMI lkpgpcamndg = 13;
	uint64 ghadpgjcoel = 14;
	string bgfmhibpahk = 15;
	uint64 lcnbmhadlil = 16;
	bool nghdnklolom = 17;
}

message BPFAANHCFCE {
	enum KLKNJNCOKEP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	repeated DEIHIPMJDKG dpoggplfmpj = 1;
	KLKNJNCOKEP llponloodfk = 2;
}

message BPLDDEGKOGC {
	uint32 hpkpcaeihng = 1;
	int64 faafeccnndg = 2;
}

message BPLDMJNFOCK {
	oneof MOMDEJJKFOD {
		int32 lifetime_max_count = 3;
		int32 per_competitive_combat_season_max_count = 4;
	}

	AMKKJIAEOGO piddpkfgmod = 1;
	string ablflbgjhgk = 2;
}

message BPLLEJLMLPF {
	int64 pkljdiaplkc = 1;
	string gfepbfmmdcc = 2;
	double icnndjclaef = 3;
	double ogmopfkhcpa = 4;
	double kbgeoncpmbj = 5;
	double jkgggjheffd = 6;
}

message BackgroundToken {
	bytes token = 1;
	int64 expiration_time = 2;
	bytes iv = 3;
}

message BattlePartyTelemetry {
	BattlePartyTelemetryIds battle_party_click_id = 1;
	int32 battle_party_count = 2;
	int32 battle_party_number = 3;
}

message BoundingRect {
	double north = 1;
	double south = 2;
	double east = 3;
	double west = 4;
}

message BuddyEncounterHelpTelemetry {
	int32 pokemon_id = 1;
	int32 cp = 2;
	string encounter_type = 3;
	bool ar_classic_enabled = 4;
	bool ar_plus_enabled = 5;
	ECBJDBHKDAE encounter = 6;
}

message BuddyMapEmotionCheckTelemetry {
	int32 pokemon_id = 1;
	int32 current_emotion_points = 2;
	int32 current_affection_points = 3;
}

message BuddyNotificationClickTelemetry {
	int32 notification_category = 1;
}

message BuildingMetadata {
	int32 height_meters = 1;
}

message CADOBDBKNEF {
	int32 jnomonahknj = 1;
	int64 cjniibfdnlc = 2;
	uint64 kceahlagapf = 3;
}

message CAGHJKANJHF {
	int32 hbmmfopjbce = 1;
	int32 jgdpdgjemkd = 2;
	bool njoaakpeobg = 3;
	LHDMMFEPDEM.IAFBNCEAOJI ehcjfpjbhlm = 4;
	uint32 kdmbdkobmmd = 5;
}

message CBBPJINJDBN {
	float banjpnkhlee = 1;
	int32 dnoeohpliim = 2;
}

message CBCMKKLKANM {
	uint64 igfdgcikjem = 1;
}

message CBEHDFKNGJE {
	MKADDJHFDBJ mebcjpidnjm = 1;
	repeated BLJACMAPGHP lgjopanebao = 2;
}

message CBHNLIFNBAD {
	enum HPCLFELCBAP {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	int64 bgmoefdbhgj = 1;
	HPCLFELCBAP hhkodmoefol = 2;
}

message CBNMICDGOAP {
	LAKPCJJKJBF pagceaildab = 2;
	PDJMKDKBADI oaofijjbkki = 3;
	DNACCIJNCAC ennggilkffh = 4;
	BJIOAENMIKC nlpmocobaji = 5;
	string ncgpmaajloi = 6;
	PPKCBJGDFKI fgaemkgnjjb = 7;
	GKCBJLMEDEJ cjobpmmdohi = 8;
	GFEHCMJGBPD hnoaflbinog = 9;
	int32 demmiccbjek = 10;
	DKDHJLKFJMF cekegemkelh = 11;
	DPPGBMOPMIB igobnmopfgo = 12;
	COCIPNOLOKN gfokgdjjaih = 13;
	IDOCCGCGAFL lappphklfne = 14;
	GNLKPNIJJAG bkomdneeilp = 15;
	repeated string bkikdjghpnc = 16;
	GBAINAIIICM dcecjanhnhf = 17;
	OOMIGMFPAID dikhkbbpnen = 18;
	ILMHOEJHCHE ggoangkgjfg = 19;
	IPGELDMEKIF lhagemcfkdn = 20;
	DEGFBINHEFM ahnapichhlp = 21;
	PBHIBLENFNN kheohmopjej = 22;
	HGNMPLMCEOJ omcnijidcca = 23;
	HFLNNCDMJHL jfmihnofpci = 24;
	repeated PCNMLNDPOML cjgalcmhefl = 25;
	CJFEINDLCEP amegaikgkam = 26;
	JNNEAMJJILK pgolioalnol = 27;
	FBHNOBKMCAK eilepjdffia = 28;
	MPDCACMCEEI lnddillkobi = 29;
	BPLDDEGKOGC fbehehnflii = 30;
	EJHOIHLHCPD nkpbpnboljj = 31;
	KBODINMDNLE didddjafaal = 32;
	FJDPBMJPJJK amcfefipgfn = 33;
	AJFLMFOCOHK jchdelcdilj = 34;
	OBBKDENPCOH oalcdjeleka = 35;
	LKDFANJFCOF nfgnoebgojo = 36;
	CHCBKBAMPBP kbmginaoejf = 37;
	CGDBJFDBCBJ ccadljlpjjd = 38;
	BOCDLIGKPGI binpakpidfn = 39;
	JKMFLBLEKFC eflcejaiphg = 40;
	LABCMFPMENL nabdpecjkpm = 41;
	GGFOPOKLIHG afaaipkcajd = 42;
	DEKJMDIOHPN ppaddhlkoke = 43;
	IBEJBBICGLA nkpojelhhcj = 44;
	BOHMFLNECKA hphpbgpodfm = 45;
	bool ppnoaemppna = 47;
	CHMGAGGJFDM ablaoklmpde = 48;
	DOEPPFKDNGI efgikdnfobb = 49;
	GLEAPBEEECF hmbaggeimbk = 50;
	MFFNNFPJENI pjjohnmmkio = 51;
	LIGMFEECOEA kkknhkkceek = 52;
	OOAKMOHGDOE jcjhhnnnllj = 53;
	LDNFAEGPBEL cbhbedgmgnh = 54;
	FFDADKLCAPA hmpbmeebohj = 55;
	JGHIAJGFBMF ekplogoagao = 56;
	KPAHMDIBMHI hpknbgfgbap = 57;
	ONBPMCNHIHB ebhnelfkjaa = 58;
	MNGCJBFBMJJ maiekmmlama = 59;
	MILAAEIHFPP dicfcoegaie = 61;
	DHFGPGJBEIE chhchjmiflf = 62;
	ILBLCCBPIKL mhaagpgdljc = 65;
	FOENGFIAGDK aikkfnaohpk = 66;
	FMMGCJMNKHJ jjbggeednhj = 67;
	EEOAOGNAEHN aehniajefoj = 68;
	repeated DOMDLJBDHBC kgpincifjnc = 69;
	PLGJANAOHME pkifnelhpai = 70;
	HFNFBOBEFAH pgkgioachci = 72;
	GNLOJIONGPN plddfcknibp = 73;
	MIMBFFJPAMP pgnkjmpnihn = 74;
	EPCONGBEPDF kelfodckcdp = 75;
	HCIDCHIIIFB cdghfdoklhl = 76;
	COBEICLIHMI fggifhhmpea = 77;
	OPINACMJBIJ lboekfmjjmf = 78;
}

message CBPGLBDCNGL {
	double jcnhegiknmo = 1;
	double kkncijjhenj = 2;
	double nnlcnkphcfg = 3;
	double hfgpondohff = 4;
}

message CCHMMNEDNKB {
	enum DCGPPPGELGB {
		UNSET = 0;
		SENT = 1;
		ERROR_UNKNOWN = 2;
		ERROR_DISABLED = 3;
		ERROR_INVALID_REFERRAL_CODE = 4;
	}

	DCGPPPGELGB llponloodfk = 1;
	string clfokddbgek = 2;
}

message CCLENLHFIIC {
	bool fgjjgjbfhfj = 1;
	bool gomhmojcdgk = 2;
	bool fbcblonhcap = 3;
}

message CCONMCEMGLM {
	FBPAIPJKFHC jllpjdlbcah = 1;
	NKDPOODGENC.OHPOBKKLMHO jplbbociine = 2;
	bool ioajfpgejdm = 3;
	int32 nphedeefmal = 4;
	int32 fpcnigfcaap = 5;
	int32 kgjddncolkh = 6;
	bool bcikphokpik = 7;
	string aednjbmjhhh = 8;
	bool dggcajamkgp = 9;
	string feknonbanki = 10;
	bool heaongcldji = 11;
	float dcngfefebkm = 12;
	float pgcmgaajpec = 13;
	NKDPOODGENC.CDIKKLMHAHB pgggbdkdfne = 14;
	PFMPOMPNJNP.MADJBBDECJD okollgoiflm = 15;
}

message CDCMJMCEEAA {
	enum BFBFNPEHIPK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_COMBAT_NOT_FOUND = 2;
		ERROR_COMBAT_INCOMPLETE = 3;
		ERROR_PLAYER_NOT_IN_COMBAT = 4;
		ERROR_SOCIAL_RPC = 5;
	}

	BFBFNPEHIPK hhkodmoefol = 1;
}

message CDFCMANFNIM {
	bool ohfcooifpok = 1;
	bool ibbomhlkcgo = 2;
	bool mblpeiiilpo = 3;
}

message CDHMEBKPFPG {
	bool dgmcfgnmgmh = 1;
	int32 lphlbemflnj = 2;
	float kbnhlemaapd = 3;
	int32 egbeiedabno = 4;
	int32 gccnijjafdj = 5;
	int32 emjcmheledg = 6;
	bool njmofpnkoaf = 7;
	bool jipebljkekd = 8;
	int32 obpkklfnjgp = 9;
	int32 ffkmnpnbcpk = 10;
	int64 nhniigpfaia = 11;
	int32 fjkfjgeekof = 12;
	repeated FNFFHJKDDJJ jpciiagodmd = 13;
	repeated FNFFHJKDDJJ hnioockadcm = 14;
	bool lchbjfngfga = 15;
	repeated string hagiooakgff = 16;
	repeated PLDDPIAHAOI edolgichomb = 17;
}

message CDIGIGBJEPP {
	string ljknacljjeb = 1;
	NHLCGNMFNOM piddpkfgmod = 2;
	ECBJDBHKDAE iphfojfkcnl = 3;
	bool bmpgkbfnmgp = 4;
	NHLCGNMFNOM kjockddhaec = 5;
	BFABHCMKGCB ngaiagcfcma = 6;
}

message CDKGBAGIPGC {
	enum JDDHDPFAKDB {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		FORT_ALREADY_HAS_MODIFIER = 2;
		TOO_FAR_AWAY = 3;
		NO_ITEM_IN_INVENTORY = 4;
		POI_INACCESSIBLE = 5;
	}

	JDDHDPFAKDB hhkodmoefol = 1;
	OLBJHJGBGFK nmjandalhod = 2;
}

message CDNHFEPIDGC {
	enum KAICCMGEEPI {
		UNEST = 0;
		SUCCESS = 1;
		ERROR_POKEMON_DEPLOYED = 2;
		ERROR_POKEMON_NOT_OWNED = 3;
		ERROR_POKEMON_IS_EGG = 4;
		ERROR_INVALID_POKEMON = 5;
		ERROR_BUDDY_SWAP_LIMIT_EXCEEDED = 6;
	}

	KAICCMGEEPI hhkodmoefol = 1;
	KDPKDEIBKBK gccalgcbieb = 2;
	LJNAADNKMGN amanihbickm = 3;
	double iilnnpioknn = 4;
}

message CEAKEOIOLGF {
	int64 bkkcjfmmhpl = 1;
	string ahcgfgkkkdn = 2;
	repeated int32 gdghkinahdb = 3;
}

message CEBIJJICOKI {
	string mkdlflaoaki = 1;
	string gfepbfmmdcc = 2;
	int64 bkkcjfmmhpl = 3;
}

message CEBNGOPPBMH {
	uint64 igfdgcikjem = 1;
	PCNMLNDPOML lahokpiipjb = 2;
	IBGGKKNEKOA nnnmmlpnchp = 3;
	bool lhfilifmcbb = 4;
	string mgajgldjfcb = 5;
	int64 hdbgmahoggb = 6;
	int64 dfnocjfpleg = 7;
	BFABHCMKGCB ihccaegggcb = 8;
	HEKBKGNBCDJ hmkodjkkhdm = 9;
	int32 dfbjhednlfk = 10;
	int64 kdiciobafmd = 11;
	int64 onmicfjkddd = 12;
	int32 lbjcfllaceh = 13;
	bool hbeojcpacck = 14;
	string fpmohllfknl = 15;
	int64 ohobhdjchmh = 16;
	map<int32, BGHBCCEGNKK> bdndnpdclak = 17;
	float lceidjghmdf = 18;
}

message CEDHPMKPBOI {
	enum IMAPCAJEIHK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_LEVEL_TOO_LOW = 2;
		TAG_ALREADY_EXISTS = 3;
		PLAYER_HAS_MAXIMUM_NUMBER_OF_TAGS = 4;
		TAG_NAME_CONTAINS_PROFANITY = 5;
	}

	IMAPCAJEIHK hhkodmoefol = 1;
	CLBPAJOPOEH jcejpbgddfl = 2;
}

message CEGJPOAAPFD {
	BGHBCCEGNKK icndjnpjppl = 1;
	PAEHCJKJPLP ckobkiimlfg = 2;
}

message CEHOOHHFLBA {
	repeated EHAGMDBOMIL mlpkgmcbapf = 1;
}

message CFCJGNJCLOK {
	NHLCGNMFNOM piddpkfgmod = 1;
	int32 kiapiomcljn = 2;
	int32 kplfpnngdff = 3;
}

message CFGBKCBIOBH {
	message EFGLMEJNMPJ {
		oneof AFFEBMKEEHG {
			IPEOPNMEGPI item = 1;
			bool pokemon_reward = 2;
			bool item_loot_table = 3;
			int32 item_loot_table_count = 4;
			int32 item_ranking_loot_table_count = 5;
		}

	}

	int32 ngmiffepnmp = 1;
	repeated EFGLMEJNMPJ aflnkbolkmh = 2;
	JACGNJEMAKN dmijpaiccfj = 3;
}

message CFJIJIDMDII {
	int32 jeaggaghjic = 1;
}

message CGDBJFDBCBJ {
	bool mlenihpnhen = 1;
}

message CGFCDJPNIHG {
	bool eoheipgkngk = 1;
	bool pdaagbgcndc = 2;
	bool famcjcgcjbc = 3;
	bool gihbejnkjpc = 4;
}

message CGOCLHECGPA {
}

message CHAKEENNGKP {
	uint64 pkljdiaplkc = 1;
	string nbpjjkhmncc = 2;
	double icnndjclaef = 3;
	double ogmopfkhcpa = 4;
}

message CHCBKBAMPBP {
	bool kmmikgobkdc = 1;
}

message CHMGAGGJFDM {
	enum CKJOMBADLIJ {
		UNSET = 0;
		AR_ENCOUNTER = 1;
		AR_SNAPSHOT = 2;
		SINGLEPLAYER_BUDDY = 3;
		MULTIPLAYER_BUDDY = 4;
	}

	string jcadeinmfgf = 1;
	string dllkdhhbmnp = 2;
	repeated string kjfjpnnoeeb = 3;
	repeated CKJOMBADLIJ pakmpkpcaac = 4;
	string ocbchbkdncb = 5;
	string mekgmnpfhfd = 6;
	string mjoengkcbcb = 7;
}

message CHNJJNJMCEC {
	bool pdhnpelckic = 1;
}

message CIBPBJNFIBK {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	KHDENDAOFBE.GELCDPNBJDP hhkodmoefol = 3;
	FNMDDHBCCFB kanajhkhmhb = 4;
}

message CIGDNMKPBDB {
	string mnpgjemkcpk = 1;
	repeated OIDHNJCLMOK kbodephoboi = 2;
	repeated OBIDFLEEEGB mklccilpklc = 3;
	repeated float eekjbgcbjda = 4;
	repeated float hjkkpbedlef = 5;
	repeated float ehafflempkj = 6;
	repeated float bnfoemebpln = 7;
	repeated float ciafiejopnl = 8;
	repeated float blbpdmjbigl = 9;
	repeated float nhpnikpbhaj = 10;
	repeated float jjbbbbdeofh = 11;
	repeated float oliijoaigdn = 12;
	repeated float ihelfbbekgi = 13;
	repeated float cfpoledlncc = 14;
	repeated float aobnppicaph = 15;
	repeated float hhmllhcbhfk = 16;
}

message CJCIFNCCMDA {
	string jeabhbggkhm = 1;
	string fafigfadkja = 2;
	string kplnfhcbklp = 3;
	string iepgbjddmdd = 4;
	string hckdgfehcae = 5;
	bool cjeacmollfj = 6;
	string akpfhcljghp = 7;
	string jmbjcllding = 8;
}

message CJFEINDLCEP {
	bool imbpcnamgop = 1;
	int32 ldellkmphkg = 2;
	bool acpdpadlpmo = 3;
}

message CJILJKBHOPF {
	repeated string dileendfikh = 1;
}

message CJJJDMOGJNH {
	repeated uint64 ghadpgjcoel = 1;
}

message CJPOCHPCJEE {
	string ickfpogdkoc = 1;
	int64 fpcknfdmimc = 2;
}

message CKDLIAJECPL {
	enum ILOMJAHMKBJ {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_LOBBY_CREATOR = 2;
		ERROR_LOBBY_NOT_FOUND = 3;
		ERROR_RAID_UNAVAILABLE = 4;
	}

	ILOMJAHMKBJ hhkodmoefol = 1;
	NNGBBEPJIDA ngefmadkckh = 2;
}

message CKDLPNLJDNG {
	repeated NGNLLGHCIBC ciekigbjhei = 1;
	bool hapcobdopeg = 2;
	bool lkelcjcncnn = 3;
}

message CKMAHNACKCO {
	enum MINOKOJEAEI {
		UNSET = 0;
		MCDONALDS = 1;
		POKEMON_STORE = 2;
		TOHO = 3;
		SOFTBANK = 4;
		GLOBE = 5;
		SPATULA = 6;
		THERMOMETER = 7;
		KNIFE = 8;
		GRILL = 9;
		SMOKER = 10;
		PAN = 11;
		BBQ = 12;
		FRYER = 13;
		STEAMER = 14;
		HOOD = 15;
		SLOWCOOKER = 16;
		MIXER = 17;
		SCOOPER = 18;
		MUFFINTIN = 19;
		SALAMANDER = 20;
		PLANCHA = 21;
		NIA_OPS = 22;
		WHISK = 23;
	}

}

message CKMEPJLAFNO {
	enum GMFCMDDKMMK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
	}

	NIHBJDDHHNM jfaagkakakb = 1;
	string edabjienhim = 2;
	repeated string mcdggnpebgc = 3;
	GMFCMDDKMMK hhkodmoefol = 4;
	string gpchpipjlii = 5;
	repeated string mjlmancpnbg = 6;
	string epheklamajk = 7;
	BKLHBIHALGD bighegammkk = 8;
}

message CKOOODJGBEE {
	string lkheohlgndb = 1;
	string nongbojeohc = 2;
}

message CLANJDIEDLA {
	enum PEKHLDKLAIH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_COMBAT_STATE = 2;
		ERROR_COMBAT_NOT_FOUND = 3;
		ERROR_PLAYER_NOT_IN_COMBAT = 4;
		ERROR_ILLEGAL_ACTION = 5;
		ERROR_INVALID_SUBMIT_TIME = 6;
		ERROR_PLAYER_IN_MINIGAME = 7;
		ERROR_EXISTING_QUEUED_ATTACK = 8;
		ERROR_INVALID_CHANGE_POKEMON = 9;
		ERROR_INSUFFICIENT_ENERGY = 10;
		ERROR_INVALID_MOVE = 11;
		ERROR_INVALID_DURATION_TURNS = 12;
		ERROR_INVALID_MINIGAME_STATE = 13;
		ERROR_INVALID_QUICK_SWAP_POKEMON = 14;
		ERROR_QUICK_SWAP_NOT_AVAILABLE = 15;
		ERROR_INVALID_SUBMIT_TIME_BEFORE_LAST_UPDATED_TURN = 16;
		ERROR_INVALID_SUBMIT_TIME_DURING_STATE_CHANGE = 17;
		ERROR_INVALID_SUBMIT_TIME_OPPONENT_CHARGE_MOVE = 18;
		ERROR_INVALID_SUBMIT_TIME_CMP_TIE_SWAP = 19;
		ERROR_INVALID_MINIGAME_STATE_OFFENSIVE_FINISH = 20;
		ERROR_INVALID_MINIGAME_STATE_DEFENSIVE_START = 21;
		ERROR_INVALID_MINIGAME_STATE_DEFENSIVE_FINISH = 22;
	}

	PEKHLDKLAIH hhkodmoefol = 1;
	JGHBGMKOLJK kanajhkhmhb = 2;
}

message CLBHKDDDJNK {
	repeated string joiipamgmdd = 1;
}

message CLBIEAJDOOO {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	DJECKLJHONF.LIAEALFEMDB hhkodmoefol = 3;
}

message CLBPAJOPOEH {
	uint64 godfillmpmn = 1;
	string edabjienhim = 2;
	LMPLGPLAEIC jdbflapgnpm = 3;
	int32 hoaogemkpmb = 4;
}

message CLEFLPHEJMH {
	enum IHJOONCCEFJ {
		UNSET = 0;
		SUCCESS_OPPONENT_FOUND = 1;
		SUCCESS_QUEUED = 2;
		ERROR_NO_BATTLE_PASSES_LEFT = 3;
		ERROR_ALREADY_IN_QUEUE = 4;
		ERROR_VS_SEEKER_PLAYER_IN_WRONG_SEASON = 5;
		ERROR_PLAYER_HAS_NO_VS_SEEKER = 6;
		ERROR_ACCESS_DENIED = 7;
		ERROR_POKEMON_LINEUP_INELIGIBLE_FOR_LEAGUE = 8;
		ERROR_VS_SEEKER_NOT_ACTIVATED = 9;
		ERROR_TEMPORARILY_UNAVAILABLE = 10;
		ERROR_EXCEEDED_LIMIT = 11;
		ERROR_QUEUE_TOO_FULL = 12;
	}

	IHJOONCCEFJ hhkodmoefol = 1;
	JDHOCBHIAMN bniaebpgnal = 2;
	string agiklpibnjc = 3;
}

message CLGLDLDPOGL {
	string fgnapjpklak = 1;
	string blgcpjojdbm = 2;
	string fgdipgodebg = 3;
	string gjnjdpfnpke = 4;
	string phhoibbooka = 5;
	MIHKJLMMMGA ggokaolekab = 7;
	repeated EFHKJNNHJAM mfbmgiiemgo = 8;
	string jjannbnogeo = 9;
	string oagggpeipbi = 10;
	string nefcmignngd = 11;
	string hfkadlhogjj = 12;
}

message CLIEJCCDICE {
	string bccgfkehaph = 1;
	DPJNKPDBPAN piddpkfgmod = 2;
	KBJGDCHGCAN acifngkjfjh = 3;
	MGGGJMCNAGK iiioddccfjd = 4;
	EPPKMKFOLKF clpealpbggd = 5;
	DFFDILLCNGO lnijhcaebkg = 8;
	GFPDPBGLODP epmmciendad = 10;
	CIGDNMKPBDB knhkknnhgcj = 11;
	IJIALBBCJDM ngadncfkngg = 12;
	NMILENBBBIB neoioaandhc = 13;
	GFLFCKNAAPM jhlajmkidji = 14;
	INHAMHDDMGH ionpijnieao = 15;
	NLCDGMHJFIE naohamjpfff = 16;
	OJNDMKPEHHM kgpincifjnc = 17;
	JNJOIFKFCPO eepjokeiidm = 18;
	KKGJFANEEGI ajipnopnbci = 19;
	BMJGPPGKJBI jfbcenflkkl = 20;
	MHODMLNNIIP ldkkomkamea = 21;
	ALEFNJLMGGK lekolkpmbbh = 22;
	IJOIOMGLKCG joofohgabah = 23;
	GMLFIPDNHDN mcmglcfljkb = 24;
	JIJLPNKPOCP fajpgaplkgg = 25;
	FOEFJLFNMEF khdjjopdihk = 26;
	MKHHBJABCEE jjmedfpkbkf = 27;
	NIABKGFEDBD lhneemagnnh = 28;
	KMFDJPAPHBM efblpicfcmd = 29;
	ILFOMABHMKK gncenbmjpch = 30;
	HBBBLDBAHBP bmdafgpoclj = 31;
	MMEKIFKJCDC cfmlljbllhc = 32;
	NMFMCABJPHG jmbjjkmkmfm = 33;
	HCMIODBLEOB odkfelfeaok = 34;
	MADHNPBECMK nnlohphoogk = 35;
	MJCOBPHOBBG nbnajegmlea = 36;
	NLKJGDMLNBM lgmljldccgd = 37;
	CBPGLBDCNGL blingpjofmd = 38;
	PGFFOJDBEOF eihlickdeid = 39;
	CLGLDLDPOGL iecpfblfied = 40;
	CLKJIONKHNI keppoopdmhg = 41;
	KKDBIFMIGKA ailcgbbldbp = 42;
	DKLOPNGMAID ajaldgbkkim = 43;
	EKOJBLBIPCM kllhgojpiip = 44;
	LNFPIDBCBMG aagcnhlgjon = 45;
	FOKFBFBJNPD ihobhibbnbi = 46;
	LJIEPDICOEF ppncipbdome = 47;
	EOFGOLGNBJN nladkfgekia = 48;
	IEKLEKNNHBG pjjcdffcnel = 49;
	IFEMCMAOKKG ehhelicnobb = 50;
	BGAHMIKEONL cabpealgccm = 51;
	GMMBPCIPPNH hhfnfmbcfdj = 52;
	GOMOJLIHBBA hpokkjalphm = 53;
	NLNPGCIIIMD gjmekjkdklo = 54;
	PAFGFALCEAD fagmaaokkhc = 56;
	NHCKMIAOOLM hhkkoebbpfe = 57;
	AKCMGKIKMDJ effifjdofmj = 58;
	AJCPEICMFNO nmbiofohpol = 59;
	KPONKMGEFME obfcojlnfah = 60;
	JCIKENNDCHO jegodgdokij = 61;
	JOJDJNPLMFO cmakmecjonk = 62;
	KHHDNFOJHNF dhlbanhbhnc = 63;
	CFGBKCBIOBH kkoaoceebpl = 64;
	KLJBHPNIBGL kbfhjejaipi = 65;
	GADBFCLIIOB obiepcjiedd = 66;
	DNECFJLHGNA ffmlmhjlohp = 67;
	FCIKMGNCHAA eddemammadi = 68;
	EPOIJKOFNEK dbapafepjgk = 69;
	IKFDLGMKHKL lkmbdaobhok = 70;
	OFGNGLJIHED fkcepcipmnl = 72;
	CHNJJNJMCEC iphipnbgnjk = 73;
	OJGLKFGNEFK ebhnelfkjaa = 74;
	IKEDMHFHAJN elibmcmolpl = 75;
	DIFIEEMAEMH bpfcmlcjcmd = 76;
	PEMMCOFGLGC bicmckojnng = 77;
	JLILLMNGKLP imaajipmjbi = 78;
	EEHHCANLKEC ciifldfekim = 79;
	CDHMEBKPFPG fodhnlaloff = 81;
	KNDCDEPHGBJ gfdifgklmho = 82;
	IHAPFLFCNIL pfelnnaohcg = 83;
	BLPJLDALCOM fbmdolaojod = 84;
	GNIIPHJGONM kijbldajnjk = 85;
	CDFCMANFNIM hfbfkdgiadn = 86;
	AGAEICMMHEC ficeindgfef = 87;
	DMGNDLJLLNH jiehfkpchaa = 88;
	GNELOIEEOJB kcdikgmmgpm = 89;
	FAPJHJIBHJG lbkpehafdlf = 90;
	FNFHMHBBPGL jakahahadkf = 91;
	ADJADEEDCOI dicfcoegaie = 93;
	MMDPDKAHIMK becdbeofhkj = 94;
	JFJIGPFFLLA lgnjbgllmlf = 95;
	GCKPNHNLIPH aimppahibel = 96;
	ILDPFODKDEJ bmijoapbaea = 97;
	NNEEDJLDFDI ejffgdjkhdm = 98;
	AMPMNBBLMEB mnhldmmafkg = 99;
	GGLKAOMAMEB dlpfapkolje = 100;
	APMKFBALANE noonkofmoge = 101;
	OFIICCAFHPC godeghgcjge = 102;
	BJIOAENMIKC nlpmocobaji = 103;
	KMPPDILLCKH kkjgiahhmee = 104;
	KCJHPLCPBPG oppdcjekgki = 105;
	KKMMNIIOAPI cpflblolihl = 106;
	LKEKNGJILIO fhdmcdggcmd = 107;
	PEEGIIGIAME fhgngcddhgc = 108;
	LMGLFHKGOGK cmhkminbnhn = 109;
	FCFGLCPCAFH aegnonhdegd = 110;
	LELIDJFPICK cjdhfagnfjh = 111;
	GCLDBIEJDED nfaaloedkcp = 112;
	LJOPBEKIDJA lckmjaljlao = 114;
	DINHDANNHBH nockeolphbm = 115;
	BCGAPOJCPJF dfdhidpnlam = 116;
	GCNFAMBDNGE hepkiclfpcb = 117;
	BLKHPJMAAOJ jkhahmpnkco = 118;
	GEAMBDOFEPB pgcjeikinkg = 119;
	FJCHBEOHIKD khbjajlhikc = 120;
	CJCIFNCCMDA npjgleafipd = 121;
	ANIHCLDCDDB dimcmjoecge = 122;
	LIMMBPLBLJA gfmfanlffag = 123;
	GOGOPPPLCCH ekjbijmbkjc = 124;
	CCLENLHFIIC hchnofmbhml = 125;
	JIIMEAMCOIB gmldphdonbe = 126;
	ICPKMDGGNHG gldedfipcdl = 127;
	ELGNNOOGOKF jbiopolgjno = 128;
	KAONAJBABOO lmejncjhhlh = 129;
	EEAMNPFOPJF cdnbaafnhnc = 130;
	EOGGIKLNJPF plofgklfnhc = 131;
	APPOGOJBHFH eofgipanjjh = 132;
	OAEBHHGMEPD kecbfcfamaf = 133;
	MMLPLPGAFPP pgnkjmpnihn = 134;
	BFFFJBALIMJ epilcfclfmd = 135;
	LMMNHHIPECA obghicbojeg = 136;
	FBIHBCOKGIB iagkahhagme = 137;
	IBAEIKCBFPN ngclmhjbona = 138;
	JINPEAACFFD ddoeclpjkfo = 139;
	ALJOLCCDJLH hpkmaljbjib = 140;
	NFNIMOMCIKL dhjdiakfonn = 141;
	OJKLEMHLDMA jcfkcnaclnf = 143;
	KPGCFHCDKAE bhlknkpbjpi = 145;
	HNADDLMNFIJ mgdjfbfpjbi = 146;
	DIBOEOHGOAO npboaiidfdd = 147;
	BJGOFBHLGLA cidappgnbhi = 148;
	MFBBHOMMCLC fdigkgeggfk = 150;
}

message CLKJIONKHNI {
	string fgjfjedpbad = 1;
	float gjepomehpmh = 2;
	float mgdgphdioff = 3;
	float dmcgacpdjmg = 4;
	float ncnfhnghnhk = 5;
	float mhnobjgomhj = 6;
	float gnphnlhkkba = 7;
}

message CLLOCMAOPDJ {
	enum ONAANHMCIAA {
		UNSET = 0;
		PRIMORDIAL = 1;
		WAIT = 2;
		ACTIVE = 3;
		CONFIRMED = 4;
		FINISHED = 5;
	}

	message BGIKGDIAHHA {
		uint64 igfdgcikjem = 1;
		int32 ilcnbgfockh = 2;
		int32 bdgpibdggkm = 3;
		int32 mhlbekpoknc = 4;
		int32 hoamccoialg = 5;
		int32 hpalldapbcb = 6;
		int32 fmofpgianeh = 7;
		int32 bjhlmifiedi = 8;
		bool dcofdbcflbb = 9;
		int32 afgdgnmpmae = 10;
		int32 plhdcjeoiif = 11;
		IBGGKKNEKOA nnnmmlpnchp = 12;
		int64 hdbgmahoggb = 13;
		NHLCGNMFNOM jalcicciiag = 14;
		BFABHCMKGCB ihccaegggcb = 15;
		int32 nckphldmbhl = 16;
		int32 cioaphnbeme = 17;
		int32 nhmffbamnde = 18;
		string mgajgldjfcb = 19;
		bool jlhkneckmal = 20;
		int32 jkmdcoekemo = 21;
		int64 mhjanooklad = 22;
	}

	message DMGNMMOKOIC {
		message DLKADGIGFBA {
			enum CCHOEKJIGED {
				UNSET = 0;
				MYTHICAL_POKEMON = 1;
				SLASHED = 2;
				GYM_DEPLOYED = 3;
				BUDDY = 4;
				STAMINA_NOT_FULL = 5;
				EGG_NOT_HATCHED = 6;
				FRIENDSHIP_LEVEL_LOW = 7;
				FRIEND_CANNOT_AFFORD = 8;
				FRIEND_REACHED_DAILY_LIMIT = 9;
				ALREADY_TRADED = 10;
				PLAYER_CANNOT_AFFORD = 11;
				PLAYER_REACHED_DAILY_LIMIT = 12;
				FAVORITE = 13;
				TEMP_EVOLVED = 14;
			}

			uint64 igfdgcikjem = 1;
			CCHOEKJIGED okabjedfilc = 2;
		}

		string lkheohlgndb = 1;
		JNPCNHMKDMB ecpapnmbgfa = 2;
		repeated DLKADGIGFBA bjmheljjkei = 3;
		BGIKGDIAHHA nhbklpjmgnb = 4;
		PAEHCJKJPLP iaiiffgcjki = 5;
		PAEHCJKJPLP dlklheaegml = 6;
		bool danhkgkncjl = 7;
		bool amklbdgkicf = 8;
	}

	ONAANHMCIAA aihkgechdic = 1;
	uint64 mppmjljceic = 2;
	DMGNMMOKOIC cephaffhbfh = 3;
	DMGNMMOKOIC bkhdegoinml = 4;
	int64 jmbapimnepb = 5;
	string nongbojeohc = 6;
	NABADAFLIPI hkpghaalhog = 7;
	bool cpgcfpomida = 8;
	NABADAFLIPI bdjihblolbm = 9;
}

message CLNPCPDDEII {
	int32 hbmmfopjbce = 1;
	OMDCMKIAADD ldccnikjabe = 2;
	repeated int32 ephkplfnblk = 3;
	uint32 kdmbdkobmmd = 4;
	int32 jgdpdgjemkd = 5;
}

message CLPBEHPHAPL {
	string mkdlflaoaki = 1;
	string gfepbfmmdcc = 2;
	int64 bkkcjfmmhpl = 3;
}

message CMCFEKKOLBJ {
	string oocggedbcke = 1;
	KOALJFNPGBK hjdcncgdjfn = 2;
}

message CMPHBMOBFJJ {
	enum GMNIIFNMGEG {
		CATCH = 0;
		TRADE = 1;
		EVOLVE = 2;
		CATCH_FROM_RAID = 3;
	}

	PCNMLNDPOML lahokpiipjb = 1;
	IBGGKKNEKOA pplgileafni = 2;
	bool eljamipjblg = 3;
	GMNIIFNMGEG dcchhfcajbm = 4;
	bool mmaponjbcod = 5;
}

message COBEICLIHMI {
	bool hcimpohofma = 1;
}

message COCIPNOLOKN {
	repeated string hglbekpegbo = 1;
}

message COCLMDLKLLI {
	enum FMGAKMPLLGH {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_POKEMON_NOT_ON_FORT = 3;
		ERROR_NO_PLAYER = 4;
	}

	FMGAKMPLLGH hhkodmoefol = 1;
	OLBJHJGBGFK nmjandalhod = 2;
}

message COGENPFGGPE {
	HBIFOKJCJED hhkodmoefol = 1;
}

message CPCLPPGAABJ {
	int32 hbmmfopjbce = 1;
}

message CPDBCDKKFBA {
}

message CPGDIKHDJFK {
	repeated JNPCNHMKDMB emelmhacmac = 1;
	repeated NABADAFLIPI idegghfopep = 2;
}

message CPNPAKGPPIJ {
	int64 pkljdiaplkc = 1;
	string komegjnnkib = 2;
}

message CancelFriendInviteOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVITE_DOES_NOT_EXIST = 3;
		ERROR_ALREADY_CANCELLED = 4;
	}

	Result result = 1;
}

message CancelFriendInviteProto {
	string player_id = 1;
	string nia_account_id = 2;
}

message CatchPokemonTelemetry {
	string status = 1;
	EncounterPokemonTelemetry encounter_pokemon_telemetry = 2;
	int32 balltype = 3;
	int32 hit_grade = 4;
	bool curve_ball = 5;
	double miss_percent = 6;
}

message ChangeArTelemetry {
	bool ar_enabled = 1;
	bool ar_plus_enabled = 2;
}

message ChangeOnlineStatusTelemetry {
	bool is_online_status_on = 1;
}

message CheckEncounterTrayInfoTelemetry {
	bool berry_tray_info = 1;
	bool ball_tray_info = 2;
}

message ClientGameMasterTemplateProto {
	string template_id = 1;
	bytes data = 2;
}

message ClientInbox {
	enum Label {
		UNSET_LABEL = 0;
		UNREAD = 1;
		NEW = 2;
		IMMEDIATE = 3;
	}

	message Notification {
		string notification_id = 1;
		string title_key = 2;
		string category = 3;
		int64 create_timestamp_ms = 4;
		repeated TemplateVariable variables = 5;
		repeated Label labels = 6;
		int64 expire_time_ms = 7;
	}

	repeated Notification notifications = 1;
}

message ClientSettingsTelemetry {
	float music_volume = 1;
	float sound_volume = 2;
}

message ClientTelemetryBatchProto {
	enum TelemetryScopeId {
		UNSET = 0;
		CORE = 1;
		GAME = 2;
		TITAN = 3;
		COMMON = 4;
		PRE_AGE_GATE = 5;
		PRE_LOGIN = 6;
	}

	TelemetryScopeId telemetry_scope_id = 1;
	repeated ClientTelemetryRecordProto events = 2;
	repeated ClientTelemetryRecordProto metrics = 3;
	string api_version = 4;
	string message_version = 5;
}

message ClientTelemetryClientSettingsProto {
	bool is_upload_enabled = 1;
	int64 max_upload_size_in_bytes = 2;
	int64 update_interval_in_sec = 3;
	int64 settings_update_interval_in_sec = 4;
	int64 max_envelope_queue_size = 5;
	double sampling_probability = 6;
	bool use_player_based_sampling = 7;
	double player_hash = 8;
	string player_external_omni_id = 9;
	bool disable_omni_sending = 10;
	map<string, double> special_sampling_probability_map = 11;
	string player_external_ua_id = 12;
	string player_external_in_app_survey_id = 13;
}

message ClientTelemetryCommonFilterProto {
	string application_identifier = 1;
	string operating_system_name = 2;
	string device_model = 3;
	string locale_country_code = 4;
	string locale_language_code = 5;
	double sampling_probability = 6;
	string quality_level = 7;
	string network_connectivity_type = 8;
	string game_context = 9;
}

message ClientTelemetryRecordProto {
	string record_id = 1;
	bytes encoded_message = 2;
	int64 client_timestamp_ms = 3;
	int64 metric_id = 4;
	ClientTelemetryCommonFilterProto common_filters = 5;
}

message ClientTelemetrySettingsRequestProto {
}

message ClientWeatherProto {
	int64 s2_cell_id = 1;
	DisplayWeatherProto display_weather = 2;
	GameplayWeatherProto gameplay_weather = 3;
	repeated WeatherAlertProto alerts = 4;
}

message CombatMinigameTelemetry {
	enum MinigameCombatType {
		UNSET = 0;
		PVP = 1;
		PVE = 2;
	}

	MinigameCombatType combat_type = 1;
	IDJMLGDHNHI move_type = 2;
	float score = 3;
}

message CommonTelemetryBootTime {
	string boot_phase = 1;
	int64 duration_ms = 2;
}

message CommonTelemetryLogIn {
	int64 timestamp_ms = 1;
}

message CommonTelemetryOmniPushOpened {
	string push_id = 1;
	int64 opened_timestamp_ms = 2;
}

message CommonTelemetryOmniPushReceived {
	string push_id = 1;
	int64 received_timestamp_ms = 2;
}

message CommonTelemetryShopClick {
	enum AccessType {
		UNSPECIFIED = 0;
		PASSIVE = 1;
		ACTIVE = 2;
	}

	string shopping_page_click_id = 1;
	string sku_id = 2;
	string item_id = 3;
	string consolidated_item_id = 4;
	string currency = 5;
	int64 fiat_price = 6;
	repeated InGamePurchaseDetails in_game_purchase_details = 7;
	bool is_item_free_fiat = 8;
	bool is_item_free_ingame = 9;
	int64 time_elapsed_since_enter_page = 10;
	string root_store_page_session_id = 11;
	int64 pair_id = 12;
	string store_page_name = 13;
	string root_store_page_name = 14;
	AccessType access_type = 15;
	string fiat_formatted_price = 16;
}

message CommonTelemetryShopView {
	string shopping_page_view_type_id = 1;
	int64 view_start_timestamp_ms = 2;
	int64 view_end_timestamp_ms = 3;
	repeated string consolidated_item_id = 4;
	string root_store_page_session_id = 5;
}

message CurrencyQuantityProto {
	string currency_type = 1;
	int32 quantity = 2;
}

message CurrencyUpdateProto {
	string currency_name = 1;
	int32 currency_delta = 2;
	int32 currency_balance = 3;
	int32 fiat_purchased_balance = 4;
}

message DAHEPDACPBK {
	string nmjbholmclp = 1;
	JIIAGLOABPO hpdcfninejh = 2;
}

message DALFBHNDIFJ {
	repeated MDBOKFBAPDA mineglijhgg = 1;
}

message DALIDOEJIAF {
	bool acnkcbmpiag = 1;
}

message DAONAJEMBHP {
	GMICNCPLCMG kmboffachcn = 1;
	int32 gpajobppnke = 2;
	int32 okadmmglaja = 3;
}

message DBCOPLDPEPL {
	bool jechfnofahm = 1;
	bool pdaebghpkdb = 2;
	int64 dmkljffplea = 3;
}

message DBGMAHDOJOD {
	enum IGIOGBHAFNE {
		UNSET = 0;
		SUCCESS = 1;
	}

	IGIOGBHAFNE hhkodmoefol = 1;
	string ajbpmokphcc = 2;
	NHLCGNMFNOM hmcgecidklb = 3;
	NHLCGNMFNOM blipkbkhpok = 4;
	PAEHCJKJPLP acbpiimiphk = 5;
	PAEHCJKJPLP dlklheaegml = 6;
}

message DBHICPKFALI {
	string ljknacljjeb = 1;
	string ogndfeabidk = 2;
	int32 pnbcapbjmog = 3;
}

message DBINMONCCPP {
	string hnpbeohbdkg = 1;
}

message DBKMHJEFLEJ {
	NECCKHDNPKM pgdgeobanmh = 1;
}

message DBOHDGNCHAM {
	uint64 knnhhccejbk = 1;
}

message DCBPDKBEEIP {
	string agiklpibnjc = 1;
}

message DCIGDJECEOE {
	enum LPJCIOGIKIL {
		UNSET = 0;
		SUCCESS = 1;
		TEAM_ALREADY_SET = 2;
		FAILURE = 3;
	}

	LPJCIOGIKIL llponloodfk = 1;
	EHIECBBPACE cephaffhbfh = 2;
}

message DCLNMOBGBED {
	enum FCLGDCIBNEL {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_HAS_REQUESTED_BADGE = 2;
		ERROR_HAS_MUTUALLY_EXCLUSIVE_BADGE = 3;
	}

	FCLGDCIBNEL llponloodfk = 1;
}

message DCMHMGIGNLJ {
	repeated BFABHCMKGCB jkgoijomfod = 1;
	repeated float ihnhoapaepl = 2;
	double ncaknecfjag = 12;
}

message DDEKKKFNPKF {
	string ncmogglbdib = 1;
	int32 lfbajfmidfg = 2;
}

message DDJMHLONBCN {
	string bfljhnkfaba = 1;
}

message DEGFBINHEFM {
	bool plmpdlcoemi = 1;
	double ncmocnnnopp = 2;
	int32 cpnfmjpilch = 3;
	int32 egkkngpjenf = 4;
	int64 gdlhologefp = 5;
	int64 clhonodakai = 6;
	int64 nbjkmifgchp = 7;
	bool jeibplpgkjo = 8;
	float mcjpogdacca = 9;
}

message DEGFLEFHHAE {
	ACLABFMBKFM.GKEKKFPCBBC hhkodmoefol = 1;
	int32 dimbbjlcnib = 2;
}

message DEGIOBJFLHN {
	string jbhijpnhdfa = 1;
	KMHCCPJEION.LGFABOIJPEN.MHEKLBNOJBN pdeokhohkdn = 2;
}

message DEIHIPMJDKG {
	uint64 kelhhealbli = 1;
	string eoipeieophb = 2;
	repeated GDAHCDPEMBJ ciffdecapka = 3;
}

message DEJHPGNIKLI {
	repeated JLDJJCPLJLP ikckkafcfhl = 1;
	int64 pjfaeckamld = 2;
}

message DEKJMDIOHPN {
	int32 bobobmkpjge = 1;
	int32 fflcakbmafa = 2;
	bool cickdmolfjl = 3;
	repeated string kjfjpnnoeeb = 4;
	int32 jiakdjokmkp = 5;
	int32 oiplicphcda = 6;
	int32 emnnlkpnjoi = 7;
	int32 oaamideoejo = 8;
	int32 ocmjopcnflm = 9;
	bool ljajkodkbhn = 10;
	int32 lhjoiopenjb = 11;
	int32 ioiblagkdod = 12;
	bool accncbapphh = 13;
	int32 odcdhcofocb = 14;
	string ddmopkkonbb = 15;
	bool gppcoihmmlg = 16;
}

message DELNOOFICOO {
	enum ODOFKBOKAIN {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_BUDDY_NOT_VALID = 2;
	}

	ODOFKBOKAIN hhkodmoefol = 1;
	LJNAADNKMGN amanihbickm = 2;
}

message DEOCGANNBKO {
	string ahcgfgkkkdn = 1;
	repeated uint64 iepbdcjdpfk = 2;
	uint64 pkgeddilfgb = 3;
	double icnndjclaef = 4;
	double ogmopfkhcpa = 5;
	int64 djlhjjcekee = 6;
}

message DFCIIKDICFB {
}

message DFFDILLCNGO {
	repeated float elnfgebjoam = 1;
	IDJMLGDHNHI bpmbjfbfbgg = 2;
}

message DFOJCBABDMB {
	KEFCKGDMLFB ocdaopdoooe = 1;
}

message DGEKLDNFCMB {
	PCNMLNDPOML goadafbpnpg = 1;
	BFABHCMKGCB nagjhmlkogb = 2;
	int32 pgihkaiebgb = 3;
	float obgcglndjbn = 4;
	IBGGKKNEKOA.IBGFAGKHKGN cdnlplomkgo = 5;
	IBGGKKNEKOA.KJGDPFEEFAJ dhdibpgihfd = 6;
	BFABHCMKGCB alpjionggic = 8;
	bool okhnnjnhjaa = 9;
	bool dbcdanakfmd = 10;
	bool jcoieekgcdj = 11;
	int32 mhmgmobcnji = 12;
	bool cdgccjdojph = 13;
	GMICNCPLCMG onmnlckcbhp = 14;
	int32 mkoaokaakol = 15;
	int32 anfaioinemc = 16;
	repeated ECKCGMOEHGH nondcanmhmc = 17;
	bool gdolmclalak = 18;
	int32 mcjddajimll = 19;
}

message DGJMBFPMLJH {
	enum KFPKAEBIHME {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_NOT_FRIENDS = 3;
		ERROR_EXCEEDED_NICKNAME_LENGTH = 4;
		ERROR_SOCIAL_UPDATE = 5;
		ERROR_FILTERED_NICKNAME = 6;
		ERROR_EXCEEDED_CHANGE_LIMIT = 7;
	}

	KFPKAEBIHME hhkodmoefol = 1;
}

message DGKOBHEPPLL {
	repeated string pofcpnikfel = 1;
}

message DHFGPGJBEIE {
	bool plmpdlcoemi = 1;
	bool hejmnpognic = 2;
	bool eamodemppbg = 3;
	bool fmefkcejhcg = 4;
}

message DHICAHDGLDF {
	int32 jddphiklcdn = 1;
	int64 jlblgaeclaf = 2;
	int64 pbahleajlci = 3;
}

message DHIIIFGJMCP {
	enum HJEHNAGDKDC {
		POKESTOP = 0;
		GYM = 1;
	}

	enum MLNEFLHKNFD {
		CLICK = 0;
		SPIN = 1;
	}

	string fioaaacjgjm = 1;
	HJEHNAGDKDC ejcdpdnfjpk = 2;
	MLNEFLHKNFD olfkeailgpf = 3;
}

message DIAINAPMBIM {
	PCNMLNDPOML lahokpiipjb = 1;
	GMICNCPLCMG ngfdagnmgpe = 2;
	int64 egihpjmdigo = 3;
}

message DIAMILJDFHG {
	enum NKOCOHGNLLA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_GYM_DISABLED = 3;
	}

	PHKNAKANAEL mlopablhopj = 1;
	string edabjienhim = 2;
	string mcdggnpebgc = 3;
	NKOCOHGNLLA hhkodmoefol = 4;
	string gpchpipjlii = 5;
	string mjlmancpnbg = 6;
	DMPNAOEDHIF fblnanmjfem = 7;
	string epheklamajk = 8;
	BKLHBIHALGD bighegammkk = 9;
	DisplayWeatherProto djfifkhkcbh = 10;
	repeated string gfdfpobijah = 11;
	repeated string nhciomkdeid = 12;
	string kdhocdmlffi = 13;
	int64 dgekaaoeode = 14;
	LNBENCBGFDF llmngmeeapb = 15;
	int32 jejpkcdpnhg = 16;
	string nkdijnnjonk = 20;
	string ohfllediidn = 21;
}

message DIBOEOHGOAO {
	bool gpmnjlhecle = 1;
}

message DIFIEEMAEMH {
	message PPAIBIMGNNP {
		string edabjienhim = 1;
		int32 nblffjepgpa = 2;
		bool lpjdmhbpdpc = 3;
	}

	repeated PPAIBIMGNNP efdohbeohpk = 1;
}

message DINHDANNHBH {
	bool lphfldnoffb = 1;
	string njheidjpcin = 2;
	string ldpbfnjehdk = 4;
}

message DIOBMFEKBJL {
}

message DJECKLJHONF {
	enum LIAEALFEMDB {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_ALREADY_TIMEDOUT = 4;
		ERROR_ALREADY_CANCELLED = 5;
	}

	LIAEALFEMDB hhkodmoefol = 1;
}

message DJGHLMPNLBC {
	enum HKJOLKADNEE {
		UNSET = 0;
		SUCCESS_FULLY_CHARGED = 1;
		SUCCESS_NOT_FULLY_CHARGED_YET = 2;
		ERROR_VS_SEEKER_NOT_FOUND = 3;
		ERROR_VS_SEEKER_NEVER_STARTED_CHARGING = 4;
	}

	HKJOLKADNEE hhkodmoefol = 1;
	IMOBJFLGOOF bopkiimchfg = 2;
	bool igafdbeinam = 3;
	BAJPDMOFJGM flclefedpgi = 4;
}

message DJKIGOFBLDB {
	string edabjienhim = 1;
	int32 iobmcmbgbdl = 2;
	repeated uint64 cefkkjlkenn = 3;
	string iipglhcceho = 4;
}

message DJNLBJDJLOP {
	string flnekghfefk = 1;
	repeated uint64 iepbdcjdpfk = 2;
	int64 djlhjjcekee = 3;
}

message DJONEDJMCGO {
	string bebimkogphh = 1;
	bool gliinllhaih = 2;
	bool ncjloebopbp = 3;
}

message DKCODDJAKLM {
	oneof GNFIJEBLPNC {
		string image_id = 1;
		string image_context = 2;
	}

}

message DKDEGECLHNI {
	enum GINDFFGCLPC {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_CHALLENGE_NOT_FOUND = 2;
	}

	GINDFFGCLPC hhkodmoefol = 1;
	JDHOCBHIAMN bniaebpgnal = 2;
}

message DKDHJLKFJMF {
	float ibkjmdjcfog = 1;
	bool afpocamplgi = 2;
	int32 aennbpjaeem = 3;
}

message DKEIKGHLPHA {
	oneof LKCODMIMBPF {
		GKKABOBADNB geotargeted_quest_validation = 3;
	}

	string ljknacljjeb = 1;
	int32 phcldadaand = 2;
}

message DKLOINCOEHD {
	PlatformMetricData majjmddkjee = 1;
}

message DKLOPNGMAID {
	enum NGDLKGCOANJ {
		UNSET = 0;
		PARTY_RECOMMENDATION_MODE_1 = 1;
		PARTY_RECOMMENDATION_MODE_2 = 2;
		PARTY_RECOMMENDATION_MODE_3 = 3;
		PARTY_RECOMMENDATION_MODE_4 = 4;
	}

	NGDLKGCOANJ dfnllkfdnha = 1;
	float pkennmkeamn = 2;
	float gfhofcflefb = 3;
	float khieldhefig = 4;
}

message DKMMOGEEPJE {
	int64 godfillmpmn = 1;
	PCNMLNDPOML lahokpiipjb = 2;
	int32 pamcojidban = 3;
	float hbdelemjnii = 4;
}

message DLFBCGLMPIL {
}

message DLIMKKNIEMI {
	bool bldfjlfhibl = 1;
	double iiefdffaaio = 2;
	double edpdihhfima = 3;
	bool dddjccdaoml = 4;
	bool nclgjjggmkb = 5;
	bool aahdagpbpke = 6;
	bool mcbebenhepd = 7;
}

message DLINKAFOEED {
	uint64 igfdgcikjem = 1;
	int32 pmhobcaijfe = 2;
}

message DMCJDACCAFM {
	bool gedmhdhpkco = 1;
}

message DMGNDLJLLNH {
	DECNNEMNNKP gkogdblljni = 1;
	int32 hhdjnccnjgn = 2;
	int32 hpmncphhkfg = 3;
	int32 cmiamgegjeb = 4;
	int32 ncblocbkijn = 5;
	int32 cpooohcmmhm = 6;
}

message DMJMJHEKFJJ {
	enum GBGEPIBFAGO {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_REDEEM_POKEMON = 2;
		ERROR_PLAYER_NOT_ENOUGH_VICTORIES = 3;
		ERROR_REWARD_ALREADY_CLAIMED = 4;
		ERROR_INVENTORY_FULL = 5;
	}

	GBGEPIBFAGO hhkodmoefol = 1;
	PAEHCJKJPLP acbpiimiphk = 2;
}

message DMMGCCEKHEP {
	float mjmaeleiiob = 1;
	float chkfkhdoihp = 2;
	bool imjacmimlaj = 3;
}

message DMMHLGFFOPC {
	enum GIPEEEPJLKA {
		JOIN_SUCCESS = 0;
		JOIN_LOBBY_FULL = 1;
		JOIN_HOST_TOO_FAR = 2;
		JOIN_LOBBY_NOT_FOUND = 3;
		JOIN_BUDDY_NOT_SET = 4;
		JOIN_BUDDY_NOT_FOUND = 5;
		JOIN_BAD_BUDDY = 6;
		JOIN_BUDDY_V2_NOT_ENABLED = 7;
		JOIN_PLAYER_LEVEL_TOO_LOW = 8;
		JOIN_UNKNOWN_ERROR = 9;
		JOIN_U13_NO_PERMISSION = 10;
	}

	GIPEEEPJLKA hhkodmoefol = 1;
	bytes focnckloljj = 2;
	int64 kaadmgcfpii = 3;
	int32 ifbgmejbogo = 4;
}

message DMNNBJFIIPD {
	enum DBAJPDDOGPC {
		UNSET = 0;
		SUCCESS = 1;
	}

	DBAJPDDOGPC hhkodmoefol = 1;
	PAEHCJKJPLP acbpiimiphk = 2;
	int32 inajmmplclj = 3;
	float agkjhjkobnf = 4;
}

message DMOJAKFBNME {
	BFABHCMKGCB acifngkjfjh = 1;
	int32 lfbajfmidfg = 2;
}

message DMPNAOEDHIF {
	string gfepbfmmdcc = 1;
	PJBIONEILPM ipgfkdaidgm = 2;
	uint32 chbdljpcbjh = 3;
	DPIFLMCEMKJ ekmmbocinjn = 4;
	uint64 hagpohgehmf = 5;
	string edabjienhim = 6;
	string mpaekobkjkh = 7;
	string gpchpipjlii = 8;
	double chhgiikbnma = 9;
	double flaphjheime = 10;
	uint64 ahfckdhgdhk = 11;
	uint32 hblgefoddaf = 12;
	float hldednomfjh = 13;
	bool cmhkeoffkcb = 14;
	NNFAMMCGNIB foakaifaplh = 15;
}

message DNACCIJNCAC {
	double lijohjllebk = 2;
	double peijcoefmao = 3;
}

message DNDJNCDNPBC {
	uint32 gcmngjmjekm = 1;
}

message DNECFJLHGNA {
	repeated DCAECPGGPON knoiccimbnd = 1;
}

message DNFLJAPGPGD {
}

message DNICJAHCIJD {
	enum BHMKBIOMHGG {
		UNSET = 0;
		HATCHING = 1;
		NOT_HATCHING = 2;
		HATCHED = 3;
	}

	enum OLKJLMACIKC {
		UNKNOWN = 0;
		UNLIMITED = 901;
		BASIC = 902;
		SUPER = 903;
	}

	BHMKBIOMHGG llponloodfk = 1;
	float pngpmmfbofl = 2;
	float himdhbbgmib = 3;
	OLKJLMACIKC bagcoecdcia = 4;
	float lgfbidfmcmk = 5;
}

message DNPCLEIMBCJ {
	int32 omlijncoabh = 1;
	int32 igghkkhhgop = 2;
}

message DNPGMILODLO {
	repeated MBKJCODCAKE bkmmhnbfabl = 1;
	repeated string bbdllppleng = 2;
	repeated CDIGIGBJEPP lmnpnkcadpl = 3;
	AJJKADOGFHE lhdgmdfgmga = 4;
	repeated LBMOBGOMNJK cbnjgoeoben = 5;
}

message DOEPPFKDNGI {
	message OFPNMELOIHG {
		int32 omknghpbcol = 1;
		int32 adggdndekcc = 2;
	}

	repeated OFPNMELOIHG cjklfclenln = 3;
}

message DOMDLJBDHBC {
	ENFPMLCKGFH ojhhjkhpank = 1;
	GNFPCFLMPJF ljgcdgkmlhd = 2;
}

message DONCNLLNLLJ {
	enum CHGGOHCEKBB {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	CHGGOHCEKBB llponloodfk = 1;
	AJEKJKJHIBM kclkpcagdbm = 2;
}

message DPBBAJLOPCK {
	enum GELBKDPAGGN {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	GELBKDPAGGN hhkodmoefol = 1;
}

message DPBDKPDCIFA {
	uint64 igfdgcikjem = 1;
	int32 mjblcceblgj = 2;
}

message DPDFNNJNANJ {
	message DKNCLOJHCEC {
		string godfillmpmn = 1;
		string edabjienhim = 2;
		string gpchpipjlii = 3;
		string mpaekobkjkh = 4;
		double mbkobmedmnn = 5;
		double icmnhidjpbl = 6;
	}

	message NMKBLGPABLK {
		PCNMLNDPOML igfdgcikjem = 1;
		IBGGKKNEKOA mficgghjhok = 2;
		string mgajgldjfcb = 3;
		int32 ffiekckbebi = 4;
	}

	JNPCNHMKDMB oeanpfmbmki = 1;
	NMKBLGPABLK agngkifineg = 3;
	DKNCLOJHCEC pnmgjnioipc = 4;
}

message DPHGHPBGKGD {
	PHAPLDDNIOC ggnehjijnoe = 1;
	DKGLGEIAEOJ ncjhkcollpe = 2;
}

message DPHGOHGOINB {
	enum COONKJIKGOE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PHOTO_POKEMON_INVALID = 2;
		ERROR_NO_PHOTOS_TAKEN = 3;
		ERROR_UNKNOWN = 4;
	}

	COONKJIKGOE llponloodfk = 1;
}

message DPIFLMCEMKJ {
	uint64 igbkgjkfcfj = 1;
	uint32 mahnklpgihk = 2;
	uint32 achkjjbajjb = 3;
	uint32 imbfcngjclo = 4;
	uint32 mpfjkolanpa = 5;
	repeated BHMJJACGLIJ plboodjicgi = 15;
}

message DPJNKPDBPAN {
	enum HCFCBKGDHPB {
		BUDDY_MEDIUM = 0;
		BUDDY_SHOULDER = 1;
		BUDDY_BIG = 2;
		BUDDY_FLYING = 3;
		BUDDY_BABY = 4;
	}

	PCNMLNDPOML apgnpjbapog = 1;
	float idicoigcpgd = 3;
	IDJMLGDHNHI oalonmbmdbi = 4;
	IDJMLGDHNHI jdbdhjigpla = 5;
	PLABKMADJNB knhkknnhgcj = 6;
	LPCGPBCNJCK pplnkaogbki = 7;
	NKBFOKJALNM hehhapknalf = 8;
	repeated LMMLJBEDMBD nlkmephflem = 9;
	repeated LMMLJBEDMBD ahebjlmjidi = 10;
	repeated float chfamlfkbaa = 11;
	repeated PCNMLNDPOML goadafbpnpg = 12;
	int32 gdejkgigogg = 13;
	DECNNEMNNKP gkogdblljni = 14;
	float eammdnocnoj = 15;
	float lfjggbmgbcg = 16;
	PCNMLNDPOML kefmoijambb = 17;
	float cfngmcefpih = 18;
	float pmdhpddpinh = 19;
	float edpcoiokdja = 20;
	GKOJINOCBHK jdoolomdhcj = 21;
	int32 kfgpobkiomo = 22;
	float klnibhahjhm = 23;
	HCFCBKGDHPB bldmcjhempn = 24;
	float ilmbonhpcee = 25;
	repeated DGEKLDNFCMB bleigooaoha = 26;
	float ogpindggdgd = 27;
	IBGGKKNEKOA.IBGFAGKHKGN cdnlplomkgo = 28;
	LMMLJBEDMBD mbfocglkpmd = 29;
	LMMLJBEDMBD iikimpbpiba = 30;
	repeated float mfhjcaigihe = 31;
	repeated float hgihdfhpbgj = 32;
	float loppgalokcc = 33;
	repeated float hhjofedpcba = 34;
	IBGGKKNEKOA.IBGFAGKHKGN bpfcanbcloo = 35;
	KIHBIGMIDLB ddjfnpbcdeb = 36;
	bool pnhneambmen = 37;
	bool jkdbnmfgolm = 38;
	repeated float onopcmgiaah = 39;
	bool mgfiiiellda = 40;
	repeated float lmdhcpefpcp = 41;
	repeated float halofjajenb = 42;
	repeated float odkoojlmbhp = 43;
	repeated float djmfnlikped = 44;
	repeated HMAKIHHNPKL ggckabgfmej = 45;
	FLGAICEOMIO gfakleijhmc = 46;
	int32 npmgoannmhk = 47;
	int32 oojidanmcne = 48;
	repeated LMMLJBEDMBD lkfgionjpgm = 49;
	repeated LMMLJBEDMBD afnamlabedk = 50;
	repeated HBDPBKIJBBF gibdkipeemp = 51;
	int32 cenbajhobif = 52;
	bool ffnfaifimdh = 61;
	float bpjcajldpcg = 62;
	repeated MIHEBCJPCKE mapdckcdeem = 63;
	repeated float aacefabicem = 64;
	repeated float ocgobdnkjab = 65;
	BCFOPFOFKHO eacknmdcalo = 66;
	repeated IBGGKKNEKOA.BNNGGJPIPIH ecjjllbdlhb = 67;
}

message DPPGBMOPMIB {
	repeated KKNNNHBMLNF iflheghapkk = 1;
}

message DebugInfoProto {
	double latitude = 1;
	double longitude = 2;
}

message DeclineFriendInviteOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVITE_DOES_NOT_EXIST = 3;
		ERROR_INVITE_ALREADY_DECLINED = 4;
	}

	Result result = 1;
}

message DeclineFriendInviteProto {
	string player_id = 1;
	string nia_account_id = 2;
}

message DeepLinkingTelemetry {
	enum LinkSource {
		UNKNOWN = 0;
		URL = 1;
		NOTIFICATION = 2;
	}

	string action_name = 1;
	LinkSource link_source = 2;
}

message DeployPokemonTelemetry {
	int32 status = 1;
	PokemonTelemetry pokemon = 2;
	string gym_id = 3;
	int32 team = 4;
	int32 defender_count = 5;
}

message DeviceServiceToggleTelemetry {
	DeviceServiceTelemetryIds device_service_telemetry_id = 1;
	bool was_enabled = 2;
	bool was_subsequent = 3;
}

message DismissContactListUpdateRequest {
}

message DismissContactListUpdateResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
}

message DismissOutgoingGameInvitesRequest {
	string friend_id = 1;
	repeated string app_key = 2;
	string friend_nia_account_id = 3;
}

message DismissOutgoingGameInvitesResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
}

message DisplayWeatherProto {
	enum DisplayLevel {
		LEVEL_0 = 0;
		LEVEL_1 = 1;
		LEVEL_2 = 2;
		LEVEL_3 = 3;
	}

	DisplayLevel cloud_level = 1;
	DisplayLevel rain_level = 2;
	DisplayLevel wind_level = 3;
	DisplayLevel snow_level = 4;
	DisplayLevel fog_level = 5;
	int32 wind_direction = 6;
	DisplayLevel special_effect_level = 7;
}

message Distribution {
	message BucketOptions {
		oneof BucketType {
			LinearBuckets linear_buckets = 1;
			ExponentialBuckets exponential_buckets = 2;
			ExplicitBuckets explicit_buckets = 3;
		}

		message ExplicitBuckets {
			repeated int64 bounds = 1;
		}

		message ExponentialBuckets {
			int64 num_finite_buckets = 1;
			float growth_factor = 2;
			float scale = 3;
		}

		message LinearBuckets {
			int64 num_finite_buckets = 1;
			int64 width = 2;
			int64 offset = 3;
		}

	}

	message Range {
		int64 min = 1;
		int64 max = 2;
	}

	int64 count = 1;
	float mean = 2;
	double sum_of_squared_deviation = 3;
	Range range = 4;
	BucketOptions bucket_options = 5;
	repeated int64 bucket_counts = 6;
}

message DownloadGmTemplatesRequestProto {
	int64 basis_batch_id = 1;
	int64 batch_id = 2;
	int32 page_offset = 3;
	bool apply_experiments = 4;
	repeated int32 basis_experiment_id = 5;
	repeated int32 experiment_id = 6;
}

message DownloadGmTemplatesResponseProto {
	enum Result {
		UNSET = 0;
		COMPLETE = 1;
		MORE_RESULTS = 2;
		BATCH_ID_NOT_LIVE = 3;
		INVALID_BASIS_BATCH_ID = 4;
		WRONG_EXPERIMENTS = 5;
	}

	Result result = 1;
	repeated ClientGameMasterTemplateProto template = 2;
	repeated string deleted_template = 3;
	uint64 batch_id = 4;
	int32 page_offset = 5;
	repeated int32 experiment_id = 6;
}

message DownloadSettingsActionProto {
	string sha1 = 1;
}

message DownloadSettingsResponseProto {
	string error = 1;
	string sha1 = 2;
	bytes values = 3;
}

message Downstream {
	oneof Message {
		DownstreamActionMessages downstream = 1;
		ResponseWithStatus response = 2;
		ProbeRequest probe = 3;
		Drain drain = 4;
		Connected connected = 5;
	}

	message Connected {
		string debug_message = 1;
		int32 ttl_seconds = 2;
	}

	message Drain {
	}

	message ProbeRequest {
		int64 probe_start_ms = 1;
	}

	message ResponseWithStatus {
		oneof Response {
			SubscriptionResponse subscribe = 4;
		}

		enum Status {
			UNSET = 0;
			OK = 1;
			UNKNOWN = 2;
			UNAUTHENTICATED = 3;
			UNAUTHORIZED = 4;
			BAD_REQUEST = 5;
			UNIMPLEMENTED = 6;
			RATE_LIMITED = 7;
			CONNECTION_LIMITED = 8;
		}

		int64 request_id = 1;
		Status response_status = 2;
		string debug_message = 3;
	}

	message SubscriptionResponse {
		enum Status {
			UNSET = 0;
			OK = 1;
			UNKNOWN = 2;
			TOPIC_LIMITED = 3;
		}

		Status status = 1;
	}

}

message DownstreamAction {
	int32 method = 1;
	bytes payload = 2;
}

message DownstreamActionMessages {
	repeated DownstreamAction messages = 1;
}

message EADJMICOIDD {
	enum PDNDDLDBFKP {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	PDNDDLDBFKP llponloodfk = 1;
	EHIECBBPACE cephaffhbfh = 2;
}

message EBEOJAMPGNE {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	DKDEGECLHNI.GINDFFGCLPC hhkodmoefol = 3;
	PPMOEEBFKKG bniaebpgnal = 4;
}

message EBNKIAIAMCB {
	enum DHDIDKCHEFF {
		UNSET = 0;
		SUCCESS = 1;
	}

	DHDIDKCHEFF hhkodmoefol = 1;
	LIPCKNBPFMD kocdfjdcgjk = 2;
	PAEHCJKJPLP acbpiimiphk = 3;
	string nlnjlikopkl = 4;
	string blgcpjojdbm = 5;
	string gmokcdddjde = 6;
}

message ECKCGMOEHGH {
	string aooihceagim = 1;
	string gpchpipjlii = 2;
	int32 ljafcllohfl = 3;
}

message ECMGLBDICHP {
	OCOFAEOLDFH jihndjipdjn = 1;
}

message ECOBFNCKKGD {
	enum OBEBMFKODEJ {
		UNSET = 0;
		SUCCESS = 1;
	}

	OBEBMFKODEJ llponloodfk = 1;
	int64 bgmoefdbhgj = 2;
}

message EDKABOMBHIJ {
	int32 pljhinldecj = 1;
}

message EDKEANBNKIH {
	int64 bkkcjfmmhpl = 1;
	string gfepbfmmdcc = 2;
	int64 kgbkghaoafb = 4;
	int64 pnbnepbmaei = 5;
	string mpaekobkjkh = 6;
	double chhgiikbnma = 7;
	double flaphjheime = 8;
	string kmcejhffckk = 9;
	int64 ampcdnfglol = 10;
	bool oljogmlgifj = 11;
	NHLCGNMFNOM ogidgaedalf = 12;
	IGFAGNNAHNG gdphdcjkbal = 13;
	IGFAGNNAHNG ablbcioffnk = 14;
}

message EDKLAOBGOGN {
}

message EDOGKEPKOHE {
	string lkheohlgndb = 1;
}

message EDPDFKFCMJK {
	string knnhhccejbk = 1;
	string hiaokdgodil = 2;
	map<string, string> gebljcagpdi = 3;
	map<string, string> gjedolfhmbm = 4;
	map<string, string> loglheaecob = 5;
}

message EEAMNPFOPJF {
	bool nmfmhmhmkpk = 1;
	int32 afnamlnifob = 2;
	int32 mofgfcegjnc = 3;
}

message EEHHCANLKEC {
	int32 jeaggaghjic = 1;
	repeated BFABHCMKGCB ojgckfiagpm = 2;
	repeated int32 hlkkemcbbgp = 3;
	repeated BFABHCMKGCB pdeejlemdhi = 4;
	repeated string ckdihiinphi = 5;
}

message EEMBBGMPLBP {
	string hpnkjnbobeh = 1;
	string dfbigjfoiea = 2;
	string lloocfaiemb = 3;
	string mpaekobkjkh = 4;
	string npkpokacccg = 5;
	string glaiaopkion = 6;
	string pjakofgphpc = 7;
	string jbhhmiajjpd = 8;
	repeated string emjmflceobj = 9;
	int64 lpfaegnmfnk = 10;
}

message EEOAOGNAEHN {
	bool plmpdlcoemi = 1;
}

message EFHKJNNHJAM {
	PCNMLNDPOML lojbhbgllgp = 1;
	IBGGKKNEKOA nnnmmlpnchp = 2;
}

message EFNDHPBLEDO {
	repeated FNFFHJKDDJJ llmimjaeglc = 1;
}

message EGABODEKNMN {
	ECBJDBHKDAE bbgphpfaina = 1;
}

message EGBFFALHGGN {
}

message EGCNDAGPOCP {
	enum KEIHAKMDLFN {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_GIFT_DOES_NOT_EXIST = 3;
	}

	KEIHAKMDLFN hhkodmoefol = 1;
}

message EGFAAGMDKOI {
	int64 jghbaacccei = 1;
	int32 jeaggaghjic = 2;
	DFOJCBABDMB jdhiepdhobb = 3;
}

message EGICDHIABHP {
	enum KAFEDNMGNOM {
		NO_TYPE = 0;
		END_NPC_COMBAT = 1;
		END_INVASION_COMBAT = 2;
		COMBAT_NOTIFY = 3;
		END_PVP_COMBAT = 4;
		VS_SEEKER_MATCH_STARTED = 5;
		COMBAT_CHARGE_ATTACK_ANIMATION_ACTIVE_CHANGE = 6;
		COMBAT_UPDATE_ACTION_UI = 7;
		COMBAT_EXIT_COMBAT_STATE = 8;
		COMBAT_SUPER_EFFECTIVE_CHARGED_ATTACKS_UPDATE = 9;
		COMBAT_STATE_ENTERED = 10;
		COMBAT_STATE_DONE = 11;
		COMBAT_STATE_EXITED = 12;
		COMBAT_INITIALIZE_PRESENTATION_DIRECTOR = 13;
		COMBAT_SHOW_UI = 14;
		COMBAT_HIDE_UI = 15;
		COMBAT_SHOW_MESSAGE = 16;
		COMBAT_SHOW_TOAST = 17;
		COMBAT_SHOW_TUTORIAL = 18;
		COMBAT_UPDATE_IS_SHOWING_CHARGE_ANIM = 19;
		COMBAT_PLAY_MINI_GAME = 20;
		COMBAT_CONTINUE_AFTER_MINI_GAME = 21;
		COMBAT_SHOW_SPECIAL_ATTACK = 22;
		COMBAT_SPECIAL_MOVE_STATE_ENDED = 23;
		COMBAT_CLEAN_UP_SPECIAL_MOVE_STATE = 24;
		COMBAT_HANDLE_SPECIAL_MOVE_CAMERA_ZOOM = 25;
		COMBAT_SHIELD_USED = 26;
		COMBAT_DEFENDER_FLINCH = 27;
		COMBAT_OPPONENT_REACT = 28;
		COMBAT_FOCUS_ON_POKEMON = 29;
		COMBAT_PLAY_START_FADE_TRANSITION = 30;
		COMBAT_PLAY_END_FADE_TRANSITION = 31;
		COMBAT_COUNTDOWN_STARTED = 32;
		COMBAT_PLAY_BACK_BUTTON_SFX = 33;
		COMBAT_SETUP_COMBAT_STAGE_SUBSCRIPTIONS = 34;
		COMBAT_OPPONENT_RETRIEVE_POKEMON = 35;
		COMBAT_HIDE_NAMEPLATE = 36;
		COMBAT_DISPLAY_PHYSICAL_SHIELD = 37;
		COMBAT_UPDATE_TIMER = 38;
		COMBAT_STOP_CHARGE_ATTACK_EFFECTS = 39;
		COMBAT_DEFENSIVE_MINI_GAME_DECIDED = 40;
		COMBAT_DEFENSIVE_MINI_GAME_SERVER_RESPONSE = 41;
	}

	KAFEDNMGNOM lgkgkpfpejl = 1;
}

message EGMLAMAKEKH {
	enum HDIBJIJIIHP {
		UNSET = 0;
		SUCCESS = 1;
		AVATAR_ALREADY_SET = 2;
		FAILURE = 3;
		SLOT_NOT_ALLOWED = 4;
		ITEM_NOT_OWNED = 5;
		INVALID_AVATAR_TYPE = 6;
		AVATAR_RESET = 7;
	}

	HDIBJIJIIHP llponloodfk = 1;
	EHIECBBPACE cephaffhbfh = 2;
}

message EHABNGBOCII {
	bool hojmmofcbkl = 1;
	bool hjoedmcgcdf = 2;
}

message EHCLKMBNCNI {
}

message EHFLEDCAAOE {
	enum EKHFGDDJDBK {
		UNSET = 0;
		SUCCESS = 1;
		TOO_SOON_TO_UPDATE = 2;
		ERROR_FAILED_TO_UPDATE = 3;
		ERROR_REQUEST_TIMED_OUT = 4;
	}

	EKHFGDDJDBK hhkodmoefol = 1;
}

message EHHGKICJALE {
	enum PMGPDGELMLH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
		ERROR_TRADING_EXPIRED = 7;
		ERROR_TRADING_COOLDOWN = 8;
		ERROR_PLAYER_ALREADY_OPENED = 9;
		ERROR_FRIEND_OUT_OF_RANGE = 10;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 11;
		ERROR_PLAYER_REACHED_DAILY_LIMIT = 12;
		ERROR_FRIEND_REACHED_DAILY_LIMIT = 13;
		ERROR_PLAYER_NOT_ENOUGH_STARDUST = 14;
		ERROR_FRIEND_NOT_ENOUGH_STARDUST = 15;
		ERROR_FRIEND_BELOW_MINIMUM_LEVEL = 16;
	}

	PMGPDGELMLH hhkodmoefol = 1;
	CLLOCMAOPDJ dmkmeeheamb = 2;
}

message EHIECBBPACE {
	int64 mhjanooklad = 1;
	string edabjienhim = 2;
	int32 neifnabaggg = 5;
	repeated NGNLLGHCIBC ciekigbjhei = 7;
	MIHKJLMMMGA pekglbmegfb = 8;
	int32 olopefpdgnh = 9;
	int32 edijnmlohoe = 10;
	IIKFEIOLPDG jkhoeebpmop = 11;
	OIHHMHJMIKG anloehkobig = 12;
	GLDKJOBPOPF eihekoacemn = 13;
	repeated GJIADOOJHOL eagegkndfln = 14;
	int32 booajcjhkpd = 15;
	KDPKDEIBKBK kiabifepdhh = 16;
	int64 flnbfhgodnd = 17;
	MIHKJLMMMGA choljanffpj = 18;
	bool pfpfefimijh = 19;
	DMCJDACCAFM llaefgcmndp = 20;
	PMFJIFGBIJN leddgichdel = 21;
	string kbnlkkhjajo = 22;
	LEKJCFCNCFN bicmamcplhf = 23;
	repeated PCNMLNDPOML njbjkpgjngd = 24;
	BAJPDMOFJGM flclefedpgi = 25;
	int64 llbmipbadfc = 26;
	LJNAADNKMGN ablfbalmohn = 27;
	string oimggjddeff = 28;
	AGJKMAADOHK aabgknnpaad = 29;
	repeated IMFNKOILKIE kfkdbookkll = 30;
	int64 niahpbaeemh = 31;
}

message EHKEFPFEOPO {
	enum HCCOAGKKMJH {
		AD_TYPE_UNKNOWN = 0;
		AD_TYPE_SPONSORED_GIFT = 1;
		AD_TYPE_SPONSORED_BALLOON = 2;
		AD_TYPE_SPONSORED_BALLOON_WASABI = 3;
		AD_TYPE_SPONSORED_BALLOON_GOOGLE_MANAGED_AD = 4;
	}

	oneof LOJFGDEOFME {
		CGMPCFMACAL view_impression = 5;
		JCDKGKCNNPJ view_fullscreen = 6;
		LPCLAIDCGOF fullscreen_interaction = 7;
		AHJDFMBDFGC cta_clicked = 8;
		EDCJFNIAGMH ad_spawned = 9;
		GHKIOGLOIAA ad_dismissed = 10;
	}

	message AHJDFMBDFGC {
		string hkjimpfjnfd = 6;
	}

	message CGMPCFMACAL {
		string bhnognndpoi = 1;
		bool flhohogiimg = 2;
	}

	message EDCJFNIAGMH {
		enum OBMDEPLOHPK {
			AD_INHIBITION_UNKNOWN = 0;
			AD_INHIBITION_TR_PREVENTS_BALLOON_SPAWN = 1;
			AD_INHIBITION_CLIENT_ERROR = 2;
			AD_INHIBITION_DISABLED_IN_GMT = 3;
			AD_INHIBITION_PLAYER_OPTED_OUT_OF_ADS = 4;
		}

		bool ldjdpiofkjb = 1;
		OBMDEPLOHPK ogkkjhjhioe = 2;
	}

	message FHDBACIABLK {
		string ajcdbpfegco = 1;
		string hbockmpaepk = 2;
		string iahgmcjjihn = 3;
	}

	message GHKIOGLOIAA {
		enum LGMEBFAGALG {
			AD_DISMISSAL_UNKNOWN = 0;
			AD_DISMISSAL_TR_DISPLACES_AD_BALLOON = 1;
			AD_DISMISSAL_NEW_AD_BALLOON_DISPLACES_OLD = 2;
			AD_DISMISSAL_AD_BALLOON_AUTO_DISMISS = 3;
			AD_DISMISSAL_PLAYER_OPTED_OUT_OF_ADS = 4;
		}

		LGMEBFAGALG gfondeecncb = 1;
	}

	message JCDKGKCNNPJ {
		string jpkgakblhhn = 1;
	}

	message LPCLAIDCGOF {
		string jpkgakblhhn = 1;
		int64 jcflnbgceck = 2;
		int64 mdmpmofeebi = 3;
		bool cgmgjopclgj = 4;
	}

	string pdchpjgngea = 1;
	string engaeellgja = 2;
	string enlldmodagi = 3;
	bytes dpneefelkgi = 4;
	HCCOAGKKMJH cmmcfdilogn = 100;
	FHDBACIABLK oicocmecjof = 200;
}

message EHMKMFNIFPP {
	enum CIFLGOKMIEP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_LEVEL_TOO_LOW = 2;
		TAG_DOES_NOT_EXIST = 3;
	}

	CIFLGOKMIEP hhkodmoefol = 1;
}

message EHOHINHPAGL {
	message HHNHKFLMPDK {
		string gfepbfmmdcc = 1;
		string mgeiaokbdbi = 2;
		string mpaekobkjkh = 3;
		double ddpmccoobod = 4;
		double jcolbanhgpk = 5;
		bool iiemibhlbdo = 6;
		int32 flhcmjjjldo = 7;
		int32 jdlafmamfon = 8;
		KHOFOOOHEMH cokadbeohcj = 9;
		string gijcaehpceg = 10;
	}

	string bajolmeabfd = 1;
	repeated HHNHKFLMPDK dpheidnonpl = 2;
	int32 lpddlokhgnh = 3;
	string npfenpeghnd = 4;
	string njphihmdmbd = 5;
	string fabbmghlabl = 6;
	string lnbjncaedlo = 7;
	bool oflenmlccac = 8;
	bool ibgghjbkbbn = 9;
	int32 jkpaliicaem = 10;
	int64 iobgcgmbkod = 11;
	int64 kgbkghaoafb = 12;
}

message EICEALPIBIP {
	int32 jeaggaghjic = 1;
}

message EIFDKPAHHOI {
}

message EIIKGFALKBI {
}

message EIKHMIBBNCC {
	repeated int64 ehmhemllaog = 1;
}

message EILKKLBAKDI {
	repeated NCFPKMAHCKB acbpiimiphk = 1;
}

message EJENBLCLDLJ {
	enum FBDCJJGIIIA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PHOTO_POKEMON_INVALID = 2;
		ERROR_UNKNOWN = 3;
	}

	FBDCJJGIIIA llponloodfk = 1;
	PCNMLNDPOML aljhffbfald = 2;
	IBGGKKNEKOA cenjlpdagfa = 3;
	uint64 pkljdiaplkc = 4;
	string ghlbbikiecn = 5;
}

message EJHOIHLHCPD {
	bool dmnffekkipk = 1;
	bool looeneeegbl = 2;
	int32 npadejigigl = 3;
}

message EJIANFIDLHB {
	enum POAKDNMLGGC {
		UNSET = 0;
		SUCCESS_OPPONENT_FOUND = 1;
		SUCCESS_QUEUED = 2;
		SUCCESS_NOT_MATCHED_EXPIRED = 3;
		ERROR_PLAYER_NOT_FOUND = 4;
		ERROR_QUEUE_NOT_FOUND = 5;
		ERROR_RETRY_UNSUCCESSFUL = 6;
	}

	POAKDNMLGGC hhkodmoefol = 1;
	JDHOCBHIAMN bniaebpgnal = 2;
	string agiklpibnjc = 3;
}

message EJJLBGAOGOP {
	enum DEJNKDPGNOL {
		UNSET = 0;
		SUCCESS = 1;
	}

	DEJNKDPGNOL llponloodfk = 1;
	bool mdjmgcadmoe = 2;
	bool pamoldpanai = 3;
	bool bibddbhjlbo = 4;
	string nbpjjkhmncc = 5;
	int64 pkljdiaplkc = 6;
	bool hhmnknabkba = 7;
	string apelleablgn = 8;
	ECBJDBHKDAE iphfojfkcnl = 9;
	int32 blhabfdhobn = 10;
	bool oghgckicihk = 12;
	bool mallfaklahp = 13;
}

message EJMIOBEDOHP {
	string jlpmmlbclok = 1;
	string blgcpjojdbm = 2;
	string oabcggilfch = 3;
	string cgokajijdgn = 4;
	string okngdebcijm = 5;
	string agiklpibnjc = 6;
	repeated FGLLBAMLNJM bgpoloilfpg = 7;
	repeated FGLLBAMLNJM obfcpgmjmcl = 8;
	int64 hjpplfcnhcp = 9;
	int64 nbjdpnogfjo = 10;
	int64 kkdhcefcagm = 11;
	int64 kokpooahcma = 12;
	int64 acbiijkagfn = 13;
}

message EJPBMINNHBN {
	repeated HGPAFOGAIBG ojgckfiagpm = 1;
	repeated MGJGCNALKDG noejimpljgm = 2;
	repeated NHLCGNMFNOM mclknpmojhc = 3;
	repeated NHLCGNMFNOM piddpkfgmod = 4;
	repeated DPBDKPDCIFA lngpkpnjmkb = 5;
	int32 mcladekkgmh = 6;
	int32 gocldegiaoh = 7;
	repeated DCAECPGGPON aoapobnhdni = 8;
	repeated LEELICHGBMP chcpiokopka = 9;
	repeated string lbjhegipfin = 10;
}

message EKDIFAGOCIA {
	int32 menidjljmdn = 1;
}

message EKEJKFEANKL {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	PGJLEPEIDEI.AGPFILKPMNE hhkodmoefol = 3;
}

message EKFKCHDAJGO {
	int32 hbmmfopjbce = 1;
}

message EKOJBLBIPCM {
	repeated LMMLJBEDMBD nlkmephflem = 1;
	repeated LMMLJBEDMBD ahebjlmjidi = 2;
}

message ELEGOIEBFIM {
	CFCJGNJCLOK pcdppeomhnn = 1;
	JNPCNHMKDMB jnpheagceai = 2;
	repeated CFCJGNJCLOK agdlihnfjac = 3;
	repeated CFCJGNJCLOK aldopghphnn = 4;
	repeated DKMMOGEEPJE gkikkmijjen = 5;
	int32 jpjmdmkjalg = 6;
	bool hojmmofcbkl = 7;
	bool hjoedmcgcdf = 8;
	OBICLGNCNFN lbanlicclch = 9;
	repeated string ajbpmokphcc = 10;
	bool ecehoohconl = 11;
	bool iabhhbbpfnn = 12;
	bool ekpfkciejba = 13;
	int64 djlhjjcekee = 14;
	int32 ipgeccbaddn = 15;
	CADOBDBKNEF fihpjgjcdik = 16;
	uint64 jficnkbknkj = 17;
	uint64 oggpflffngb = 18;
	int32 jcmmfiehfnc = 19;
	int64 lmfnloknfbh = 20;
	int64 cbojbdgbnek = 21;
	string lkheohlgndb = 22;
	repeated CFCJGNJCLOK mghbmffgigg = 23;
	uint64 fakeigekhma = 24;
	uint64 ohoeikeibnc = 25;
	int32 gaelaijknhm = 26;
	int32 phjlgggmeee = 27;
}

message ELGKCAAELHC {
	IDKJLDJMNLL afldbcfplog = 1;
	bytes imknlcennoc = 2;
}

message ELGNNOOGOKF {
	bool nmfmhmhmkpk = 1;
	int32 cfncmmibapm = 2;
	int32 onpkngphlbi = 3;
}

message ELPOMPFEBMI {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	PHEFFICABAI idgbahkhhif = 3;
}

message EMIKNLOOFDJ {
	bool hpljjanehho = 1;
	float elclhoocdji = 2;
	uint32 djpbjiidhgk = 3;
}

message EODIEEEAAMP {
	double icnndjclaef = 1;
	double ogmopfkhcpa = 2;
}

message EOFGOLGNBJN {
	string fgnapjpklak = 1;
	MIHKJLMMMGA ggokaolekab = 2;
	string jjannbnogeo = 3;
	string oagggpeipbi = 4;
	string nefcmignngd = 5;
	string hfkadlhogjj = 6;
	string apbelneedgo = 7;
	string ndjomlccfmf = 8;
	bool cpgfmlcanak = 9;
	string fbjcbnlpfln = 10;
	string kpbcjnilbif = 11;
}

message EOFKFFPOIPG {
	oneof DIBDHLPLGFA {
		BACMFKIFMEI pokemon_trade = 2;
		MJFMGPLNDPK pokemon_compare = 3;
		PFANEEKIKAD gift_trade = 4;
	}

	message BACMFKIFMEI {
	}

	message MJFMGPLNDPK {
	}

	message PFANEEKIKAD {
	}

	GOBLBKAHHFO.ICFKDOGAKMA mmlpnhdbeil = 1;
	OIODPNENHPF bdpmaafgkfi = 5;
	KHOFOOOHEMH cokadbeohcj = 6;
	LDKENAMCIPK.NFOKKLIKGJA llponloodfk = 7;
}

message EOGGIKLNJPF {
	int32 ccifhkegmgh = 1;
	int32 hejbempoefi = 2;
}

message EOKADDKPJCH {
	enum ENPLFOOAKKA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_DISABLED = 2;
		ERROR_INVALID_REFERRAL_CODE = 3;
		ERROR_ALREADY_ADDED = 4;
		ERROR_PASSED_GRACE_PERIOD = 5;
		ERROR_ALREADY_SKIPPED_ENTERING_REFERRAL_CODE = 6;
	}

	ENPLFOOAKKA llponloodfk = 1;
}

message EONICCBEILE {
	int32 hbmmfopjbce = 1;
	repeated int32 ephkplfnblk = 2;
	uint32 kdmbdkobmmd = 3;
	OMDCMKIAADD cabpealgccm = 4;
}

message EPAMCAGKLGH {
	int64 nlbmhbmdooc = 1;
}

message EPCONGBEPDF {
	bool gainpajjghd = 1;
	bool jcpcjlmiakd = 2;
	string jpdgincfbfj = 3;
}

message EPEFIKFDABP {
	message ELLHFLKEDIE {
		double iciakpmcfel = 1;
		double abkjdgmmoih = 2;
	}

	string lkheohlgndb = 1;
	JNPCNHMKDMB ecpapnmbgfa = 2;
	repeated string blgcpjojdbm = 3;
	uint64 hjgmipfjaaf = 4;
	ELLHFLKEDIE ohhklmidagh = 5;
	PMFJIFGBIJN leddgichdel = 6;
}

message EPEIBEDBKKN {
	repeated OBICLGNCNFN effcggilfjh = 1;
}

message EPIFPKBJMIL {
	PCNMLNDPOML cggocggceko = 1;
	IBGGKKNEKOA nnnmmlpnchp = 2;
}

message EPLLILKCONA {
	enum JOAFMOJJMGB {
		CATCH_ERROR = 0;
		CATCH_SUCCESS = 1;
		CATCH_ESCAPE = 2;
		CATCH_FLEE = 3;
		CATCH_MISSED = 4;
	}

	enum OCNEJLOOJGD {
		UNSET = 0;
		DEFAULT = 1;
		ELEMENTAL_BADGE = 2;
		CRITICAL_CATCH = 3;
	}

	JOAFMOJJMGB llponloodfk = 1;
	double lieognhgjan = 2;
	uint64 jncokgmhfbp = 3;
	IDFMJMIFHFG nidinokggpc = 4;
	OCNEJLOOJGD flfdaanmkom = 5;
	int32 alflionmggg = 6;
	int32 gceielnimla = 7;
	IBGGKKNEKOA nnnmmlpnchp = 8;
	IBGGKKNEKOA gcceehbagkk = 9;
}

message EPOIJKOFNEK {
	float nlofjlbdofl = 1;
}

message EPOPHCHKFAH {
	string kclkpcagdbm = 1;
}

message EPPKMKFOLKF {
	repeated string fpipnamajag = 1;
}

message EggHatchTelemetry {
	int32 num_eggs_hatched = 1;
	int32 num_animations_skipped = 2;
}

message EncounterPokemonTelemetry {
	PokemonTelemetry pokemon = 1;
	string map_pokemon_type = 2;
	bool ar_enabled = 3;
	bool ar_plus_enabled = 4;
}

message EvolvePokemonTelemetry {
	PokemonTelemetry pokemon = 1;
	PokemonTelemetry evolved_pokemon = 2;
}

message FACEBPHNEID {
	PMFJIFGBIJN pkllbnoolmh = 1;
}

message FADIPHCEJEG {
	uint64 ghadpgjcoel = 1;
	string lkheohlgndb = 2;
	repeated LJACKGHOCHI hgfebmjngmb = 3;
}

message FAEEANAIMLH {
	int32 fkclodlhbaa = 1;
	int32 hknfomgnnmh = 2;
	int32 ndhomamobdb = 3;
}

message FAPJHJIBHJG {
	bool gfmdjjppmkj = 1;
	int32 kpdkebnbkgo = 2;
	bool nkjmkiigkjl = 3;
	int32 alpjanbndlh = 4;
	bool ofdmlipjcea = 5;
	int32 jipbafjplnl = 6;
	float jdjfijknhfb = 7;
}

message FBCOLHDINMJ {
	enum FNAAKDDEJNP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_GIFT_DOES_NOT_EXIST = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_FRIEND_NOT_FOUND = 5;
		ERROR_FORT_SEARCH = 6;
	}

	FNAAKDDEJNP hhkodmoefol = 1;
	repeated JLDJJCPLJLP lcblblinepo = 2;
}

message FBDAIMGPMGC {
	repeated OEFNBCPAHHB nbdjbiabcbo = 1;
}

message FBHNOBKMCAK {
	bool cdpbpjhajnc = 1;
}

message FBIHBCOKGIB {
	int32 jeaggaghjic = 1;
	PCNMLNDPOML igfdgcikjem = 2;
	FAEEANAIMLH noccefkojfl = 3;
	PJICJPPOCOI pidgjeahbla = 4;
	PGMLNDOAFLL monjlnoponb = 5;
}

message FBONFNPLEKK {
	enum KAKGPMHLBFJ {
		DEFAULT = 0;
		INTERNAL_TEST = 1;
	}

}

message FBPJJHIIEEN {
	NPANMHAOFMF mhmindhjddj = 1;
	bytes dpneefelkgi = 2;
	repeated EDPDFKFCMJK mocbadkcpla = 3;
	APPANLHEPGH gnggblibigp = 4;
}

message FCBDKABMDKH {
	enum DLMKDCHMAMF {
		PLATFORM_UNKNOWN = 0;
		PLATFORM_ANDROID = 1;
		PLATFORM_IOS = 2;
		PLATFORM_WEB = 3;
	}

	string cmldemjecei = 1;
	string kgkhdkbhhio = 2;
	DLMKDCHMAMF almpjfdlinf = 3;
	string ghmmgepakpo = 4;
}

message FCFGINLEOLP {
	string pofcpnikfel = 1;
	string malkbgnfpdm = 2;
	int64 pljhinldecj = 3;
	uint32 laiinhecmni = 4;
	int32 ocokppfodae = 5;
	bytes oaebkkifhhl = 6;
}

message FCFGLCPCAFH {
	enum KMLAIBJBNKE {
		UNSET = 0;
		FORT_POWER_UP_ACTIVITY_AR_SCAN = 1;
	}

	KMLAIBJBNKE hbfphpkipgh = 1;
	int32 bjgabdeboab = 2;
	int32 cnjkhejhidi = 3;
}

message FCGGKMMNLLC {
	enum DGBOEIAGBJJ {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_DISABLED = 2;
		ERROR_MILESTONE_NOT_FOUND = 3;
		ERROR_MILESTONE_COMPLETE = 4;
		ERROR_MILESTONE_NOT_ACHIEVED = 5;
		ERROR_POKEMON_INVENTORY_FULL = 6;
	}

	DGBOEIAGBJJ llponloodfk = 1;
}

message FCHGBJCEFNN {
	oneof NDAGAAFHJGE {
		NHLCGNMFNOM pokemon = 1;
		OOFDHEHENPH item = 2;
		FILIKEGAJKI pokedex_entry = 3;
		JNKJIAMIHJH player_stats = 4;
		KCCEMDBINAI player_currency = 5;
		MGLDFKKPHCO player_camera = 6;
		DALFBHNDIFJ inventory_upgrades = 7;
		HCLDOPDIFHO applied_items = 8;
		JPHNPFADKEO egg_incubators = 9;
		PGLLLFPLPPK pokemon_family = 10;
		MBKJCODCAKE quest = 11;
		LIJLCCLIHAM avatar_item = 12;
		JOLNMDLIEMA raid_tickets = 13;
		DNPGMILODLO quests = 14;
		FBDAIMGPMGC gift_boxes = 15;
		ILEIGBCDHEG beluga_incense = 16;
		AEGJCDDKMBA route_maker = 18;
		JFGIGKCKFMO limited_purchase_sku_record = 19;
		EHOHINHPAGL route_play = 20;
		BBCLOIBKMLL mega_evolve_species = 21;
		JGGHHDNKGAP sticker = 22;
		DHICAHDGLDF pokemon_home = 23;
		KGIIFABMANL badge_data = 24;
		GNGOAGJGFHB player_stats_snapshots = 25;
		NBBAHDOGFOL fake_data = 26;
		PGBMMOAHKDF pokedex_category_milestone = 27;
		OMPKDFLHKOK player_attributes = 29;
	}

}

message FCHKINMCNCK {
	string blgcpjojdbm = 1;
	repeated uint64 iepbdcjdpfk = 2;
}

message FCIKMGNCHAA {
	int32 laagplaanhd = 1;
	float obohicheool = 2;
	float cfkkfgpbbjn = 3;
	float ogkndnfpebd = 4;
	float kfkgmcnpabc = 5;
	float dlballibodc = 6;
	float eodnigngmif = 7;
	float ndjgnbgiohk = 8;
	bool fmmefodjpic = 9;
	float odkpiengjei = 10;
	float knmegeodkpn = 11;
}

message FCJACLIKCIL {
	enum GBDJDGHDINK {
		UNKNOWN = 0;
		POKEMON_FED = 1;
		POKEMON_DEPLOYED = 2;
		POKEMON_RETURNED = 3;
		BATTLE_WON = 4;
		BATTLE_LOSS = 5;
		RAID_STARTED = 6;
		RAID_ENDED = 7;
		GYM_NEUTRALIZED = 8;
	}

	string cmkfglbfnne = 1;
	int64 ehmhemllaog = 2;
	GBDJDGHDINK conddnnhlpf = 3;
	int32 lahokpiipjb = 4;
	uint64 igfdgcikjem = 5;
}

message FCLDEPJJJHM {
	oneof EDKFDFJGIEK {
		string referrer_player_id = 3;
		string referee_player_id = 4;
	}

	message FEPALCKGFCB {
		enum NEPDJDKGCPN {
			UNSET = 0;
			ACTIVE = 1;
			ACHIEVED = 2;
			ACTIVE_HIDDEN = 3;
			ACHIEVED_HIDDEN = 4;
			REWARDS_CLAIMED = 5;
		}

		message LHOJBNDDJON {
			string edabjienhim = 1;
			string apegjbkodcm = 2;
		}

		string kfecfadibeo = 1;
		NEPDJDKGCPN llponloodfk = 2;
		repeated bytes aflnkbolkmh = 3;
		string fhijbclielo = 4;
		int32 pljhinldecj = 5;
		repeated LHOJBNDDJON odkoacnjmbk = 6;
		bool ajamgjnbajn = 7;
		int64 ioiconefljg = 8;
	}

	string alllfpmhpmp = 1;
	int32 pljhinldecj = 2;
	map<string, FEPALCKGFCB> dnmahifnmmk = 5;
}

message FDIDNOIAIPC {
}

message FEEIHHNAFKI {
	enum KAGPFHFNBLM {
		UNSET = 0;
		POI_PHOTO_UPLOAD_ERROR = 1;
		POI_PHOTO_UPLOAD_TIMEOUT = 2;
	}

	KAGPFHFNBLM mmgimholalh = 1;
	PEKEKKLJHEB lfbhamniogc = 2;
	string dompaacldeh = 3;
}

message FEHDHJEFDKO {
	enum FIMJBFOCMMI {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_GYM_NOT_FOUND = 2;
		ERROR_GYM_NEUTRAL = 3;
		ERROR_GYM_WRONG_TEAM = 4;
		ERROR_GYM_EMPTY = 5;
		ERROR_INVALID_DEFENDER = 6;
		ERROR_TRAINING_INVALID_ATTACKER_COUNT = 7;
		ERROR_ALL_POKEMON_FAINTED = 8;
		ERROR_TOO_MANY_BATTLES = 9;
		ERROR_TOO_MANY_PLAYERS = 10;
		ERROR_GYM_BATTLE_LOCKOUT = 11;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 12;
		ERROR_NOT_IN_RANGE = 13;
		ERROR_POI_INACCESSIBLE = 14;
	}

	FIMJBFOCMMI hhkodmoefol = 1;
	int64 pniikgdbnoa = 2;
	int64 moohipbgpjh = 3;
	string dileendfikh = 4;
	ELEGOIEBFIM dchbfpddiig = 5;
	ACMJMCCMKOD epmnkbjjplo = 6;
	ELEGOIEBFIM penhheilocg = 7;
	KLGNLFGLMEM hdlfefpaljd = 8;
}

message FEJOFJDIKPO {
	FBPJJHIIEEN hbmegcdcafj = 1;
	DOGJIKDPNLK hfmihlfmgfj = 2;
}

message FFDADKLCAPA {
	bool cjeohkkkadd = 1;
}

message FFDNGHHPKDK {
	NECCKHDNPKM pgdgeobanmh = 1;
	string ljknacljjeb = 2;
}

message FFEMGMIOBKO {
	oneof LILLKNKEENJ {
		OENHIOKELCC add_entry = 1;
		JCBHAJDAEMN read_entry = 2;
		LLMELOPFDLB remove_entry = 3;
	}

}

message FFHMCAEIELD {
	int32 cfgpbigdmcj = 1;
	int32 inajmmplclj = 2;
	int32 bajlglfammf = 3;
	int32 oameehaihoo = 4;
	float agkjhjkobnf = 5;
	int32 cgikfhkijeg = 6;
	int32 fjomflgnnpg = 7;
	int64 aaeoekijajh = 8;
}

message FFMIPABIEKB {
}

message FFNJAPFFHEJ {
	bool idbckmkcbkn = 1;
}

message FGEJBMKNNAH {
	string gedndgmoeaf = 1;
	bool gckfnfflmfg = 2;
	int32 hpcgcidegkl = 3;
}

message FGFFKOGDPPM {
	enum BIMJCAGJGAJ {
		UNSET = 0;
		ERROR_BUDDY_NOT_VALID = 1;
		SUCCESS_ADDED_LOOT_TO_INVENTORY = 2;
		SUCCESS_ADDED_SOUVENIR_TO_COLLECTIONS = 3;
		ERROR_BUDDY_HAS_NOT_PICKED_UP_ANY_SOUVENIRS = 4;
		ERROR_INVENTORY_IS_FULL = 5;
		ERROR_BUDDY_NOT_ON_MAP = 6;
	}

	BIMJCAGJGAJ hhkodmoefol = 1;
	CEGJPOAAPFD phlopafjenm = 2;
	LJNAADNKMGN amanihbickm = 4;
	FOALJFDFEJF.MCCJAMOLHDC kdnpkeplngk = 5;
}

message FGLLBAMLNJM {
	uint64 igfdgcikjem = 1;
	int32 lahokpiipjb = 2;
	int32 pamcojidban = 3;
	float bmfgcfjdnjo = 4;
	int32 agedjchhpkd = 5;
	int32 afgdgnmpmae = 6;
	int32 plhdcjeoiif = 7;
	int32 jkmdcoekemo = 8;
	IBGGKKNEKOA nnnmmlpnchp = 9;
	int32 nckphldmbhl = 10;
	int32 cioaphnbeme = 11;
	int32 nhmffbamnde = 12;
	int32 ebhklopjhlk = 13;
	int32 jbimgjclkbh = 14;
	string mgajgldjfcb = 15;
	BFABHCMKGCB ihccaegggcb = 16;
}

message FGNPDEENPDB {
	HNFFCOIBALF nogkfddgbap = 1;
}

message FGOPBILAKBN {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	GNGIPAFKCDC.LEOLHKMBLJJ hhkodmoefol = 3;
	PPMOEEBFKKG bniaebpgnal = 4;
}

message FHANPBJLNNB {
	enum HGJILOKLHLL {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_SENDER_DOES_NOT_EXIST = 2;
		ERROR_GIFT_DOES_NOT_EXIST = 3;
		ERROR_POSTCARD_ALREADY_CREATED = 4;
		ERROR_POSTCARD_INVENTORY_FULL = 5;
		ERROR_NOT_ENABLED = 6;
		ERROR_RATE_LIMITED = 7;
		ERROR_PLAYER_HAS_NO_STICKERS = 8;
	}

	HGJILOKLHLL hhkodmoefol = 1;
	BOJDGFGFLNL bkmggdmchek = 2;
}

message FHEALNLJAOG {
	string kkjmonlcana = 1;
}

message FHGPMKBBNPL {
	repeated string aepjahhkhpe = 1;
	string ahcgfgkkkdn = 2;
	repeated int32 gdghkinahdb = 3;
	double kbgeoncpmbj = 4;
	double jkgggjheffd = 5;
}

message FHLHJBFLNBD {
	string npjapincanf = 1;
	LIPCKNBPFMD kocdfjdcgjk = 2;
	repeated uint64 iepbdcjdpfk = 3;
	string jlpmmlbclok = 4;
	NHHFPHJCFNG hblklnlpfbo = 5;
}

message FHMNODLOFOC {
	KBLOHLCKEDL ncdkcjjfnld = 1;
	CJEONPOMPLE bgegckanikd = 2;
	string dfcalenndfn = 3;
	HPALNMAGNBA bfgbdpelggc = 4;
}

message FHOIKKINAOI {
	repeated int64 kelhhealbli = 1;
}

message FIBMCBLEACN {
	PCNMLNDPOML igfdgcikjem = 1;
	IBGGKKNEKOA nnnmmlpnchp = 2;
	uint64 epaaephgnlj = 3;
}

message FIBPBHEAKIE {
	BFABHCMKGCB acifngkjfjh = 1;
	int32 fjdhldkllcc = 2;
}

message FIDJECHMKAK {
	string dpcjdpbcggg = 1;
	string lkheohlgndb = 2;
	string dbhpmnaaoik = 3;
	string oaebkkifhhl = 4;
}

message FIFNPCHJDPF {
	string lkheohlgndb = 1;
}

message FIGFEGBCAFE {
	uint64 igfdgcikjem = 1;
}

message FIGLAAOKGAN {
	bool kiimonhlobd = 1;
	bool bdbmlbijpka = 2;
}

message FILIKEGAJKI {
	message GPEJEFHOKGD {
		FFKJOOMBLDO eibnojbkfkk = 1;
		bool klgpeoahepo = 2;
		bool hkendakhhck = 3;
	}

	message JCONDDDCNFE {
		GMICNCPLCMG ngfdagnmgpe = 1;
		int32 kcgddmabdgh = 2;
		int32 cflpojmjlkd = 3;
		repeated IBGGKKNEKOA.KJGDPFEEFAJ pipccidioag = 4;
		repeated IBGGKKNEKOA.KJGDPFEEFAJ hlpdmjbfihf = 5;
		int32 imjidofcnoa = 6;
		int32 nfiipiceofk = 7;
	}

	int32 ilcnbgfockh = 1;
	int32 kcgddmabdgh = 2;
	int32 cpbancmnplf = 3;
	int32 bcdekmldgcb = 4;
	int32 gjokpdndcfh = 5;
	repeated IBGGKKNEKOA.BNNGGJPIPIH gdaojcibdho = 6;
	repeated IBGGKKNEKOA.IBGFAGKHKGN fhohhacoohp = 7;
	repeated IBGGKKNEKOA.KJGDPFEEFAJ ddjlgcfeoga = 8;
	bool mkngmicmcpa = 9;
	repeated IBGGKKNEKOA.BNNGGJPIPIH pjbggglmafh = 10;
	repeated IBGGKKNEKOA.IBGFAGKHKGN hcfimogppnm = 11;
	repeated IBGGKKNEKOA.KJGDPFEEFAJ celkimecinn = 12;
	bool bdnndemlglj = 13;
	int32 ednkpaaeakn = 14;
	int32 nacfebnhjgm = 15;
	repeated JCONDDDCNFE kkfphhghopp = 16;
	repeated IBGGKKNEKOA.IBGFAGKHKGN hgmimgenfma = 17;
	map<string, GPEJEFHOKGD> ambioplapip = 18;
	repeated IBGGKKNEKOA.DDEDEGGJGPH fobgamckkma = 19;
}

message FIOENLEKBGB {
	HKFBKGFPFCA cakpkjgoeej = 1;
}

message FIPOIHKODIA {
	string mkdlflaoaki = 1;
	string ajbpmokphcc = 2;
	int32 fkagmpddmni = 3;
	int64 lnfpjaciddc = 4;
}

message FJADGLBANCL {
	LCKIOJJDOJO boeedjcoloj = 1;
	string llokememgmi = 2;
}

message FJAEICAIIKE {
	int32 edfohjkbcag = 1;
	int32 pncpnnecgmi = 2;
	double afaefdbhijh = 3;
	int64 agkimnnlcni = 4;
}

message FJCHBEOHIKD {
	bool mlenihpnhen = 1;
	int32 menmpibhgoe = 2;
	bool cakpmhmpbio = 3;
}

message FJDJKDCAOKK {
	enum GEHEKEHNOOC {
		PLATFORM_UNKNOWN = 0;
		PLATFORM_ANDROID = 1;
		PLATFORM_IOS = 2;
	}

	GEHEKEHNOOC lhcaemmgibn = 1;
	string ambapacfacm = 2;
	string ghmmgepakpo = 3;
}

message FJDPBMJPJJK {
	uint32 ficmgmlbhmp = 1;
	uint32 fbpmkahlamh = 2;
}

message FJEONGCOEAP {
	oneof OLMHALIOFLK {
		NMNDIPIFJKD pokecoin = 1;
		MEOGMDKEPGH gym_pokemon = 2;
		PPHHNEDFGBH streaks = 3;
		BJBJJBOKJBP event = 4;
		OFMGHCANDBK up_next = 5;
		HIAGOHOEAMD timed_quest = 6;
		EEMBBGMPLBP event_banner = 7;
		GFIIOKPGDLO timed_group_challenge = 8;
		PBFHCLIKLME mini_collection = 9;
	}

}

message FJFGCAAJELG {
	enum LHPIKCCMPLM {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_BUDDY_NOT_VALID = 2;
	}

	LHPIKCCMPLM hhkodmoefol = 1;
	LJNAADNKMGN amanihbickm = 2;
	FOALJFDFEJF.MCCJAMOLHDC kdnpkeplngk = 3;
}

message FJGBEPPMMOO {
	int32 hbmmfopjbce = 1;
}

message FJIHIBMJOKK {
	string bhiehbahkcc = 1;
}

message FJMPFKJIGED {
}

message FKAKABFPLOM {
	enum LOCANLDIAFG {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_QUEST_NOT_FOUND = 2;
		ERROR_QUEST_STILL_IN_PROGRESS = 3;
		ERROR_QUEST_ALREADY_COMPLETED = 4;
		ERROR_SUBQUEST_NOT_FOUND = 5;
		ERROR_SUBQUEST_STILL_IN_PROGRESS = 6;
		ERROR_SUBQUEST_ALREADY_COMPLETED = 7;
		ERROR_MULTIPART_STILL_IN_PROGRESS = 8;
		ERROR_MULTIPART_ALREADY_COMPLETED = 9;
		ERROR_REDEEM_COMPLETED_QUEST_STAMP_CARD_FIRST = 10;
		ERROR_INVENTORY_FULL = 11;
		ERROR_INVALID_BRANCH = 12;
	}

	LOCANLDIAFG llponloodfk = 1;
	BGOGOGOMLBN bkmmhnbfabl = 2;
	repeated KOFBOBFKIGL bphhdbmflfm = 3;
}

message FKMBILHMPBJ {
	enum KLIJAFOEBPE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_QUEST_NOT_FOUND = 2;
		ERROR_INVALID_DISPLAY = 3;
	}

	KLIJAFOEBPE llponloodfk = 1;
	repeated BGOGOGOMLBN nliiinmcdoh = 2;
}

message FLBDBALKHCH {
	string bdlnhilgeab = 1;
	BELDODCMJBD nlaodmkopha = 2;
}

message FLGAICEOMIO {
	uint32 hafaeieofcj = 1;
	uint32 bcobbgdifok = 2;
	LMMLJBEDMBD peeajijiikm = 3;
	LMMLJBEDMBD cbahdellncp = 4;
}

message FLGPLCBGMBA {
	string chkeipbbfab = 1;
}

message FLLAPHHAGJD {
	int32 hbmmfopjbce = 1;
}

message FLOPHILKPLH {
	enum DEJJIIOHNEC {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_DOES_NOT_EXIST = 3;
		ERROR_GIFT_DOES_NOT_EXIST = 4;
		ERROR_GIFT_ALREADY_SENT_TODAY = 5;
		ERROR_PLAYER_HAS_UNOPENED_GIFT = 6;
		ERROR_FRIEND_UPDATE = 7;
		ERROR_PLAYER_HAS_NO_STICKERS = 8;
	}

	DEJJIIOHNEC hhkodmoefol = 1;
	int32 gcmglcjkngk = 2;
}

message FLPEKKJPPFC {
	float efafodkkifm = 1;
	float eeblkdagcla = 2;
}

message FMLHBJIJPAF {
	string jdloancnick = 1;
}

message FMMGCJMNKHJ {
	bool dccdfhedifd = 1;
}

message FNAEHFBNHNM {
	enum BNCEALEPPOP {
		NONE_COMBAT_ACTIVE_STATE = 0;
		ENTER_COMBAT_ACTIVE_STATE = 1;
		EXIT_COMBAT_ACTIVE_STATE = 2;
		DO_WORK_COMBAT_ACTIVE_STATE = 3;
	}

	enum BONEFKKALEN {
		NONE_COMBAT_PRESENTATION_DIRECTOR = 0;
		PLAY_MINI_GAME = 1;
	}

	enum CIKOIPAAAKC {
		NONE_COMBAT_READY_STATE = 0;
		ENTER_COMBAT_READY_STATE = 1;
		EXIT_COMBAT_READY_STATE = 2;
		DO_WORK_COMBAT_READY_STATE = 3;
	}

	enum FBNOMKFKLCJ {
		NONE_COMBAT_DIRECTOR_V2 = 0;
		TRY_START_COMBAT = 1;
		START_COMBAT_ERROR = 2;
		RECEIVE_COMBAT_UPDATE = 3;
		TRY_FAST_ATTACK = 4;
		SWAP_POKEMON_TO = 5;
		QUEUE_SPECIAL_ATTACK = 6;
		TRY_SPECIAL_ATTACK = 7;
		TRY_EXECUTE_BUFFERED_ACTION = 8;
		CAN_ACT_ON_TURN = 9;
		CAN_PERFORM_ATTACK = 10;
	}

	enum GDCHCEHCPOB {
		NONE_COMBAT_STATE_V2 = 0;
		OBSERVE_COMBAT_STATE = 1;
	}

	enum GOAKEHLAHMH {
		NONE_COMBAT_SPECIAL_MOVE_STATE = 0;
		ENTER_COMBAT_SPECIAL_MOVE_STATE = 1;
		EXIT_COMBAT_SPECIAL_MOVE_STATE = 2;
		DO_WORK_COMBAT_SPECIAL_MOVE_STATE = 3;
	}

	enum IDLMFHJGCNM {
		NONE_COMBAT_SWAP_STATE = 0;
		ENTER_COMBAT_SWAP_STATE = 1;
		EXIT_COMBAT_SWAP_STATE = 2;
		DO_WORK_COMBAT_SWAP_STATE = 3;
	}

	enum IGHDIEIOBCH {
		NONE_COMBAT_END_STATE = 0;
		ENTER_COMBAT_END_STATE = 1;
		EXIT_COMBAT_END_STATE = 2;
		DO_WORK_COMBAT_END_STATE = 3;
	}

	oneof NGOEEOCJPIK {
		BNCEALEPPOP combat_active_state_function = 2;
		IGHDIEIOBCH combat_end_state_function = 3;
		CIKOIPAAAKC combat_ready_state_function = 4;
		IDLMFHJGCNM combat_swap_state_function = 5;
		GOAKEHLAHMH combat_special_move_state_function = 6;
		POAOAHHNOIO combat_wait_for_player_state_function = 7;
		BONEFKKALEN combat_presentation_director_function = 8;
		FBNOMKFKLCJ combat_director_v2_function = 9;
		GDCHCEHCPOB combat_state_v2_function = 10;
	}

	enum POAOAHHNOIO {
		NONE_COMBAT_WAIT_FOR_PLAYER_STATE = 0;
		ENTER_COMBAT_WAIT_FOR_PLAYER_STATE = 1;
		EXIT_COMBAT_WAIT_FOR_PLAYER_STATE = 2;
		DO_WORK_COMBAT_WAIT_FOR_PLAYER_STATE = 3;
	}

	int32 bpgngpbcdli = 1;
}

message FNAEMJCJMFI {
	oneof EOHLIHPMPLE {
		NFOKIFKJMAG catch_pokemon = 3;
		LOMFNNKPMKE fort_search = 4;
		IHPAHNKDCDL buddy_pokemon = 5;
		OOEFMODIHFC raid_rewards = 6;
		KMAEGNPECKM passcode_rewards = 7;
		ABIFKGLJJCP complete_quest = 8;
		BGGGBCMEHDB complete_quest_stamp_card = 9;
		JJDEGAMJEPC complete_quest_pokemon_encounter = 10;
		HJMNKACGBAO beluga_transfer = 11;
		HJAMKOKDACC open_gift = 12;
		LMMPBMEABML send_gift = 13;
		DBGMAHDOJOD trading = 14;
		JMLOOJKCDNE share_ex_raid_pass = 15;
		ALILGDAJJAF decline_ex_raid_pass = 16;
		GEPLKGJPJAP fitness_rewards = 17;
		EBNKIAIAMCB combat = 18;
		FIBMCBLEACN purify_pokemon = 19;
		POLNBIMJBIC invasion_victory = 20;
		NIBGBALKPGB vs_seeker_set = 21;
		DMNNBJFIIPD vs_seeker_complete_season = 22;
		KMHHGOPNMCN vs_seeker_win_rewards = 23;
		PHNHGJIJDFC buddy_consumables = 24;
		MCOKMGFIKJE complete_referral_milestone = 25;
	}

	int64 ehmhemllaog = 1;
	bool mbfpjbdnfec = 2;
}

message FNEDCENIHLF {
	MIHKJLMMMGA pekglbmegfb = 2;
}

message FNFHMHBBPGL {
	bool pdopkjpicaf = 1;
	int32 gpiocmdfgij = 2;
	int32 afpjpklkaga = 3;
	int32 knomckbkpjh = 4;
	int32 daeggomaphj = 5;
}

message FNHEHEPKICP {
	int32 fbkodemlfon = 1;
	int32 dlineihhhpe = 2;
}

message FNMDDHBCCFB {
	message AEHEBJBPJII {
		int32 diennfmaafk = 1;
		int32 ijjgponbajg = 2;
		int32 lajmlaadkmd = 3;
		int32 liepajefafl = 4;
		int32 gmjdmgimcbb = 5;
	}

	message KMFGGFJCKOK {
		AEHEBJBPJII pcdppeomhnn = 1;
		repeated AEHEBJBPJII agdlihnfjac = 2;
		repeated AEHEBJBPJII ifpnlibbgpp = 3;
		HKFBKGFPFCA jbkialfaoid = 4;
		bool bjhmgamdfaf = 5;
		int32 jjiimebmkha = 6;
		HKFBKGFPFCA pehmigkmaep = 7;
		uint32 pcelagopocl = 8;
		int32 njpnbokpmlh = 9;
	}

	JGHBGMKOLJK.BGJFDNJOHOC gblfjjghpbb = 1;
	KMFGGFJCKOK cephaffhbfh = 3;
	KMFGGFJCKOK nlnjlikopkl = 4;
	uint32 fffliffjkao = 7;
	int32 mjfmafdimpk = 8;
	uint32 olambmodono = 9;
	uint32 iooafiabehb = 10;
	uint32 agjcmfcknea = 11;
	uint32 milhafecgab = 12;
	uint32 okgdmbihcml = 13;
	uint32 pgabmkeifbk = 14;
}

message FNNAOINABOO {
	GIAECOIHMJD.ILOODGKLOAM hhkodmoefol = 1;
	OBICLGNCNFN lbanlicclch = 8;
}

message FOALJFDFEJF {
	enum MCCJAMOLHDC {
		BUDDY_HEART_UNSET = 0;
		BUDDY_HEART_SINGLE = 1;
		BUDDY_HEART_DOUBLE = 2;
	}

	message MJFAGCPKNMO {
		repeated MCCJAMOLHDC ifjenlhajbb = 1;
	}

	float pgcicpjolli = 1;
	map<int32, MJFAGCPKNMO> alapkaknoam = 2;
}

message FOEFJLFNMEF {
	int32 iaeolkgdkpp = 1;
	int32 klloploonbj = 2;
	double apneofgkdlf = 3;
	double fdnkcdojoop = 4;
	int32 mjlfnbjmfpn = 5;
	int32 cdohocdopmn = 6;
	int32 fafcdfpjkmo = 7;
	int32 dkkfohafgbf = 8;
}

message FOENGFIAGDK {
	bool ioikdkcgmfo = 1;
	bool aogjhiacijh = 2;
}

message FOKFBFBJNPD {
	bool nmfmhmhmkpk = 1;
}

message FOMDNLGEHKP {
	enum PDBMADDFMME {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_COMBAT_STATE = 2;
		ERROR_COMBAT_SESSION_FULL = 3;
		ERROR_POKEMON_NOT_IN_INVENTORY = 4;
		ERROR_OPPONENT_NOT_IN_RANGE = 5;
		ERROR_CHALLENGE_EXPIRED = 6;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 7;
		ERROR_OPPONENT_QUIT = 8;
		ERROR_POKEMON_LINEUP_INELIGIBLE_FOR_LEAGUE = 9;
		ERROR_COMBAT_LEAGUE_UNSPECIFIED = 10;
		ERROR_ACCESS_DENIED = 11;
		ERROR_PLAYER_HAS_NO_BATTLE_PASSES = 12;
	}

	PDBMADDFMME hhkodmoefol = 1;
	JGHBGMKOLJK kanajhkhmhb = 2;
	bool malmlmofbeo = 3;
	repeated NJMFCLNADGI jgfkgdpdmep = 4;
}

message FPFPMOCOANF {
	string oaebkkifhhl = 1;
	string konhpkeikce = 2;
}

message FPJEELJLGLH {
	string ojclbendlde = 1;
	string konhpkeikce = 2;
	string moioljkcikp = 3;
}

message FPLOAHKGPBI {
	enum EICGPCJAHKA {
		UNSET_STAT = 0;
		WEIGHT = 1;
		HEIGHT = 2;
		AGE = 3;
		WALKED_DISTANCE_KM = 4;
		CP = 5;
		MAX_HP = 6;
	}

	enum GGLJALJPFIP {
		UNSET_OPERATION = 0;
		GREATER_WIN = 1;
		LESSER_WIN = 2;
	}

	EICGPCJAHKA odecbnjfepk = 1;
	GGLJALJPFIP oalhooamjdc = 2;
}

message FPMGIEPHOFO {
	enum PBNCOODKKII {
		STATUS_UNKNOWN = 0;
		STATUS_SUCCESS = 1;
		STATUS_ALREADY_REDEEMED = 2;
		STATUS_FAILED_INVENTORY_CHECK = 3;
		STATUS_OUT_OF_RANGE = 4;
		STATUS_WRONG_LOCATION = 5;
		STATUS_RATE_LIMITED = 6;
		STATUS_INVALID = 7;
		STATUS_FULLY_REDEEMED = 8;
		STATUS_EXPIRED = 9;
	}

	message FOJDMFLLGIN {
		string acifngkjfjh = 1;
		int32 fjdhldkllcc = 2;
	}

	PBNCOODKKII llponloodfk = 1;
	int32 docpoachnmo = 2;
	repeated FOJDMFLLGIN acbpiimiphk = 3;
	string pimkgpfepdi = 5;
	bytes oclmhinbjea = 6;
}

message FavoritePokemonTelemetry {
	PokemonTelemetry pokemon = 1;
	bool favored = 2;
}

message FbTokenProto {
	string token = 1;
}

message Feature {
	oneof Metadata {
		BuildingMetadata building_metadata = 3;
		RoadMetadata road_metadata = 4;
		TransitMetadata transit_metadata = 5;
	}

	Geometry geometry = 1;
	Label label = 2;
}

message FeedPokemonTelemetry {
	int32 status = 1;
	PokemonTelemetry pokemon = 2;
	string gym_id = 3;
	int32 team = 4;
	int32 defender_count = 5;
	int32 motivation = 6;
	int32 cp_now = 7;
}

message FitnessMetricsProto {
	double distance_walked_meters = 1;
	int32 step_count = 2;
	double calories_burned_kcals = 3;
	int64 exercise_duration_mi = 4;
	double wheelchair_distance_meters = 5;
	double wheelchair_push_count = 6;
}

message FitnessMetricsReportHistory {
	message MetricsHistory {
		int64 bucket = 1;
		FitnessMetricsProto metrics = 2;
	}

}

message FitnessRecordProto {
	map<int64, FitnessMetricsProto> hourly_reports = 1;
	int64 last_aggregation_timestamp_ms = 2;
	FitnessStatsProto fitness_stats = 3;
	FitnessMetricsReportHistory report_history = 4;
}

message FitnessReportProto {
	oneof Window {
		int32 day_offset_from_now = 1;
		int32 week_offset_from_now = 2;
		int32 hour_offset_from_now = 3;
	}

	FitnessMetricsProto metrics = 4;
	bytes game_data = 5;
}

message FitnessSample {
	enum FitnessSampleType {
		SAMPLE_UNSET = 0;
		STEPS = 1;
		WALKING_DISTANCE_METERS = 2;
		WHEELCHAIR_DISTANCE_METERS = 3;
		CALORIES_KCALS = 4;
		WHEELCHAIR_PUSH_COUNT = 5;
		EXERCISE_TIME_MI = 6;
	}

	enum FitnessSourceType {
		SOURCE_UNSET = 0;
		HEALTHKIT = 1;
		GOOGLE_FIT = 2;
		APPLE_WATCH = 3;
		GPS = 4;
		ANDROID_SENSOR_HUB = 5;
	}

	int64 sample_start_timestamp_ms = 1;
	int64 sample_end_timestamp_ms = 2;
	double value = 3;
	FitnessSampleMetadata metadata = 4;
}

message FitnessSampleMetadata {
	AndroidDataSource original_data_source = 1;
	AndroidDataSource data_source = 2;
	IosSourceRevision source_revision = 3;
	IosDevice device = 4;
	bool user_entered = 5;
}

message FitnessStatsProto {
	int64 last_accumulated_timestamp_ms = 1;
	FitnessMetricsProto accumulated = 2;
	FitnessMetricsProto pending = 3;
	double player_initial_walk_km = 4;
	double player_total_walk_km = 5;
	int64 player_total_steps = 6;
}

message FitnessUpdateOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Status status = 1;
}

message FitnessUpdateProto {
}

message FortUpdateLatencyTelemetry {
	int32 latency_ms = 1;
	int32 fort_type = 2;
	float distance = 3;
}

message FriendDetailsProto {
	enum OnlineStatus {
		UNSET = 0;
		STATUS_UNKNOWN = 1;
		STATUS_ONLINE = 2;
		STATUS_OFFLINE = 3;
	}

	PlayerSummaryProto player = 1;
	bytes friend_visible_data = 2;
	int32 score = 3;
	bytes data_with_me = 4;
	OnlineStatus online_status = 5;
	int64 created_ms = 6;
	bytes shared_data = 7;
	bytes data_from_me = 8;
	bytes data_to_me = 9;
}

message GADBFCLIIOB {
	message IKFMDFOCJKE {
		EALPMHIPLJK okgfmgpenna = 1;
		repeated KIDNLMAEFOP jnffldadcjf = 2;
	}

	message OPFOKICHAME {
		repeated EALPMHIPLJK gdglokjbccj = 1;
	}

	repeated IKFMDFOCJKE gdglokjbccj = 1;
	repeated OPFOKICHAME pcegnceicfg = 2;
}

message GAMMMHKHAMF {
	DCAECPGGPON nhkgopbkbig = 1;
	int32 inajmmplclj = 2;
	int32 eldlnbikeph = 3;
	int32 aeccoegmccp = 4;
	double ibejfgdbhkl = 5;
}

message GBAINAIIICM {
	bool boogbjpmicn = 1;
	int32 lkmpddmfjci = 2;
	bool bkcipdadfjm = 3;
	bool leifmegajnp = 4;
}

message GBDIMJIPAEJ {
	MBKJCODCAKE kkgpbledhap = 1;
	ECKCGMOEHGH gihcegeaikm = 2;
	PCNMLNDPOML goadafbpnpg = 3;
	IBGGKKNEKOA.IBGFAGKHKGN cdnlplomkgo = 4;
}

message GBKNAMEHHJG {
	int64 igfdgcikjem = 1;
	bool ijkahlajgel = 2;
}

message GCCCBHHOHPH {
	bool bldfjlfhibl = 1;
	GKOJINOCBHK jncfhlblidb = 2;
	int32 nlagpbfkdfe = 3;
	double iilnnpioknn = 4;
	double egddjihjedc = 5;
	int32 dnfmkfbjggh = 6;
	PCNMLNDPOML ofdfkplonph = 7;
	int32 afalhlfjafi = 8;
}

message GCDMKOBNHAN {
	bool kdjgjagmpgc = 1;
	int32 ddjilmjnhji = 2;
	uint64 oidifpamkel = 3;
}

message GCKPNHNLIPH {
	bool fgakffabjlh = 1;
	repeated OFIICCAFHPC ondodgkgmbk = 2;
	int32 lkplddjgaff = 3;
	int32 kcapgahmljc = 4;
	int32 bcmpidgneal = 5;
}

message GCLDBIEJDED {
	int32 daehgpodpgm = 1;
	int32 pdiafnaojnf = 2;
	int32 djppdjdjcfa = 3;
	int32 gcallakmkpo = 4;
}

message GCMEKIEOCBN {
	repeated DMPNAOEDHIF dpmplnjinki = 1;
}

message GCNFAMBDNGE {
	bool plmpdlcoemi = 1;
	bool gcmdfjeakkn = 2;
	bool bndfcologkc = 3;
	bool geljfbikhmo = 4;
	bool jnmimacoahe = 5;
	bool eacmhgncbdj = 6;
	bool fkpgjodmpmp = 7;
	bool ibchdpjfgli = 8;
	bool pjheemhkibl = 9;
	bool kamaoomfbod = 10;
	bool hbgioepmfeo = 11;
	bool knpkpkohmcm = 12;
	bool ibbjgepjejb = 13;
	bool bcghoejmeah = 14;
	bool cdfbpjkkjfg = 15;
	int32 jooaneonmdg = 16;
}

message GDAHCDPEMBJ {
	message LCIBBDHEEIL {
		string mpaekobkjkh = 1;
	}

	message MEFLMLADDDH {
		string gfepbfmmdcc = 1;
		double mbkobmedmnn = 2;
		double icmnhidjpbl = 3;
	}

	string godfillmpmn = 1;
	string edabjienhim = 2;
	string gpchpipjlii = 3;
	repeated MEFLMLADDDH dpheidnonpl = 4;
	LCIBBDHEEIL apjlckgmeha = 5;
	bool akbbodkmmdc = 6;
	int64 jpgjfgbnkic = 7;
	int64 mejjdhdpoae = 8;
	float fbfhhohcdmd = 9;
	float pcbfkjnldje = 10;
	ODAMJPADCEA pbmgnaajdii = 11;
	int64 jfjhgohjlcb = 12;
	int32 ecobmpijhnl = 13;
	int64 clolhfeopbf = 14;
}

message GDCCOJICHJB {
	bytes ekoefomdgpp = 1;
	uint32 cialapddfee = 2;
	bytes hfcjcahaegh = 3;
}

message GDEAHCANAJB {
	int64 bkkcjfmmhpl = 1;
	string ahcgfgkkkdn = 2;
	repeated int32 gdghkinahdb = 3;
	repeated uint64 igfdgcikjem = 4;
}

message GDEOGOBHFAB {
	int64 ajejajmcnfb = 1;
	int32 ljfikmfeabd = 2;
	string aooblimbnga = 3;
}

message GDKIDBEOHIH {
	repeated CMPHBMOBFJJ piddpkfgmod = 1;
	bool dhhpapfpieo = 2;
}

message GDLGMGHEAGD {
	enum KDLEJNLNFHP {
		UNSET = 0;
		SFIDA = 1;
		PALMA = 2;
		WAINA = 3;
	}

	string ehphefgfidk = 1;
	KDLEJNLNFHP oeeanihadeo = 2;
}

message GDLMNDDMIFF {
}

message GEADAHNAJOM {
	bool lmchpigcagh = 1;
	repeated string blgcpjojdbm = 2;
	DCAECPGGPON ekdppoajbnn = 3;
}

message GEAMBDOFEPB {
	float dbjhcnahmbg = 1;
	float oghkpjmabnm = 2;
	float hibibhhkmkf = 3;
	float jipcahkcbfk = 4;
}

message GECPLDJBJMH {
	FFMLICPNAGD kodkneodnai = 1;
	bool dkdnnchkabh = 2;
}

message GEFIDLFOPMI {
	int32 doofaihabfl = 1;
}

message GEJGHLAECCH {
	int32 hbmmfopjbce = 1;
	repeated int32 ephkplfnblk = 2;
	uint32 kdmbdkobmmd = 3;
}

message GEKAGCCNAHH {
	enum OGMJPBGGEOJ {
		NO_END = 0;
		COMBAT_STATE_EXIT = 1;
	}

	OGMJPBGGEOJ ldccnikjabe = 1;
}

message GELBKAFKPLA {
	enum JCOMLJEEHPL {
		UNSET = 0;
		SUCCESS_AD_RECEIVED = 1;
		SUCCESS_NO_ADS_AVAILABLE = 2;
		ERROR_REQUEST_FAILED = 3;
		SUCCESS_GAM_ELIGIBLE = 4;
	}

	JCOMLJEEHPL hhkodmoefol = 1;
	FBPJJHIIEEN kijlbkjoeen = 2;
	FEJOFJDIKPO dcjoeebdaec = 3;
}

message GENAIMNEDNN {
	int32 cfgpbigdmcj = 1;
	string lodkhfiahko = 2;
}

message GEPLKGJPJAP {
	enum GLOFCNILPPO {
		UNSET = 0;
		SUCCESS = 1;
	}

	GLOFCNILPPO hhkodmoefol = 1;
	PAEHCJKJPLP acbpiimiphk = 2;
	double afaefdbhijh = 3;
}

message GFAMKNPGJKB {
	BFABHCMKGCB acifngkjfjh = 1;
	MBJGAPHFDHC neifnabaggg = 2;
}

message GFCPKIIBPFI {
	enum GMNHJJCABAH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	message BBGCNFAPAGD {
		string godfillmpmn = 1;
		string edabjienhim = 2;
		double chhgiikbnma = 3;
		double flaphjheime = 4;
		repeated KMNDLPAOMCC maeghegfibc = 5;
	}

	message KMNDLPAOMCC {
		string mcdggnpebgc = 1;
		string godfillmpmn = 2;
	}

	repeated BBGCNFAPAGD mlenelggcmc = 1;
	GMNHJJCABAH llponloodfk = 2;
}

message GFEHCMJGBPD {
	repeated string lokgkjfoekh = 1;
	bool heicjchdhci = 2;
	bool kjnomnmfhml = 3;
	string onojbnhhmfe = 4;
	bool pklomcfjdhe = 5;
	string pdjimhecpnh = 6;
}

message GFIENAEGANE {
	float nnlihmjgope = 1;
	int32 cdfaijlapfn = 2;
	BFABHCMKGCB bnihkjojlpd = 3;
}

message GFIIOKPGDLO {
	string flnekghfefk = 1;
	string npkpokacccg = 2;
}

message GFLFAGKADLH {
	int32 afncnlapegg = 1;
	int32 mfagmjpidhg = 2;
}

message GFLFCKNAAPM {
	float pagiedaiaeb = 1;
	float afcjopkjmno = 2;
	float bfpaeapecgm = 3;
	float fpfmehjghja = 4;
	float ielhlngankp = 5;
	float dgmmciifggg = 6;
	float ekeaeabhnij = 7;
	int32 cmcibmdjphg = 8;
	float ckdfjeeglhb = 9;
	int32 kbiagolaiho = 10;
	float nblodnpdfkh = 11;
	int32 jofmeffeloc = 12;
	int32 iajlpmmijec = 13;
	int32 pbdeolilplk = 14;
	float hpdioiofmen = 15;
	int32 bfmibnmogcm = 16;
	float ejjkibjlamh = 17;
	float mobakbjcbld = 18;
	float ikebajciopd = 19;
}

message GFPDPBGLODP {
	DCAECPGGPON nhkgopbkbig = 1;
	int32 opjphonjbna = 2;
	repeated int32 kmpdmmfblcj = 3;
	repeated ICOBCGKIEGE kcnohhoolae = 4;
	bool cdanjeoicjj = 5;
	NCMGABAEPNB keeibdpnbfh = 6;
	string blgcpjojdbm = 7;
	bool ocahfceabgd = 8;
}

message GGANGMBDFKM {
	BFABHCMKGCB acifngkjfjh = 1;
	uint64 pkljdiaplkc = 2;
	string albfofbkfle = 3;
}

message GGBFCBGNBEP {
	enum FPHMGCGMEEE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	FPHMGCGMEEE llponloodfk = 1;
}

message GGFOPOKLIHG {
	bool giekkagakei = 1;
	bool blaanlpjkho = 2;
	bool hdondlmefmm = 3;
	bool adehinpecnm = 4;
}

message GGJPLEFPDDL {
	repeated FJEONGCOEAP eidbnehpbhi = 1;
}

message GGLKAOMAMEB {
	bool ffobbmnfjlc = 1;
}

message GGPMEAEIPLK {
	enum DIBNGLINIAL {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		FAILURE_ELIGIBILITY = 3;
		FAILURE_GIFT_NOT_FOUND = 4;
	}

	DIBNGLINIAL llponloodfk = 1;
	IGBJMLOPACK aapbgmpbflo = 2;
}

message GHBBBHJOGJA {
	enum AHOLOEBEFON {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_DOES_NOT_EXIST = 3;
		ERROR_GIFT_NOT_AVAILABLE = 4;
		ERROR_GIFT_ALREADY_SENT_TODAY = 5;
		ERROR_PLAYER_HAS_UNOPENED_GIFT = 6;
	}

	AHOLOEBEFON hhkodmoefol = 1;
}

message GHHBCHMFOAA {
	string edabjienhim = 1;
	string kdhocdmlffi = 2;
	string mpaekobkjkh = 3;
	double chhgiikbnma = 4;
	double flaphjheime = 5;
	string gfepbfmmdcc = 6;
}

message GHJMFFCFIPM {
	enum MLMLBBFBBMA {
		UNDEFINED = 0;
		TIME_TO_MAP = 1;
		LOGO_SCREEN_TIME = 2;
		MAIN_SCENE_LOAD_TIME = 3;
		WAIT_FOR_AUTH = 4;
		INIT_REMOTE_CONFIG_VERSIONS = 5;
		INIT_BUNDLE_DIGEST = 6;
		INIT_GMT = 7;
		DOWNLOAD_I18N = 8;
		DOWNLOAD_GLOBAL_ASSETS = 9;
		REGISTER_PUSH_NOTIFICATION = 10;
		INITIALIZE_UPSIGHT = 11;
		INITIALIZE_CRITTERCISM = 12;
		LOGIN_VERSION_CHECK = 13;
		LOGIN_GET_PLAYER = 14;
		LOGIN_AUTHENTICATION = 15;
		MODAL_TIME = 16;
		INITIALIZE_ADJUST = 17;
		INITIALIZE_FIREBASE = 20;
		INITIALIZE_CRASHLYTICS = 21;
		INITIALIZE_BRAZE = 22;
		DOWNLOAD_BOOT_ADDRESSABLES = 23;
	}

	PlatformMetricData dcngfefebkm = 1;
	MLMLBBFBBMA ijpadddbnid = 2;
}

message GHJPJPAHGIF {
	CKDLIAJECPL.ILOMJAHMKBJ hhkodmoefol = 1;
}

message GIAECOIHMJD {
	enum ILOODGKLOAM {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_GYM_NOT_FOUND = 2;
		ERROR_RAID_UNAVAILABLE = 3;
		ERROR_RAID_COMPLETED = 4;
		ERROR_INVALID_ATTACKERS = 5;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 6;
		ERROR_NOT_IN_RANGE = 7;
		ERROR_POI_INACCESSIBLE = 8;
		ERROR_LOBBY_NOT_FOUND = 9;
		ERROR_NO_TICKET = 10;
		ERROR_INVALID_SERVER = 11;
		ERROR_NEVER_JOINED_BATTLE = 12;
	}

	ILOODGKLOAM hhkodmoefol = 1;
	KLGNLFGLMEM hdlfefpaljd = 2;
}

message GIFOLDGPPGP {
	int32 hbmmfopjbce = 1;
	OMDCMKIAADD ldccnikjabe = 2;
	repeated int32 ephkplfnblk = 3;
}

message GIKDFLAJIDF {
	BFABHCMKGCB acifngkjfjh = 1;
	int32 bfpedmlobmk = 2;
	int32 clbmpngkhbm = 3;
}

message GJAOMGNNMKC {
	int32 ihogmloilmh = 1;
	int32 ebhklopjhlk = 2;
	int32 jbimgjclkbh = 3;
	int64 bhlmpafdiog = 4;
}

message GJDKKBMDCNB {
	repeated OGMPIKOPPBG njjhleanche = 1;
	repeated float bfjnihaamhf = 2;
	float moajbbdpjig = 3;
	float jcjoaaopnol = 4;
	float igknmcbabne = 5;
	int32 cpmimdklgpj = 6;
	int64 dpjccnbhlfb = 7;
	int64 hpgdglnbalk = 8;
	int32 hnpbcjfokpe = 9;
}

message GJDPGKEOLKO {
	repeated uint64 aaiobpipigj = 1;
}

message GJFBNOPGACK {
	message FFHLCEMOGMK {
		string flnekghfefk = 1;
		int32 ghnmeaaiapf = 2;
	}

	repeated FFHLCEMOGMK jljojdfoaob = 1;
}

message GJHNNHNENIM {
	int32 gbdodmegklo = 1;
	int32 lcohadjjnfo = 2;
	int32 bjbdgocakop = 3;
	int32 ahmjkeeadie = 4;
	double ggkodafpdbh = 5;
	double kkkijfbndbp = 6;
	double kgeeonjppen = 7;
	float chgmapplhnf = 8;
	OBICLGNCNFN lbanlicclch = 9;
	int32 ojpmldacnin = 10;
	int32 ffhligmhebl = 11;
	int32 keibbdjbggm = 12;
	bool nmodolkmhli = 13;
	int32 goebmfcpbil = 14;
}

message GJIADOOJHOL {
	string ociljkfohmp = 1;
	int32 eempafidjmn = 2;
	int32 fkeehppinnf = 3;
	string ciimhfmhlki = 4;
	int64 pdniidnpeoi = 5;
}

message GKAANCFCIEE {
	string bajolmeabfd = 1;
	int32 lgclomekpol = 2;
}

message GKCBJLMEDEJ {
	enum JNFEHBKNOOC {
		NONE = 0;
		HALLOWEEN = 1;
		HOLIDAY = 2;
		ROCKET = 3;
	}

	JNFEHBKNOOC lieeiheaeel = 1;
	string oaebkkifhhl = 2;
	string acmdohglkck = 3;
}

message GKKABOBADNB {
	string gfepbfmmdcc = 1;
}

message GKLMOIKOIKE {
	string nbpjjkhmncc = 1;
	uint64 pkljdiaplkc = 2;
	int32 jpcbmbkgkkb = 3;
	int64 iobgcgmbkod = 4;
	double chhgiikbnma = 5;
	double flaphjheime = 6;
	IBGGKKNEKOA nnnmmlpnchp = 7;
}

message GKLNKCNCPHP {
	string edabjienhim = 1;
	string gpchpipjlii = 2;
	repeated BCPANMIIGLE jffjplocpkc = 3;
	bool akbbodkmmdc = 4;
	bool ldlgfmlcogm = 5;
	DKCODDJAKLM apjlckgmeha = 6;
	int32 idamidghkpg = 7;
}

message GLDKJOBPOPF {
	bool hapcobdopeg = 1;
	bool lkelcjcncnn = 2;
}

message GLEAPBEEECF {
	bool fjmkodjkhna = 1;
}

message GLFDEFBJOFH {
	int32 afncnlapegg = 1;
	int32 mfagmjpidhg = 2;
	int32 egnpidgjifn = 3;
	int32 lljagdghpha = 4;
	float knibjlkghbk = 5;
	float fcjbhkcgopj = 6;
	int32 ipldfjenfij = 7;
}

message GLFGPBIDOFP {
	string lkheohlgndb = 1;
}

message GLIAEDKKKFK {
	enum DMHHIBDGCDK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
	}

	DMHHIBDGCDK hhkodmoefol = 1;
	CLLOCMAOPDJ dmkmeeheamb = 2;
}

message GLJMAHBEFHP {
	NECCKHDNPKM pgdgeobanmh = 1;
	int32 jgdpdgjemkd = 2;
}

message GMDGFNKIHDL {
	uint32 ehddfdnljdn = 1;
}

message GMDLJFGGPIN {
	int64 podlmhfedmd = 1;
	int64 aceglgipkaa = 2;
	int64 gijgnadpbje = 3;
}

message GMLFIPDNHDN {
	repeated int32 ljafcllohfl = 1;
	float fnbmecbegad = 2;
	float fgkibehdnfj = 3;
	int32 nfmacmknmfd = 4;
	int32 ipnbbkgjdbf = 5;
	int32 iengokmpfgo = 6;
	int32 jdplkcknmme = 7;
}

message GMMBPCIPPNH {
	enum CNJLHILOIMP {
		UNSET = 0;
		MAP_DEPLOY = 1;
		ENCOUNTER_CAMEO = 2;
		EMOTION_INDICATOR = 3;
		PICK_UP_CONSUMABLES = 4;
		PICK_UP_SOUVENIRS = 5;
		FIND_ATTRACTIVE_POIS = 6;
		BEST_BUDDY_ASSET = 7;
		CP_BOOST = 8;
	}

	FFMLICPNAGD jeaggaghjic = 1;
	int32 ajnfenomfed = 2;
	repeated CNJLHILOIMP fobgbfkphbp = 3;
}

message GMNDELDPDEK {
	uint32 emlfacflibf = 1;
	uint32 cindjegidnp = 2;
}

message GMNHHKBGKFM {
	enum DBFBNCBBGJP {
		INVALID_VASA_CLIENT_ACTION = 0;
		COLLECT_ADID = 8000;
	}

}

message GMNNCFKHKEA {
	enum IODMFKLOGPH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_COMBAT_STATE = 2;
		ERROR_COMBAT_NOT_FOUND = 3;
		ERROR_PLAYER_QUIT = 4;
	}

	message DOHACNLFBIK {
		string ngggdbafemc = 1;
		string blgcpjojdbm = 2;
	}

	IODMFKLOGPH hhkodmoefol = 1;
	LKJIPKPOENA mmapjdfoeej = 2;
	PAEHCJKJPLP acbpiimiphk = 3;
	CPGDIKHDJFK jnmafifpnjg = 4;
	int32 icceabojoih = 5;
	LIPCKNBPFMD bdphoiacbki = 6;
	DOHACNLFBIK mdkplkjiflp = 7;
}

message GMOIPIMHCGF {
	enum JFJOKOJMMIA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PHOTOBOMB_NOT_FOUND = 2;
		ERROR_PHOTOBOMB_ALREADY_CONFIRMED = 3;
		ERROR_UNKNOWN = 4;
	}

	JFJOKOJMMIA llponloodfk = 1;
}

message GNADEEPKNPK {
	enum NGOEGHPEHDF {
		ROUTE_BADGE_UNSET = 0;
		ROUTE_BADGE_BRONZE = 1;
		ROUTE_BADGE_SILVER = 2;
		ROUTE_BADGE_GOLD = 3;
	}

	message IIKNBEAAMKD {
		string mgeiaokbdbi = 1;
		string mpaekobkjkh = 2;
		KHOFOOOHEMH hgicglmfikc = 3;
	}

	string bajolmeabfd = 1;
	ODAMJPADCEA pbmgnaajdii = 2;
	int32 ecobmpijhnl = 3;
	int64 kiaphncbfgn = 4;
	repeated KHOFOOOHEMH ahleccfgckh = 5;
	string npfenpeghnd = 6;
	string njphihmdmbd = 7;
	string fabbmghlabl = 8;
	string lnbjncaedlo = 9;
	int64 jfjhgohjlcb = 10;
	repeated IIKNBEAAMKD dekjhhflleg = 11;
	int64 pmmfpcimkpb = 12;
	GameplayWeatherProto.WeatherCondition cbphcefpnnm = 13;
	NGOEGHPEHDF dekfbifncem = 14;
	double meelbmkpppj = 15;
	double daoffindkme = 16;
	int64 mejjdhdpoae = 17;
}

message GNELOIEEOJB {
	int32 kalaeioefcb = 1;
	int32 omoimaonoje = 2;
	string mpdnijknljo = 3;
	int32 ejnbnefbnfh = 4;
}

message GNGIPAFKCDC {
	enum LEOLHKMBLJJ {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_POKEMON_NOT_IN_INVENTORY = 4;
		ERROR_NOT_ELIGIBLE_LEAGUE = 5;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 6;
		ERROR_OPPONENT_NOT_IN_RANGE = 7;
		ERROR_ALREADY_TIMEDOUT = 8;
		ERROR_ALREADY_CANCELLED = 9;
		ERROR_ACCESS_DENIED = 10;
	}

	LEOLHKMBLJJ hhkodmoefol = 1;
	JDHOCBHIAMN bniaebpgnal = 2;
}

message GNGOAGJGFHB {
	message FIBNEKMELFG {
		enum ELOHPBGJAAC {
			UNSET = 0;
			LEVEL_UP = 1;
		}

		ELOHPBGJAAC pojamgbiihj = 1;
		JNKJIAMIHJH hehhapknalf = 2;
	}

	repeated FIBNEKMELFG ncjffhikfae = 1;
}

message GNIIPHJGONM {
	string ncmogglbdib = 1;
	string lcdcabfggld = 2;
	int32 lokdeelmeni = 3;
	PCNMLNDPOML igfdgcikjem = 4;
}

message GNKEIIFKIBL {
	int32 fbkodemlfon = 1;
	int32 dlineihhhpe = 2;
}

message GNLKPNIJJAG {
	bool gpegfplneff = 1;
	bool hmighapcefn = 2;
}

message GNLOJIONGPN {
	bool plmpdlcoemi = 1;
	bool efgikdnfobb = 2;
	bool fljihemblln = 3;
}

message GOBLBKAHHFO {
	enum ICFKDOGAKMA {
		UNSET = 0;
		NO_ACTIVITY = 1;
		ACTIVITY_POKEMON_TRADE = 2;
		ACTIVITY_POKEMON_COMPARE = 3;
		ACTIVITY_GIFT_TRADE = 4;
	}

}

message GOEHDKEHDJP {
	enum HDGKIDEGKHA {
		UNSET = 0;
		ERROR = 1;
		VALID = 2;
		EXPIRED = 3;
	}

	message ANICJCPEEME {
		HDGKIDEGKHA hhkodmoefol = 1;
		FCFGINLEOLP ncacpiojjka = 2;
		string mcdggnpebgc = 3;
	}

	repeated ANICJCPEEME nffkcgngnjm = 1;
}

message GOGOPPPLCCH {
	int32 dnkiejmlpgo = 1;
	int32 mglmglgfkap = 2;
}

message GOJPFHBOHNM {
	repeated uint64 aaiobpipigj = 1;
}

message GOMOJLIHBBA {
	GBCIHGGJMLI joobkfellmc = 1;
	int32 mloobcecnnf = 2;
}

message GPDFFNGFJIP {
	enum BOOKMHAEIAD {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_BAG_FULL = 3;
		ERROR_PLAYER_LIMIT_REACHED = 4;
		ERROR_GIFT_DOES_NOT_EXIST = 5;
		ERROR_FRIEND_NOT_FOUND = 6;
		ERROR_INVALID_PLAYER_ID = 7;
		ERROR_FRIEND_UPDATE = 8;
	}

	BOOKMHAEIAD hhkodmoefol = 1;
	PAEHCJKJPLP ojgckfiagpm = 2;
	NHLCGNMFNOM mclknpmojhc = 3;
	NABADAFLIPI hcfclimmoca = 4;
	JNPCNHMKDMB fcdigeponpf = 5;
}

message GPEDJHHGAOC {
	ALOCBADNLJC.IFINICEPNLK llponloodfk = 1;
}

message GPLPFPHJGNJ {
	enum KJHGKBEHBPP {
		UNSET = 0;
		INITIALIZATION = 1;
		ACCUMULATION = 2;
	}

	KJHGKBEHBPP ehcjfpjbhlm = 1;
	int64 ehmhemllaog = 2;
	PAFGGEBNACL jjnjohoooba = 3;
}

message GameClientPhotoGalleryPoiImageProto {
	string image_id = 1;
	string poi_id = 2;
	string submitter_codename = 3;
	string image_url = 4;
	int64 creation_timestamp_ms = 5;
	bool has_player_voted = 6;
	int32 num_votes_from_game = 7;
}

message GameItemContentProto {
	string type = 1;
	int32 quantity = 2;
}

message GameplayWeatherProto {
	enum WeatherCondition {
		NONE = 0;
		CLEAR = 1;
		RAINY = 2;
		PARTLY_CLOUDY = 3;
		OVERCAST = 4;
		WINDY = 5;
		SNOW = 6;
		FOG = 7;
	}

}

message GcmToken {
	string registration_id = 1;
}

message GenerateGmapSignedUrlOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_NOT_VALID = 2;
		ERROR_RATE_LIMITED = 3;
		ERROR_MISSING_INPUT = 4;
		ERROR_UNKNOWN = 5;
	}

	Result result = 1;
	string signed_url = 2;
}

message GenerateGmapSignedUrlProto {
	double latitude = 1;
	double longitude = 2;
	int32 width = 3;
	int32 height = 4;
	int32 zoom = 5;
	string language_code = 6;
	string country_code = 7;
	string map_style = 8;
	string map_type = 9;
	string icon_params = 10;
}

message GenericClickTelemetry {
	GenericClickTelemetryIds generic_click_id = 1;
}

message GeodataServiceGameClientPoiProto {
	string poi_id = 1;
	string title = 2;
	string description = 3;
	LocationE6Proto location = 4;
	string image_url = 5;
	bool is_in_game = 6;
}

message Geometry {
	oneof Geometry {
		PointList points = 1;
		PolylineList polylines = 2;
		TriangleList triangles = 3;
	}

}

message GetARMappingSettingsOutProto {
	bool is_client_scan_validation_enabled = 1;
	repeated string client_scan_validation_blocked_os = 2;
	repeated string client_scan_validation_blocked_device_id = 3;
}

message GetARMappingSettingsProto {
}

message GetAccountSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
	AccountSettingsProto settings = 2;
}

message GetAccountSettingsProto {
}

message GetActiveSubscriptionsRequestProto {
}

message GetActiveSubscriptionsResponseProto {
	repeated InAppPurchaseSubscriptionInfo subscription = 1;
}

message GetAdventureSyncFitnessReportRequestProto {
	int32 num_of_days = 1;
	int32 num_of_weeks = 2;
}

message GetAdventureSyncFitnessReportResponseProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_NOT_FOUND = 2;
		ERROR_RECORDS_NOT_FOUND = 3;
		ERROR_INVALID_WINDOW = 4;
		ERROR_UNKNOWN = 5;
	}

	Status status = 1;
	int64 week_reset_timestamp_since_monday_ms = 2;
}

message GetAdventureSyncSettingsRequestProto {
}

message GetAdventureSyncSettingsResponseProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
	}

	Status status = 1;
	AdventureSyncSettingsProto adventure_sync_settings = 2;
}

message GetAvailableSkusAndBalancesOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Status status = 1;
	repeated AvailableSkuProto available_sku = 2;
	repeated CurrencyQuantityProto balance = 3;
	string player_token = 4;
}

message GetAvailableSkusAndBalancesProto {
}

message GetAvailableSubmissionsOutProto {
	int32 submissions_left = 1;
	int32 min_player_level = 2;
	bool has_valid_email = 3;
	bool is_feature_enabled = 4;
	int64 time_window_for_submissions_limit_ms = 5;
	int32 max_poi_distance_in_meters = 6;
	repeated AvailableSubmissionsPerSubmissionType availability_result_per_type = 7;
	int32 max_poi_location_edit_move_distance_meters = 8;
	bool is_upload_later_enabled = 9;
	string category_cloud_storage_directory_path = 10;
	bool has_wayfarer_account = 11;
	bool passed_wayfarer_quiz = 12;
	bool is_poi_submission_category_enabled = 13;
}

message GetAvailableSubmissionsProto {
	repeated PlayerSubmissionTypeProto submission_types = 1;
}

message GetClientFeatureFlagsRequest {
	string country_code = 1;
}

message GetClientFeatureFlagsResponse {
	SocialClientFeatures feature_flags = 1;
	SocialClientGlobalSettings global_settings = 2;
}

message GetContactListInfoRequest {
}

message GetContactListInfoResponse {
	bool has_new_account_matching = 1;
}

message GetFacebookFriendListOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FACEBOOK_API = 3;
		ERROR_FACEBOOK_PERMISSIONS = 4;
		ERROR_NO_FACEBOOK_ID = 5;
		ERROR_PLAYER_NOT_FOUND = 6;
	}

	message FacebookFriendProto {
		PlayerSummaryProto player = 1;
		string full_name = 2;
	}

	Result result = 1;
	repeated FacebookFriendProto friend = 2;
	string next_cursor = 3;
}

message GetFacebookFriendListProto {
	string fb_access_token = 1;
	int32 limit = 2;
	string cursor = 3;
}

message GetFitnessReportOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_NOT_FOUND = 2;
		ERROR_RECORDS_NOT_FOUND = 3;
		ERROR_INVALID_WINDOW = 4;
		ERROR_UNKNOWN = 5;
	}

	Status status = 1;
	repeated FitnessReportProto weekly_reports = 2;
	int64 week_reset_timestamp_since_monday_ms = 3;
}

message GetFitnessReportProto {
	int32 num_of_days = 1;
	int32 num_of_weeks = 2;
	int32 num_of_hours = 3;
}

message GetFriendCodeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	Result result = 1;
	string friend_code = 2;
}

message GetFriendCodeProto {
	bool force_generate_code = 1;
}

message GetFriendDetailsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		EXCEEDS_MAX_PLAYERS_PER_QUERY = 3;
	}

	message DebugProto {
		message Callee {
			string player_id = 1;
			string nia_account_id = 2;
		}

		int32 fetched_from_db = 1;
		int32 fetched_from_fanout = 2;
		int32 fetched_from_player_mapper = 3;
		int32 fetched_from_status_cache = 4;
		int32 failed_to_fetch = 5;
		int32 fetched_from_same_server_as_player = 6;
	}

	Result result = 1;
	repeated FriendDetailsProto friend = 2;
	DebugProto friend_details_debug_info = 3;
}

message GetFriendDetailsProto {
	repeated string player_id = 1;
}

message GetFriendDetailsRequest {
	repeated string friend_id = 1;
	SocialClientFeatures.CrossGameSocialClientSettingsProto.FeatureType feature = 2;
}

message GetFriendDetailsResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_EXCEEDS_MAX_FRIENDS_PER_QUERY = 3;
		ERROR_FEATURE_DISABLED = 4;
	}

	message FriendDetailsEntryProto {
		message OutgoingGameInviteStatus {
			string app_key = 1;
			SocialV2Enum.InvitationStatus invitation_status = 2;
		}

		string player_id = 1;
		ProfileDetailsProto profile = 2;
		PlayerStatusDetailsProto player_status = 3;
		FriendDetailsProto calling_game_data = 4;
		repeated OutgoingGameInviteStatus outgoing_game_invite_status = 5;
		repeated string dismissed_outgoing_game_invite_app_keys = 6;
		string nia_account_id = 7;
	}

	message PlayerStatusDetailsProto {
		enum Result {
			UNSET = 0;
			SUCCESS = 1;
			ERROR_UNKNOWN = 2;
			ERROR_STATUS_UNKNOWN = 3;
			ERROR_STALE_DATA = 4;
		}

		Result result = 1;
		SocialV2Enum.OnlineStatus online_status = 2;
		string last_played_app_key = 3;
	}

	Result result = 1;
	repeated FriendDetailsEntryProto friend_details = 2;
}

message GetFriendsListOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	message FriendProto {
		enum OnlineStatus {
			UNSET = 0;
			STATUS_UNKNOWN = 1;
			STATUS_ONLINE = 2;
			STATUS_OFFLINE = 3;
		}

		string player_id = 1;
		string codename = 2;
		string team = 3;
		int32 score = 4;
		bytes data_with_me = 5;
		int64 version = 6;
		int64 created_ms = 7;
		string fb_user_id = 8;
		bool is_facebook_friendship = 9;
		SharedFriendshipProto shared_data = 10;
		OnlineStatus online_status = 11;
		string nia_account_id = 12;
	}

	message SharedFriendshipProto {
		bytes shared_data = 1;
		int64 version = 2;
		bytes data_from_me = 3;
		bytes data_to_me = 4;
	}

	Result result = 1;
	repeated FriendProto friend = 2;
}

message GetFriendsListProto {
}

message GetGmapSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_MISSING_CONFIG = 3;
		ERROR_NO_UNIQUE_ID = 4;
	}

	Result result = 1;
	string gmap_template_url = 2;
	int32 max_poi_distance_in_meters = 3;
	int32 min_zoom = 4;
	int32 max_zoom = 5;
}

message GetGmapSettingsProto {
}

message GetGrapeshotUploadUrlOutProto {
	enum Status {
		UNSET = 0;
		FAILURE = 1;
		SUCCESS = 2;
		MISSING_FILE_CONTEXTS = 3;
		DUPLICATE_FILE_CONTEXT = 4;
		MISSING_SUBMISSION_TYPE = 5;
		MISSING_SUBMISSION_ID = 6;
	}

	Status status = 1;
	map<string, GrapeshotUploadingDataProto> file_context_to_grapeshot_data = 2;
}

message GetGrapeshotUploadUrlProto {
	string submission_id = 1;
	repeated string file_upload_context = 2;
}

message GetImageGallerySettingsOutProto {
	bool is_image_gallery_enabled = 1;
	int32 max_periodic_image_loaded_count = 2;
}

message GetImageGallerySettingsProto {
}

message GetImagesForPoiOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		POI_NOT_FOUND = 2;
		INVALID_REQUEST = 3;
	}

	Status status = 1;
	repeated GameClientPhotoGalleryPoiImageProto photo_gallery_poi_images = 2;
}

message GetImagesForPoiProto {
	string poi_id = 1;
}

message GetInboxV2Proto {
	bool is_history = 1;
	bool is_reverse = 2;
	int64 not_before_ms = 3;
}

message GetIncomingFriendInvitesOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
	repeated IncomingFriendInviteDisplayProto invites = 2;
}

message GetIncomingFriendInvitesProto {
}

message GetIncomingGameInvitesRequest {
}

message GetIncomingGameInvitesResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FEATURE_DISABLED = 3;
	}

	message IncomingGameInvite {
		enum Status {
			UNSET = 0;
			NEW = 1;
			SEEN = 2;
		}

		string app_key = 1;
		repeated string friend_profile_names = 2;
		Status status = 3;
	}

	repeated IncomingGameInvite invites = 1;
	Result result = 2;
}

message GetInventoryProto {
	int64 timestamp_millis = 1;
}

message GetInventoryResponseProto {
	bool success = 1;
	InventoryDeltaProto inventory_delta = 2;
}

message GetMapObjectsTriggerTelemetry {
	enum TriggerType {
		UNSET = 0;
		TIME = 1;
		SPACE = 2;
	}

	TriggerType trigger_type = 1;
}

message GetNotificationInboxOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Result result = 1;
	ClientInbox inbox = 2;
}

message GetOutgoingFriendInvitesOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
}

message GetOutgoingFriendInvitesProto {
}

message GetPlayerSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
	}

	Result result = 1;
	PlayerSettingsProto settings = 2;
}

message GetPlayerSettingsProto {
}

message GetPlayerSubmissionValidationSettingsOutProto {
	repeated string banned_metadata_text = 1;
}

message GetPlayerSubmissionValidationSettingsProto {
}

message GetPoisInRadiusOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		INTERNAL_ERROR = 2;
	}

	Status status = 1;
	repeated GeodataServiceGameClientPoiProto pois = 2;
}

message GetPoisInRadiusProto {
	LocationE6Proto location = 1;
}

message GetProfileRequest {
	string player_id = 1;
	string nia_account_id = 2;
}

message GetProfileResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_NOT_FRIEND = 3;
	}

	message PlayerProfileDetailsProto {
		string app_key = 1;
		string codename = 2;
		string faction = 3;
		int32 level = 4;
		int64 experience = 5;
		int64 signed_up_timestamp_ms = 6;
		int64 last_played_timestamp_ms = 7;
		double player_total_walk_km = 8;
	}

	Result result = 1;
	ProfileDetailsProto profile_details = 2;
	repeated PlayerProfileDetailsProto player_profile_details = 3;
}

message GetUploadUrlOutProto {
	enum Status {
		UNSET = 0;
		FAILURES = 1;
		SUCCESS = 2;
		MISSING_IMAGE_CONTEXTS = 3;
		DUPLICATE_IMAGE_CONTEXTS = 4;
	}

	Status status = 1;
	string signed_url = 2;
	string supporting_image_signed_url = 3;
	map<string, string> context_signed_urls = 4;
}

message GetUploadUrlProto {
	string user_id = 1;
	string game_unique_id = 2;
	PlayerSubmissionTypeProto submission_type = 3;
	string submission_id = 4;
	repeated string image_contexts = 5;
}

message GmmSettings {
	repeated LayerRule layer_rules = 1;
}

message GoogleToken {
	string id_token = 1;
}

message GrapeshotAuthenticationDataProto {
	string authorization = 1;
	string date = 2;
}

message GrapeshotChunkDataProto {
	string chunk_file_path = 1;
	uint32 chunk_number = 2;
	GrapeshotAuthenticationDataProto upload_authentication = 3;
	GrapeshotAuthenticationDataProto delete_authentication = 4;
}

message GrapeshotComposeDataProto {
	string target_file_path = 1;
	GrapeshotAuthenticationDataProto authentication = 2;
	string hash = 3;
}

message GrapeshotUploadingDataProto {
	repeated GrapeshotChunkDataProto chunk_data = 1;
	GrapeshotComposeDataProto compose_data = 2;
	string gcs_bucket = 3;
	int32 number_of_chunks = 4;
}

message HABCHLHGBBM {
	string ahcgfgkkkdn = 1;
	string dileendfikh = 2;
	repeated BKMJKOAKFIM enimilkdmhc = 3;
	BKMJKOAKFIM pkmkkebhfcc = 4;
	double icnndjclaef = 5;
	double ogmopfkhcpa = 6;
}

message HADCKNLNCJL {
}

message HAHPDNIIAEC {
	int32 jimooejklmo = 1;
	repeated IDJMLGDHNHI lojbhbgllgp = 2;
	float ddcldfpkomf = 3;
	int32 kgjcfamconc = 4;
	int32 bkelfngcadm = 5;
	int32 obdggndhhkb = 6;
	int32 cpfkalengef = 7;
	repeated HPCKAEDJFNL ajfcgljlngg = 8;
	float lgjahigmmke = 9;
}

message HAIEMEKNGED {
	int32 hiinemaebde = 1;
	int64 hapleckidoo = 2;
}

message HBBBLDBAHBP {
	enum KJPODFFHPKH {
		UNSET = 0;
		REGULAR_IN_POKEDEX = 1;
		SPECIAL_IN_POKEDEX = 2;
		REGULAR_NON_POKEDEX = 3;
		REGIONAL_NON_POKEDEX = 4;
		FORM_NON_POKEDEX = 5;
		LEGENDARY_NON_POKEDEX = 6;
		SHINY_NON_POKEDEX = 7;
	}

	int32 panjhpbdkkg = 1;
	int32 akigegngoad = 2;
	float lamnpgbjkeg = 3;
	int32 mgelpfgmghe = 4;
	repeated KJPODFFHPKH hnioemljane = 5;
	float nknijbbeobi = 6;
}

message HBBLPACJFLL {
	DCAECPGGPON pakpaldfhhg = 1;
}

message HBDPBKIJBBF {
	GMICNCPLCMG ngfdagnmgpe = 1;
	NKBFOKJALNM hehhapknalf = 2;
	float dhdlfipghid = 3;
	float mlfeapceamf = 4;
	IDJMLGDHNHI jmiieopagge = 5;
	IDJMLGDHNHI egpdfgaoohf = 6;
	float jopbjpohppj = 7;
	PLABKMADJNB knhkknnhgcj = 8;
	LPCGPBCNJCK pplnkaogbki = 9;
	float ogpindggdgd = 10;
	float ilmbonhpcee = 11;
	repeated float mfhjcaigihe = 12;
	repeated float hgihdfhpbgj = 13;
	repeated float hhjofedpcba = 14;
	float bpjcajldpcg = 15;
	BCFOPFOFKHO eacknmdcalo = 16;
}

message HBGFFJKHFIK {
	bool mcdjhlpiceh = 1;
	string nbfgaecjlgm = 2;
}

message HBGLFBGMBDH {
	string mhjggmcnnbi = 1;
	int64 iblpbmeaann = 2;
	double chhgiikbnma = 3;
	double flaphjheime = 4;
}

message HCIDCHIIIFB {
	bool chaecmmpaag = 1;
}

message HCIKALDKIAL {
	uint64 pkljdiaplkc = 1;
}

message HCLDOPDIFHO {
	repeated IJOIPMJCHKC acifngkjfjh = 4;
}

message HCMIODBLEOB {
	repeated string blgcpjojdbm = 1;
}

message HDPCEHMGHOO {
	message LAKKCMDJDEC {
		int32 fomdmlbpogh = 1;
		int32 epongcjlgki = 2;
	}

	LAKKCMDJDEC kobihlokjol = 1;
	LAKKCMDJDEC cimkandbaph = 2;
	int32 ffkbgpcjmip = 3;
	int32 ghgglofmmfi = 4;
}

message HEKBKGNBCDJ {
	float pccjfkdalpc = 1;
	int32 pcolbhbalgl = 2;
	int32 lkmidkhlnph = 3;
	int32 bbfjemaiioh = 4;
	int32 mdpagejmooj = 5;
	int32 pllemmampco = 6;
}

message HENPFBCBAIA {
	enum PHCINBKMBNH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PAIRING = 2;
		ERROR_UNKNOWN = 3;
	}

	PHCINBKMBNH llponloodfk = 1;
}

message HFINPEBGOGH {
	enum DLNCMOHOIAE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_NICKNAME = 2;
		ERROR_POKEMON_NOT_FOUND = 3;
		ERROR_POKEMON_IS_EGG = 4;
		ERROR_FILTERED_NICKNAME = 5;
		ERROR_EXCEEDED_CHANGE_LIMIT = 6;
	}

	DLNCMOHOIAE hhkodmoefol = 1;
}

message HFLNNCDMJHL {
	bool kkkickccomb = 1;
	uint32 ficmgmlbhmp = 2;
}

message HFNFBOBEFAH {
	bool cpmllocmggk = 1;
	int32 pblpladfgog = 2;
	bool gmjolhilnll = 3;
}

message HGNMPLMCEOJ {
	bool bgcjhijclfj = 1;
	int32 cajogcmfghg = 2;
	int32 jclepajelel = 3;
	int32 dlcegniidlp = 4;
	bool chhhcjihjhl = 5;
	bool fenlgohghgi = 6;
	bool ehnllfiajfo = 7;
	int32 ebgajdgialk = 8;
	bool idamkendhpp = 9;
	bool emcbcmiaccd = 11;
	bool icfpmkikojb = 12;
	bool pgogncegdff = 13;
	BBKKIBGFOCJ hfbfkdgiadn = 14;
	bool mmkhbhpdbcg = 15;
}

message HGPAFOGAIBG {
	BFABHCMKGCB acifngkjfjh = 1;
	int32 bfpedmlobmk = 2;
}

message HGPIPGKNGDN {
	enum EAELKPDFELA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_DISPLAY = 2;
	}

	EAELKPDFELA llponloodfk = 1;
	repeated BGOGOGOMLBN nliiinmcdoh = 2;
	repeated BGOGOGOMLBN ooifneknikc = 3;
}

message HHALGOLABMP {
}

message HIAGOHOEAMD {
	string ljknacljjeb = 1;
}

message HIBECHLDBKI {
	string lkheohlgndb = 1;
	uint64 igfdgcikjem = 2;
}

message HIFCCCGBLCG {
	string oeeanihadeo = 1;
	string biecjgcjikh = 2;
}

message HIFLMAFJCPC {
}

message HIHPFNLPBLL {
	enum HGIOEPMKLKJ {
		UNSET = 0;
		SUCCESS = 1;
		ALREADY_FINISHED_FOR_TODAY = 2;
		MISSED_FOR_TODAY = 3;
		NO_POKEMON_AVAILABLE = 4;
		DISABLED = 5;
	}

	HGIOEPMKLKJ hhkodmoefol = 1;
	PCNMLNDPOML lahokpiipjb = 2;
	double ddpmccoobod = 3;
	double jcolbanhgpk = 4;
	string komegjnnkib = 5;
	uint64 pkljdiaplkc = 6;
	int64 ncbidhhllff = 7;
	IBGGKKNEKOA nnnmmlpnchp = 8;
}

message HIHPHBJMMBJ {
	GKOJINOCBHK dfigdficcmj = 1;
	int32 elngbnpheoh = 2;
}

message HIIJKCFDNKO {
	oneof JGJBKPEBCGO {
		FGMCAKFHOBJ pokemon_trade_request = 1;
		NEPBKJKEBDN pokemon_compare_request = 2;
		HMJLCAFCKEA gift_trade_request = 3;
	}

	message FGMCAKFHOBJ {
		uint64 igfdgcikjem = 1;
	}

	message HMJLCAFCKEA {
	}

	message NEPBKJKEBDN {
	}

}

message HIKICAACOAB {
	bool bldfjlfhibl = 1;
}

message HILELLNLMNP {
	GDEOGOBHFAB knolpgbjgoc = 1;
	bytes ckppijmnial = 2;
	bytes akmlkgmfjgb = 3;
}

message HJAMKOKDACC {
	enum OCEOKHNCJIG {
		UNSET = 0;
		SUCCESS = 1;
	}

	OCEOKHNCJIG hhkodmoefol = 1;
	string ajbpmokphcc = 2;
	PAEHCJKJPLP ojgckfiagpm = 3;
	repeated NHLCGNMFNOM khkbcoflind = 4;
}

message HJGICGMKFJC {
	int32 inajmmplclj = 1;
}

message HJMNKACGBAO {
	enum MNJEMJEODDE {
		UNSET = 0;
		SUCCESS = 1;
	}

	MNJEMJEODDE hhkodmoefol = 1;
	bool nobohigabfh = 2;
	PAEHCJKJPLP fhaomikfhlo = 3;
}

message HJPLDJFIEPI {
	float fhobmbfemgj = 1;
	float llfbldnlchm = 2;
	float kfpaanbnfhc = 3;
	float nhfbhmohkke = 4;
	float npaagohfife = 5;
}

message HKBBCEHHGMP {
	int32 epongcjlgki = 1;
	int32 fomdmlbpogh = 2;
}

message HKFBKGFPFCA {
	ICMPEJGKAAH.BEOPEKBEIOL ldccnikjabe = 1;
	int32 hpcolmdaago = 2;
	int32 ljiipjnjmjm = 3;
	int32 knleifffbdd = 4;
	int32 ockdoifjhec = 5;
	int32 plokkocdcpk = 6;
	int32 hmagdjhnjio = 7;
	float inbdaoliafb = 8;
	int32 iiioddccfjd = 9;
}

message HKHKGDDJONL {
	int32 elojoemmogd = 1;
}

message HKPJMNKDCFO {
	repeated string ljknacljjeb = 1;
}

message HLAKBNNDGPO {
	enum NNECHEHKCGM {
		UNSET = 0;
		SUCCESS_ACTIVATED = 1;
		ERROR_NO_PREMIUM_BATTLE_PASS = 2;
		ERROR_VS_SEEKER_NOT_CHARGED = 3;
		ERROR_VS_SEEKER_ALREADY_ACTIVATED = 4;
		ERROR_EXCEEDED_LIMIT = 5;
		ERROR_TEMPORARILY_UNAVAILABLE = 6;
	}

	NNECHEHKCGM hhkodmoefol = 1;
	IMOBJFLGOOF bopkiimchfg = 2;
}

message HLDCALAFAJO {
	enum ELDLGAIGIOC {
		UNSET = 0;
		SUCCESS = 1;
		FAILED = 2;
		ERROR_INVALID_POKEMON_ID = 3;
		ERROR_POKEMON_DEPLOYED = 4;
		ERROR_POKEMON_IS_EGG = 5;
		ERROR_POKEMON_IS_BUDDY = 6;
		ERROR_POKEMON_NOT_ALLOWED = 7;
		ERROR_INVALID_NONCE = 8;
		ERROR_TOO_MANY_POKEMON = 9;
		ERROR_NO_POKEMON_SPECIFIED = 10;
	}

	ELDLGAIGIOC llponloodfk = 1;
	ABNOKACJLCL falhbhfbefn = 2;
	bytes imknlcennoc = 3;
}

message HLDGADPPLEL {
	repeated ECBJDBHKDAE iphfojfkcnl = 1;
}

message HLDMMODAABB {
	string pofcpnikfel = 1;
	string mcdggnpebgc = 2;
	int32 ocokppfodae = 3;
	uint32 laiinhecmni = 4;
}

message HLGMJOLDBOD {
	enum AEMGCOFAMFF {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		TOO_SOON = 3;
	}

	AEMGCOFAMFF hhkodmoefol = 1;
}

message HMAKIHHNPKL {
	enum DCKAFOENHAP {
		NONE = 0;
		IDLE_01 = 1;
		IDLE_02 = 2;
		LAND = 3;
		ATTACK_01 = 4;
		ATTACK_02 = 5;
		DAMAGED = 6;
		STUNNED = 7;
		LOOP = 8;
	}

	DCKAFOENHAP hipjnpcfjgl = 1;
	bool lpabogbpgbd = 2;
	float eedpdmkccdb = 3;
	float cojmcngafcc = 4;
}

message HMBNIEKLGHD {
	enum DGMMJECODNP {
		UNSET = 0;
		SUCCESS = 1;
	}

	DGMMJECODNP hhkodmoefol = 1;
	uint64 ajgbdljaemk = 2;
	uint64 doleibpolko = 3;
	repeated uint32 jacmccpgkaj = 4;
}

message HMJGGBHMHBM {
	enum MMNILLKFBAC {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_POKEMON = 2;
	}

	MMNILLKFBAC hhkodmoefol = 1;
	NHLCGNMFNOM piddpkfgmod = 2;
	IDFMJMIFHFG nidinokggpc = 3;
}

message HMMNOIALMGB {
	int32 jnkojonnale = 1;
	repeated uint64 jibjnpfejlj = 2;
}

message HNADDLMNFIJ {
	int32 ficmgmlbhmp = 1;
	int32 hhgfppijojj = 2;
	string ahjcemhhknd = 3;
}

message HNDCEACDIDA {
	int32 hbmmfopjbce = 1;
	repeated int32 ephkplfnblk = 2;
}

message HOAIKOBMENA {
	bool bldfjlfhibl = 1;
	repeated uint64 igfdgcikjem = 2;
	repeated int32 ainphkodlei = 3;
	repeated int32 jhbbfkcbjlo = 4;
	repeated int32 lnlggmmcmeb = 5;
	repeated float acbhodekcnh = 6;
	repeated NHLCGNMFNOM gkgfmncoibm = 7;
	repeated int32 ghnhlkpncig = 8;
}

message HOFACDDNGEG {
}

message HOIDGBNBACE {
	string ahcgfgkkkdn = 1;
	repeated int32 gdghkinahdb = 2;
	int64 bkkcjfmmhpl = 3;
	int64 apcpkgkmefo = 4;
	FNFFHJKDDJJ llmimjaeglc = 5;
	string kmcejhffckk = 6;
	string mpaekobkjkh = 7;
	double chhgiikbnma = 8;
	double flaphjheime = 9;
	PCNMLNDPOML elabjlbbdpd = 10;
	IBGGKKNEKOA.IBGFAGKHKGN jnkabbfkach = 11;
	string cffbhlodofi = 12;
	string mgkljkncdlh = 13;
	MIHKJLMMMGA gglmokfjibg = 14;
	MBJGAPHFDHC ngkioapejgm = 15;
	GMICNCPLCMG nbeeadohoph = 16;
	IBGGKKNEKOA.BNNGGJPIPIH afgkkgebofm = 17;
}

message HOKFINAOJIH {
	bool pnnjmhdkbmf = 1;
}

message HPCKAEDJFNL {
	PCNMLNDPOML igfdgcikjem = 1;
	float lbjcbmemcbn = 2;
	IBGGKKNEKOA.IBGFAGKHKGN cdnlplomkgo = 3;
}

message HPIEMGPKHJD {
	enum IFEGACAKPFP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_VS_SEEKER_NOT_FOUND = 2;
		ERROR_VS_SEEKER_ALREADY_STARTED_CHARGING = 3;
		ERROR_VS_SEEKER_ALREADY_FULLY_CHARGED = 4;
		ERROR_VS_SEEKER_PLAYER_IN_WRONG_SEASON = 5;
		ERROR_PLAYER_INVENTORY_FULL = 6;
		ERROR_PLAYER_HAS_UNCLAIMED_REWARDS = 7;
	}

	IFEGACAKPFP hhkodmoefol = 1;
	IMOBJFLGOOF bopkiimchfg = 2;
	PAEHCJKJPLP ckobkiimlfg = 3;
	FFHMCAEIELD daapglhhbcm = 4;
	int32 lbnmdfgegnp = 5;
	float boilbofojol = 6;
	IHJJNPGHLME enggclneljm = 7;
	repeated string laggmaldiim = 8;
}

message HPPBICLNIBO {
	ABNOKACJLCL kialnoegehn = 1;
	bytes imknlcennoc = 2;
	repeated string obhppknomfp = 3;
	string konhpkeikce = 4;
}

message HomeWidgetTelemetry {
	enum Status {
		UNUSED = 0;
		IN_USE = 1;
		PAUSED = 2;
	}

	PJKPDPFAKFB.FNCNHAKDOGB widget_type = 1;
	Status status = 2;
	OFKHNHHPPBD platform = 3;
}

message IAPPKIDGOMK {
	repeated GMNDELDPDEK dgeikdeeego = 1;
}

message IBAEIKCBFPN {
	int32 kpaigcogmhc = 1;
	repeated int32 ciinpogelkk = 2;
	repeated int32 kbofgjbmgig = 3;
	repeated int32 fjhiebjfclp = 4;
	repeated int32 dmeiijjoieo = 5;
}

message IBDFMKKACGJ {
}

message IBEJBBICGLA {
	bool lkmemaaoolb = 1;
	int32 jdgleaiipeb = 2;
	float nhblpjjefjf = 3;
}

message IBGGKKNEKOA {
	enum BNNGGJPIPIH {
		UNSET = 0;
		HOLIDAY_2016 = 1;
		ANNIVERSARY = 2;
		ONE_YEAR_ANNIVERSARY = 3;
		HALLOWEEN_2017 = 4;
		SUMMER_2018 = 5;
		FALL_2018 = 6;
		NOVEMBER_2018 = 7;
		WINTER_2018 = 8;
		FEB_2019 = 9;
		MAY_2019_NOEVOLVE = 10;
		JAN_2020_NOEVOLVE = 11;
		APRIL_2020_NOEVOLVE = 12;
		SAFARI_2020_NOEVOLVE = 13;
		SPRING_2020_NOEVOLVE = 14;
		SUMMER_2020_NOEVOLVE = 15;
		FALL_2020_NOEVOLVE = 16;
		WINTER_2020_NOEVOLVE = 17;
		NOT_FOR_RELEASE_ALPHA = 18;
		NOT_FOR_RELEASE_BETA = 19;
		NOT_FOR_RELEASE_GAMMA = 20;
		NOT_FOR_RELEASE_NOEVOLVE = 21;
		KANTO_2020_NOEVOLVE = 22;
		JOHTO_2020_NOEVOLVE = 23;
		HOENN_2020_NOEVOLVE = 24;
		SINNOH_2020_NOEVOLVE = 25;
		HALLOWEEN_2020_NOEVOLVE = 26;
		COSTUME_1 = 27;
		COSTUME_2 = 28;
		COSTUME_3 = 29;
		COSTUME_4 = 30;
		COSTUME_5 = 31;
		COSTUME_6 = 32;
		COSTUME_7 = 33;
		COSTUME_8 = 34;
		COSTUME_9 = 35;
		COSTUME_10 = 36;
		COSTUME_1_NOEVOLVE = 37;
		COSTUME_2_NOEVOLVE = 38;
		COSTUME_3_NOEVOLVE = 39;
		COSTUME_4_NOEVOLVE = 40;
		COSTUME_5_NOEVOLVE = 41;
		COSTUME_6_NOEVOLVE = 42;
		COSTUME_7_NOEVOLVE = 43;
		COSTUME_8_NOEVOLVE = 44;
		COSTUME_9_NOEVOLVE = 45;
		COSTUME_10_NOEVOLVE = 46;
		GOFEST_2021_NOEVOLVE = 47;
		FASHION_2021_NOEVOLVE = 48;
		HALLOWEEN_2021_NOEVOLVE = 49;
		GEMS_1_2021_NOEVOLVE = 50;
		GEMS_2_2021_NOEVOLVE = 51;
		HOLIDAY_2021_NOEVOLVE = 52;
		TCG_2022_NOEVOLVE = 53;
		JAN_2022_NOEVOLVE = 54;
		GOFEST_2022_NOEVOLVE = 55;
		ANNIVERSARY_2022_NOEVOLVE = 56;
	}

	enum DDEDEGGJGPH {
		ALIGNMENT_UNSET = 0;
		SHADOW = 1;
		PURIFIED = 2;
	}

	enum IBGFAGKHKGN {
		FORM_UNSET = 0;
		UNOWN_A = 1;
		UNOWN_B = 2;
		UNOWN_C = 3;
		UNOWN_D = 4;
		UNOWN_E = 5;
		UNOWN_F = 6;
		UNOWN_G = 7;
		UNOWN_H = 8;
		UNOWN_I = 9;
		UNOWN_J = 10;
		UNOWN_K = 11;
		UNOWN_L = 12;
		UNOWN_M = 13;
		UNOWN_N = 14;
		UNOWN_O = 15;
		UNOWN_P = 16;
		UNOWN_Q = 17;
		UNOWN_R = 18;
		UNOWN_S = 19;
		UNOWN_T = 20;
		UNOWN_U = 21;
		UNOWN_V = 22;
		UNOWN_W = 23;
		UNOWN_X = 24;
		UNOWN_Y = 25;
		UNOWN_Z = 26;
		UNOWN_EXCLAMATION_POINT = 27;
		UNOWN_QUESTION_MARK = 28;
		CASTFORM_NORMAL = 29;
		CASTFORM_SUNNY = 30;
		CASTFORM_RAINY = 31;
		CASTFORM_SNOWY = 32;
		DEOXYS_NORMAL = 33;
		DEOXYS_ATTACK = 34;
		DEOXYS_DEFENSE = 35;
		DEOXYS_SPEED = 36;
		SPINDA_00 = 37;
		SPINDA_01 = 38;
		SPINDA_02 = 39;
		SPINDA_03 = 40;
		SPINDA_04 = 41;
		SPINDA_05 = 42;
		SPINDA_06 = 43;
		SPINDA_07 = 44;
		RATTATA_NORMAL = 45;
		RATTATA_ALOLA = 46;
		RATICATE_NORMAL = 47;
		RATICATE_ALOLA = 48;
		RAICHU_NORMAL = 49;
		RAICHU_ALOLA = 50;
		SANDSHREW_NORMAL = 51;
		SANDSHREW_ALOLA = 52;
		SANDSLASH_NORMAL = 53;
		SANDSLASH_ALOLA = 54;
		VULPIX_NORMAL = 55;
		VULPIX_ALOLA = 56;
		NINETALES_NORMAL = 57;
		NINETALES_ALOLA = 58;
		DIGLETT_NORMAL = 59;
		DIGLETT_ALOLA = 60;
		DUGTRIO_NORMAL = 61;
		DUGTRIO_ALOLA = 62;
		MEOWTH_NORMAL = 63;
		MEOWTH_ALOLA = 64;
		PERSIAN_NORMAL = 65;
		PERSIAN_ALOLA = 66;
		GEODUDE_NORMAL = 67;
		GEODUDE_ALOLA = 68;
		GRAVELER_NORMAL = 69;
		GRAVELER_ALOLA = 70;
		GOLEM_NORMAL = 71;
		GOLEM_ALOLA = 72;
		GRIMER_NORMAL = 73;
		GRIMER_ALOLA = 74;
		MUK_NORMAL = 75;
		MUK_ALOLA = 76;
		EXEGGUTOR_NORMAL = 77;
		EXEGGUTOR_ALOLA = 78;
		MAROWAK_NORMAL = 79;
		MAROWAK_ALOLA = 80;
		ROTOM_NORMAL = 81;
		ROTOM_FROST = 82;
		ROTOM_FAN = 83;
		ROTOM_MOW = 84;
		ROTOM_WASH = 85;
		ROTOM_HEAT = 86;
		WORMADAM_PLANT = 87;
		WORMADAM_SANDY = 88;
		WORMADAM_TRASH = 89;
		GIRATINA_ALTERED = 90;
		GIRATINA_ORIGIN = 91;
		SHAYMIN_SKY = 92;
		SHAYMIN_LAND = 93;
		CHERRIM_OVERCAST = 94;
		CHERRIM_SUNNY = 95;
		SHELLOS_WEST_SEA = 96;
		SHELLOS_EAST_SEA = 97;
		GASTRODON_WEST_SEA = 98;
		GASTRODON_EAST_SEA = 99;
		ARCEUS_NORMAL = 100;
		ARCEUS_FIGHTING = 101;
		ARCEUS_FLYING = 102;
		ARCEUS_POISON = 103;
		ARCEUS_GROUND = 104;
		ARCEUS_ROCK = 105;
		ARCEUS_BUG = 106;
		ARCEUS_GHOST = 107;
		ARCEUS_STEEL = 108;
		ARCEUS_FIRE = 109;
		ARCEUS_WATER = 110;
		ARCEUS_GRASS = 111;
		ARCEUS_ELECTRIC = 112;
		ARCEUS_PSYCHIC = 113;
		ARCEUS_ICE = 114;
		ARCEUS_DRAGON = 115;
		ARCEUS_DARK = 116;
		ARCEUS_FAIRY = 117;
		BURMY_PLANT = 118;
		BURMY_SANDY = 119;
		BURMY_TRASH = 120;
		SPINDA_08 = 121;
		SPINDA_09 = 122;
		SPINDA_10 = 123;
		SPINDA_11 = 124;
		SPINDA_12 = 125;
		SPINDA_13 = 126;
		SPINDA_14 = 127;
		SPINDA_15 = 128;
		SPINDA_16 = 129;
		SPINDA_17 = 130;
		SPINDA_18 = 131;
		SPINDA_19 = 132;
		MEWTWO_A = 133;
		MEWTWO_NORMAL = 135;
		BASCULIN_RED_STRIPED = 136;
		BASCULIN_BLUE_STRIPED = 137;
		DARMANITAN_STANDARD = 138;
		DARMANITAN_ZEN = 139;
		TORNADUS_INCARNATE = 140;
		TORNADUS_THERIAN = 141;
		THUNDURUS_INCARNATE = 142;
		THUNDURUS_THERIAN = 143;
		LANDORUS_INCARNATE = 144;
		LANDORUS_THERIAN = 145;
		KYUREM_NORMAL = 146;
		KYUREM_BLACK = 147;
		KYUREM_WHITE = 148;
		KELDEO_ORDINARY = 149;
		KELDEO_RESOLUTE = 150;
		MELOETTA_ARIA = 151;
		MELOETTA_PIROUETTE = 152;
		RATTATA_SHADOW = 153;
		RATTATA_PURIFIED = 154;
		RATICATE_SHADOW = 155;
		RATICATE_PURIFIED = 156;
		ZUBAT_NORMAL = 157;
		ZUBAT_SHADOW = 158;
		ZUBAT_PURIFIED = 159;
		GOLBAT_NORMAL = 160;
		GOLBAT_SHADOW = 161;
		GOLBAT_PURIFIED = 162;
		BULBASAUR_NORMAL = 163;
		BULBASAUR_SHADOW = 164;
		BULBASAUR_PURIFIED = 165;
		IVYSAUR_NORMAL = 166;
		IVYSAUR_SHADOW = 167;
		IVYSAUR_PURIFIED = 168;
		VENUSAUR_NORMAL = 169;
		VENUSAUR_SHADOW = 170;
		VENUSAUR_PURIFIED = 171;
		CHARMANDER_NORMAL = 172;
		CHARMANDER_SHADOW = 173;
		CHARMANDER_PURIFIED = 174;
		CHARMELEON_NORMAL = 175;
		CHARMELEON_SHADOW = 176;
		CHARMELEON_PURIFIED = 177;
		CHARIZARD_NORMAL = 178;
		CHARIZARD_SHADOW = 179;
		CHARIZARD_PURIFIED = 180;
		SQUIRTLE_NORMAL = 181;
		SQUIRTLE_SHADOW = 182;
		SQUIRTLE_PURIFIED = 183;
		WARTORTLE_NORMAL = 184;
		WARTORTLE_SHADOW = 185;
		WARTORTLE_PURIFIED = 186;
		BLASTOISE_NORMAL = 187;
		BLASTOISE_SHADOW = 188;
		BLASTOISE_PURIFIED = 189;
		DRATINI_NORMAL = 190;
		DRATINI_SHADOW = 191;
		DRATINI_PURIFIED = 192;
		DRAGONAIR_NORMAL = 193;
		DRAGONAIR_SHADOW = 194;
		DRAGONAIR_PURIFIED = 195;
		DRAGONITE_NORMAL = 196;
		DRAGONITE_SHADOW = 197;
		DRAGONITE_PURIFIED = 198;
		SNORLAX_NORMAL = 199;
		SNORLAX_SHADOW = 200;
		SNORLAX_PURIFIED = 201;
		CROBAT_NORMAL = 202;
		CROBAT_SHADOW = 203;
		CROBAT_PURIFIED = 204;
		MUDKIP_NORMAL = 205;
		MUDKIP_SHADOW = 206;
		MUDKIP_PURIFIED = 207;
		MARSHTOMP_NORMAL = 208;
		MARSHTOMP_SHADOW = 209;
		MARSHTOMP_PURIFIED = 210;
		SWAMPERT_NORMAL = 211;
		SWAMPERT_SHADOW = 212;
		SWAMPERT_PURIFIED = 213;
		DROWZEE_NORMAL = 214;
		DROWZEE_SHADOW = 215;
		DROWZEE_PURIFIED = 216;
		HYPNO_NORMAL = 217;
		HYPNO_SHADOW = 218;
		HYPNO_PURIFIED = 219;
		GRIMER_SHADOW = 220;
		GRIMER_PURIFIED = 221;
		MUK_SHADOW = 222;
		MUK_PURIFIED = 223;
		CUBONE_NORMAL = 224;
		CUBONE_SHADOW = 225;
		CUBONE_PURIFIED = 226;
		MAROWAK_SHADOW = 227;
		MAROWAK_PURIFIED = 228;
		HOUNDOUR_NORMAL = 229;
		HOUNDOUR_SHADOW = 230;
		HOUNDOUR_PURIFIED = 231;
		HOUNDOOM_NORMAL = 232;
		HOUNDOOM_SHADOW = 233;
		HOUNDOOM_PURIFIED = 234;
		POLIWAG_NORMAL = 235;
		POLIWAG_SHADOW = 236;
		POLIWAG_PURIFIED = 237;
		POLIWHIRL_NORMAL = 238;
		POLIWHIRL_SHADOW = 239;
		POLIWHIRL_PURIFIED = 240;
		POLIWRATH_NORMAL = 241;
		POLIWRATH_SHADOW = 242;
		POLIWRATH_PURIFIED = 243;
		POLITOED_NORMAL = 244;
		POLITOED_SHADOW = 245;
		POLITOED_PURIFIED = 246;
		SCYTHER_NORMAL = 247;
		SCYTHER_SHADOW = 248;
		SCYTHER_PURIFIED = 249;
		SCIZOR_NORMAL = 250;
		SCIZOR_SHADOW = 251;
		SCIZOR_PURIFIED = 252;
		MAGIKARP_NORMAL = 253;
		MAGIKARP_SHADOW = 254;
		MAGIKARP_PURIFIED = 255;
		GYARADOS_NORMAL = 256;
		GYARADOS_SHADOW = 257;
		GYARADOS_PURIFIED = 258;
		VENONAT_NORMAL = 259;
		VENONAT_SHADOW = 260;
		VENONAT_PURIFIED = 261;
		VENOMOTH_NORMAL = 262;
		VENOMOTH_SHADOW = 263;
		VENOMOTH_PURIFIED = 264;
		ODDISH_NORMAL = 265;
		ODDISH_SHADOW = 266;
		ODDISH_PURIFIED = 267;
		GLOOM_NORMAL = 268;
		GLOOM_SHADOW = 269;
		GLOOM_PURIFIED = 270;
		VILEPLUME_NORMAL = 271;
		VILEPLUME_SHADOW = 272;
		VILEPLUME_PURIFIED = 273;
		BELLOSSOM_NORMAL = 274;
		BELLOSSOM_SHADOW = 275;
		BELLOSSOM_PURIFIED = 276;
		HITMONCHAN_NORMAL = 277;
		HITMONCHAN_SHADOW = 278;
		HITMONCHAN_PURIFIED = 279;
		GROWLITHE_NORMAL = 280;
		GROWLITHE_SHADOW = 281;
		GROWLITHE_PURIFIED = 282;
		ARCANINE_NORMAL = 283;
		ARCANINE_SHADOW = 284;
		ARCANINE_PURIFIED = 285;
		PSYDUCK_NORMAL = 286;
		PSYDUCK_SHADOW = 287;
		PSYDUCK_PURIFIED = 288;
		GOLDUCK_NORMAL = 289;
		GOLDUCK_SHADOW = 290;
		GOLDUCK_PURIFIED = 291;
		RALTS_NORMAL = 292;
		RALTS_SHADOW = 293;
		RALTS_PURIFIED = 294;
		KIRLIA_NORMAL = 295;
		KIRLIA_SHADOW = 296;
		KIRLIA_PURIFIED = 297;
		GARDEVOIR_NORMAL = 298;
		GARDEVOIR_SHADOW = 299;
		GARDEVOIR_PURIFIED = 300;
		GALLADE_NORMAL = 301;
		GALLADE_SHADOW = 302;
		GALLADE_PURIFIED = 303;
		ABRA_NORMAL = 304;
		ABRA_SHADOW = 305;
		ABRA_PURIFIED = 306;
		KADABRA_NORMAL = 307;
		KADABRA_SHADOW = 308;
		KADABRA_PURIFIED = 309;
		ALAKAZAM_NORMAL = 310;
		ALAKAZAM_SHADOW = 311;
		ALAKAZAM_PURIFIED = 312;
		LARVITAR_NORMAL = 313;
		LARVITAR_SHADOW = 314;
		LARVITAR_PURIFIED = 315;
		PUPITAR_NORMAL = 316;
		PUPITAR_SHADOW = 317;
		PUPITAR_PURIFIED = 318;
		TYRANITAR_NORMAL = 319;
		TYRANITAR_SHADOW = 320;
		TYRANITAR_PURIFIED = 321;
		LAPRAS_NORMAL = 322;
		LAPRAS_SHADOW = 323;
		LAPRAS_PURIFIED = 324;
		DEERLING_SPRING = 585;
		DEERLING_SUMMER = 586;
		DEERLING_AUTUMN = 587;
		DEERLING_WINTER = 588;
		SAWSBUCK_SPRING = 589;
		SAWSBUCK_SUMMER = 590;
		SAWSBUCK_AUTUMN = 591;
		SAWSBUCK_WINTER = 592;
		GENESECT_NORMAL = 593;
		GENESECT_SHOCK = 594;
		GENESECT_BURN = 595;
		GENESECT_CHILL = 596;
		GENESECT_DOUSE = 597;
		PIKACHU_NORMAL = 598;
		WURMPLE_NORMAL = 600;
		WOBBUFFET_NORMAL = 602;
		CACNEA_NORMAL = 610;
		CACNEA_SHADOW = 611;
		CACNEA_PURIFIED = 612;
		CACTURNE_NORMAL = 613;
		CACTURNE_SHADOW = 614;
		CACTURNE_PURIFIED = 615;
		WEEDLE_NORMAL = 616;
		WEEDLE_SHADOW = 617;
		WEEDLE_PURIFIED = 618;
		KAKUNA_NORMAL = 619;
		KAKUNA_SHADOW = 620;
		KAKUNA_PURIFIED = 621;
		BEEDRILL_NORMAL = 622;
		BEEDRILL_SHADOW = 623;
		BEEDRILL_PURIFIED = 624;
		SEEDOT_NORMAL = 625;
		SEEDOT_SHADOW = 626;
		SEEDOT_PURIFIED = 627;
		NUZLEAF_NORMAL = 628;
		NUZLEAF_SHADOW = 629;
		NUZLEAF_PURIFIED = 630;
		SHIFTRY_NORMAL = 631;
		SHIFTRY_SHADOW = 632;
		SHIFTRY_PURIFIED = 633;
		MAGMAR_NORMAL = 634;
		MAGMAR_SHADOW = 635;
		MAGMAR_PURIFIED = 636;
		MAGMORTAR_NORMAL = 637;
		MAGMORTAR_SHADOW = 638;
		MAGMORTAR_PURIFIED = 639;
		ELECTABUZZ_NORMAL = 640;
		ELECTABUZZ_SHADOW = 641;
		ELECTABUZZ_PURIFIED = 642;
		ELECTIVIRE_NORMAL = 643;
		ELECTIVIRE_SHADOW = 644;
		ELECTIVIRE_PURIFIED = 645;
		MAREEP_NORMAL = 646;
		MAREEP_SHADOW = 647;
		MAREEP_PURIFIED = 648;
		FLAAFFY_NORMAL = 649;
		FLAAFFY_SHADOW = 650;
		FLAAFFY_PURIFIED = 651;
		AMPHAROS_NORMAL = 652;
		AMPHAROS_SHADOW = 653;
		AMPHAROS_PURIFIED = 654;
		MAGNEMITE_NORMAL = 655;
		MAGNEMITE_SHADOW = 656;
		MAGNEMITE_PURIFIED = 657;
		MAGNETON_NORMAL = 658;
		MAGNETON_SHADOW = 659;
		MAGNETON_PURIFIED = 660;
		MAGNEZONE_NORMAL = 661;
		MAGNEZONE_SHADOW = 662;
		MAGNEZONE_PURIFIED = 663;
		BELLSPROUT_NORMAL = 664;
		BELLSPROUT_SHADOW = 665;
		BELLSPROUT_PURIFIED = 666;
		WEEPINBELL_NORMAL = 667;
		WEEPINBELL_SHADOW = 668;
		WEEPINBELL_PURIFIED = 669;
		VICTREEBEL_NORMAL = 670;
		VICTREEBEL_SHADOW = 671;
		VICTREEBEL_PURIFIED = 672;
		SANDSHREW_SHADOW = 673;
		SANDSHREW_PURIFIED = 674;
		SANDSLASH_SHADOW = 675;
		SANDSLASH_PURIFIED = 676;
		PORYGON_NORMAL = 677;
		PORYGON_SHADOW = 678;
		PORYGON_PURIFIED = 679;
		PORYGON2_NORMAL = 680;
		PORYGON2_SHADOW = 681;
		PORYGON2_PURIFIED = 682;
		PORYGON_Z_NORMAL = 683;
		PORYGON_Z_SHADOW = 684;
		PORYGON_Z_PURIFIED = 685;
		WOBBUFFET_SHADOW = 686;
		WOBBUFFET_PURIFIED = 687;
		TURTWIG_NORMAL = 688;
		TURTWIG_SHADOW = 689;
		TURTWIG_PURIFIED = 690;
		GROTLE_NORMAL = 691;
		GROTLE_SHADOW = 692;
		GROTLE_PURIFIED = 693;
		TORTERRA_NORMAL = 694;
		TORTERRA_SHADOW = 695;
		TORTERRA_PURIFIED = 696;
		EKANS_NORMAL = 697;
		EKANS_SHADOW = 698;
		EKANS_PURIFIED = 699;
		ARBOK_NORMAL = 700;
		ARBOK_SHADOW = 701;
		ARBOK_PURIFIED = 702;
		KOFFING_NORMAL = 703;
		KOFFING_SHADOW = 704;
		KOFFING_PURIFIED = 705;
		WEEZING_NORMAL = 706;
		WEEZING_SHADOW = 707;
		WEEZING_PURIFIED = 708;
		MEOWTH_SHADOW = 709;
		MEOWTH_PURIFIED = 710;
		PERSIAN_SHADOW = 711;
		PERSIAN_PURIFIED = 712;
		HITMONLEE_NORMAL = 713;
		HITMONLEE_SHADOW = 714;
		HITMONLEE_PURIFIED = 715;
		ARTICUNO_NORMAL = 716;
		ARTICUNO_SHADOW = 717;
		ARTICUNO_PURIFIED = 718;
		MISDREAVUS_NORMAL = 719;
		MISDREAVUS_SHADOW = 720;
		MISDREAVUS_PURIFIED = 721;
		MISMAGIUS_NORMAL = 722;
		MISMAGIUS_SHADOW = 723;
		MISMAGIUS_PURIFIED = 724;
		VULPIX_SHADOW = 725;
		VULPIX_PURIFIED = 726;
		NINETALES_SHADOW = 727;
		NINETALES_PURIFIED = 728;
		EXEGGCUTE_NORMAL = 729;
		EXEGGCUTE_SHADOW = 730;
		EXEGGCUTE_PURIFIED = 731;
		EXEGGUTOR_SHADOW = 732;
		EXEGGUTOR_PURIFIED = 733;
		CARVANHA_NORMAL = 734;
		CARVANHA_SHADOW = 735;
		CARVANHA_PURIFIED = 736;
		SHARPEDO_NORMAL = 737;
		SHARPEDO_SHADOW = 738;
		SHARPEDO_PURIFIED = 739;
		OMANYTE_NORMAL = 740;
		OMANYTE_SHADOW = 741;
		OMANYTE_PURIFIED = 742;
		OMASTAR_NORMAL = 743;
		OMASTAR_SHADOW = 744;
		OMASTAR_PURIFIED = 745;
		TRAPINCH_NORMAL = 746;
		TRAPINCH_SHADOW = 747;
		TRAPINCH_PURIFIED = 748;
		VIBRAVA_NORMAL = 749;
		VIBRAVA_SHADOW = 750;
		VIBRAVA_PURIFIED = 751;
		FLYGON_NORMAL = 752;
		FLYGON_SHADOW = 753;
		FLYGON_PURIFIED = 754;
		BAGON_NORMAL = 755;
		BAGON_SHADOW = 756;
		BAGON_PURIFIED = 757;
		SHELGON_NORMAL = 758;
		SHELGON_SHADOW = 759;
		SHELGON_PURIFIED = 760;
		SALAMENCE_NORMAL = 761;
		SALAMENCE_SHADOW = 762;
		SALAMENCE_PURIFIED = 763;
		BELDUM_NORMAL = 764;
		BELDUM_SHADOW = 765;
		BELDUM_PURIFIED = 766;
		METANG_NORMAL = 767;
		METANG_SHADOW = 768;
		METANG_PURIFIED = 769;
		METAGROSS_NORMAL = 770;
		METAGROSS_SHADOW = 771;
		METAGROSS_PURIFIED = 772;
		ZAPDOS_NORMAL = 773;
		ZAPDOS_SHADOW = 774;
		ZAPDOS_PURIFIED = 775;
		NIDORAN_NORMAL = 776;
		NIDORAN_SHADOW = 777;
		NIDORAN_PURIFIED = 778;
		NIDORINA_NORMAL = 779;
		NIDORINA_SHADOW = 780;
		NIDORINA_PURIFIED = 781;
		NIDOQUEEN_NORMAL = 782;
		NIDOQUEEN_SHADOW = 783;
		NIDOQUEEN_PURIFIED = 784;
		NIDORINO_NORMAL = 785;
		NIDORINO_SHADOW = 786;
		NIDORINO_PURIFIED = 787;
		NIDOKING_NORMAL = 788;
		NIDOKING_SHADOW = 789;
		NIDOKING_PURIFIED = 790;
		STUNKY_NORMAL = 791;
		STUNKY_SHADOW = 792;
		STUNKY_PURIFIED = 793;
		SKUNTANK_NORMAL = 794;
		SKUNTANK_SHADOW = 795;
		SKUNTANK_PURIFIED = 796;
		SNEASEL_NORMAL = 797;
		SNEASEL_SHADOW = 798;
		SNEASEL_PURIFIED = 799;
		WEAVILE_NORMAL = 800;
		WEAVILE_SHADOW = 801;
		WEAVILE_PURIFIED = 802;
		GLIGAR_NORMAL = 803;
		GLIGAR_SHADOW = 804;
		GLIGAR_PURIFIED = 805;
		GLISCOR_NORMAL = 806;
		GLISCOR_SHADOW = 807;
		GLISCOR_PURIFIED = 808;
		MACHOP_NORMAL = 809;
		MACHOP_SHADOW = 810;
		MACHOP_PURIFIED = 811;
		MACHOKE_NORMAL = 812;
		MACHOKE_SHADOW = 813;
		MACHOKE_PURIFIED = 814;
		MACHAMP_NORMAL = 815;
		MACHAMP_SHADOW = 816;
		MACHAMP_PURIFIED = 817;
		CHIMCHAR_NORMAL = 818;
		CHIMCHAR_SHADOW = 819;
		CHIMCHAR_PURIFIED = 820;
		MONFERNO_NORMAL = 821;
		MONFERNO_SHADOW = 822;
		MONFERNO_PURIFIED = 823;
		INFERNAPE_NORMAL = 824;
		INFERNAPE_SHADOW = 825;
		INFERNAPE_PURIFIED = 826;
		SHUCKLE_NORMAL = 827;
		SHUCKLE_SHADOW = 828;
		SHUCKLE_PURIFIED = 829;
		ABSOL_NORMAL = 830;
		ABSOL_SHADOW = 831;
		ABSOL_PURIFIED = 832;
		MAWILE_NORMAL = 833;
		MAWILE_SHADOW = 834;
		MAWILE_PURIFIED = 835;
		MOLTRES_NORMAL = 836;
		MOLTRES_SHADOW = 837;
		MOLTRES_PURIFIED = 838;
		KANGASKHAN_NORMAL = 839;
		KANGASKHAN_SHADOW = 840;
		KANGASKHAN_PURIFIED = 841;
		DIGLETT_SHADOW = 842;
		DIGLETT_PURIFIED = 843;
		DUGTRIO_SHADOW = 844;
		DUGTRIO_PURIFIED = 845;
		RHYHORN_NORMAL = 846;
		RHYHORN_SHADOW = 847;
		RHYHORN_PURIFIED = 848;
		RHYDON_NORMAL = 849;
		RHYDON_SHADOW = 850;
		RHYDON_PURIFIED = 851;
		RHYPERIOR_NORMAL = 852;
		RHYPERIOR_SHADOW = 853;
		RHYPERIOR_PURIFIED = 854;
		MURKROW_NORMAL = 855;
		MURKROW_SHADOW = 856;
		MURKROW_PURIFIED = 857;
		HONCHKROW_NORMAL = 858;
		HONCHKROW_SHADOW = 859;
		HONCHKROW_PURIFIED = 860;
		GIBLE_NORMAL = 861;
		GIBLE_SHADOW = 862;
		GIBLE_PURIFIED = 863;
		GABITE_NORMAL = 864;
		GABITE_SHADOW = 865;
		GABITE_PURIFIED = 866;
		GARCHOMP_NORMAL = 867;
		GARCHOMP_SHADOW = 868;
		GARCHOMP_PURIFIED = 869;
		KRABBY_NORMAL = 870;
		KRABBY_SHADOW = 871;
		KRABBY_PURIFIED = 872;
		KINGLER_NORMAL = 873;
		KINGLER_SHADOW = 874;
		KINGLER_PURIFIED = 875;
		SHELLDER_NORMAL = 876;
		SHELLDER_SHADOW = 877;
		SHELLDER_PURIFIED = 878;
		CLOYSTER_NORMAL = 879;
		CLOYSTER_SHADOW = 880;
		CLOYSTER_PURIFIED = 881;
		GEODUDE_SHADOW = 882;
		GEODUDE_PURIFIED = 883;
		GRAVELER_SHADOW = 884;
		GRAVELER_PURIFIED = 885;
		GOLEM_SHADOW = 886;
		GOLEM_PURIFIED = 887;
		HIPPOPOTAS_NORMAL = 888;
		HIPPOPOTAS_SHADOW = 889;
		HIPPOPOTAS_PURIFIED = 890;
		HIPPOWDON_NORMAL = 891;
		HIPPOWDON_SHADOW = 892;
		HIPPOWDON_PURIFIED = 893;
		PIKACHU_FALL_2019 = 894;
		SQUIRTLE_FALL_2019 = 895;
		CHARMANDER_FALL_2019 = 896;
		BULBASAUR_FALL_2019 = 897;
		PINSIR_NORMAL = 898;
		PINSIR_SHADOW = 899;
		PINSIR_PURIFIED = 900;
		PIKACHU_VS_2019 = 901;
		ONIX_NORMAL = 902;
		ONIX_SHADOW = 903;
		ONIX_PURIFIED = 904;
		STEELIX_NORMAL = 905;
		STEELIX_SHADOW = 906;
		STEELIX_PURIFIED = 907;
		SHUPPET_NORMAL = 908;
		SHUPPET_SHADOW = 909;
		SHUPPET_PURIFIED = 910;
		BANETTE_NORMAL = 911;
		BANETTE_SHADOW = 912;
		BANETTE_PURIFIED = 913;
		DUSKULL_NORMAL = 914;
		DUSKULL_SHADOW = 915;
		DUSKULL_PURIFIED = 916;
		DUSCLOPS_NORMAL = 917;
		DUSCLOPS_SHADOW = 918;
		DUSCLOPS_PURIFIED = 919;
		DUSKNOIR_NORMAL = 920;
		DUSKNOIR_SHADOW = 921;
		DUSKNOIR_PURIFIED = 922;
		SABLEYE_NORMAL = 923;
		SABLEYE_SHADOW = 924;
		SABLEYE_PURIFIED = 925;
		SNORUNT_NORMAL = 926;
		SNORUNT_SHADOW = 927;
		SNORUNT_PURIFIED = 928;
		GLALIE_NORMAL = 929;
		GLALIE_SHADOW = 930;
		GLALIE_PURIFIED = 931;
		SNOVER_NORMAL = 932;
		SNOVER_SHADOW = 933;
		SNOVER_PURIFIED = 934;
		ABOMASNOW_NORMAL = 935;
		ABOMASNOW_SHADOW = 936;
		ABOMASNOW_PURIFIED = 937;
		DELIBIRD_NORMAL = 938;
		DELIBIRD_SHADOW = 939;
		DELIBIRD_PURIFIED = 940;
		STANTLER_NORMAL = 941;
		STANTLER_SHADOW = 942;
		STANTLER_PURIFIED = 943;
		WEEZING_GALARIAN = 944;
		ZIGZAGOON_NORMAL = 945;
		ZIGZAGOON_GALARIAN = 946;
		LINOONE_NORMAL = 947;
		LINOONE_GALARIAN = 948;
		PIKACHU_COPY_2019 = 949;
		VENUSAUR_COPY_2019 = 950;
		CHARIZARD_COPY_2019 = 951;
		BLASTOISE_COPY_2019 = 952;
		CATERPIE_NORMAL = 953;
		CATERPIE_SHADOW = 954;
		CATERPIE_PURIFIED = 955;
		METAPOD_NORMAL = 956;
		METAPOD_SHADOW = 957;
		METAPOD_PURIFIED = 958;
		BUTTERFREE_NORMAL = 959;
		BUTTERFREE_SHADOW = 960;
		BUTTERFREE_PURIFIED = 961;
		PIDGEY_NORMAL = 962;
		PIDGEY_SHADOW = 963;
		PIDGEY_PURIFIED = 964;
		PIDGEOTTO_NORMAL = 965;
		PIDGEOTTO_SHADOW = 966;
		PIDGEOTTO_PURIFIED = 967;
		PIDGEOT_NORMAL = 968;
		PIDGEOT_SHADOW = 969;
		PIDGEOT_PURIFIED = 970;
		SPEAROW_NORMAL = 971;
		SPEAROW_SHADOW = 972;
		SPEAROW_PURIFIED = 973;
		FEAROW_NORMAL = 974;
		FEAROW_SHADOW = 975;
		FEAROW_PURIFIED = 976;
		PIKACHU_SHADOW = 977;
		PIKACHU_PURIFIED = 978;
		RAICHU_SHADOW = 979;
		RAICHU_PURIFIED = 980;
		CLEFAIRY_NORMAL = 981;
		CLEFAIRY_SHADOW = 982;
		CLEFAIRY_PURIFIED = 983;
		CLEFABLE_NORMAL = 984;
		CLEFABLE_SHADOW = 985;
		CLEFABLE_PURIFIED = 986;
		JIGGLYPUFF_NORMAL = 987;
		JIGGLYPUFF_SHADOW = 988;
		JIGGLYPUFF_PURIFIED = 989;
		WIGGLYTUFF_NORMAL = 990;
		WIGGLYTUFF_SHADOW = 991;
		WIGGLYTUFF_PURIFIED = 992;
		PARAS_NORMAL = 993;
		PARAS_SHADOW = 994;
		PARAS_PURIFIED = 995;
		PARASECT_NORMAL = 996;
		PARASECT_SHADOW = 997;
		PARASECT_PURIFIED = 998;
		MANKEY_NORMAL = 999;
		MANKEY_SHADOW = 1000;
		MANKEY_PURIFIED = 1001;
		PRIMEAPE_NORMAL = 1002;
		PRIMEAPE_SHADOW = 1003;
		PRIMEAPE_PURIFIED = 1004;
		TENTACOOL_NORMAL = 1005;
		TENTACOOL_SHADOW = 1006;
		TENTACOOL_PURIFIED = 1007;
		TENTACRUEL_NORMAL = 1008;
		TENTACRUEL_SHADOW = 1009;
		TENTACRUEL_PURIFIED = 1010;
		PONYTA_NORMAL = 1011;
		PONYTA_SHADOW = 1012;
		PONYTA_PURIFIED = 1013;
		RAPIDASH_NORMAL = 1014;
		RAPIDASH_SHADOW = 1015;
		RAPIDASH_PURIFIED = 1016;
		SLOWPOKE_NORMAL = 1017;
		SLOWPOKE_SHADOW = 1018;
		SLOWPOKE_PURIFIED = 1019;
		SLOWBRO_NORMAL = 1020;
		SLOWBRO_SHADOW = 1021;
		SLOWBRO_PURIFIED = 1022;
		FARFETCHD_NORMAL = 1023;
		FARFETCHD_SHADOW = 1024;
		FARFETCHD_PURIFIED = 1025;
		DODUO_NORMAL = 1026;
		DODUO_SHADOW = 1027;
		DODUO_PURIFIED = 1028;
		DODRIO_NORMAL = 1029;
		DODRIO_SHADOW = 1030;
		DODRIO_PURIFIED = 1031;
		SEEL_NORMAL = 1032;
		SEEL_SHADOW = 1033;
		SEEL_PURIFIED = 1034;
		DEWGONG_NORMAL = 1035;
		DEWGONG_SHADOW = 1036;
		DEWGONG_PURIFIED = 1037;
		GASTLY_NORMAL = 1038;
		GASTLY_SHADOW = 1039;
		GASTLY_PURIFIED = 1040;
		HAUNTER_NORMAL = 1041;
		HAUNTER_SHADOW = 1042;
		HAUNTER_PURIFIED = 1043;
		GENGAR_NORMAL = 1044;
		GENGAR_SHADOW = 1045;
		GENGAR_PURIFIED = 1046;
		VOLTORB_NORMAL = 1047;
		VOLTORB_SHADOW = 1048;
		VOLTORB_PURIFIED = 1049;
		ELECTRODE_NORMAL = 1050;
		ELECTRODE_SHADOW = 1051;
		ELECTRODE_PURIFIED = 1052;
		LICKITUNG_NORMAL = 1053;
		LICKITUNG_SHADOW = 1054;
		LICKITUNG_PURIFIED = 1055;
		CHANSEY_NORMAL = 1056;
		CHANSEY_SHADOW = 1057;
		CHANSEY_PURIFIED = 1058;
		TANGELA_NORMAL = 1059;
		TANGELA_SHADOW = 1060;
		TANGELA_PURIFIED = 1061;
		HORSEA_NORMAL = 1062;
		HORSEA_SHADOW = 1063;
		HORSEA_PURIFIED = 1064;
		SEADRA_NORMAL = 1065;
		SEADRA_SHADOW = 1066;
		SEADRA_PURIFIED = 1067;
		GOLDEEN_NORMAL = 1068;
		GOLDEEN_SHADOW = 1069;
		GOLDEEN_PURIFIED = 1070;
		SEAKING_NORMAL = 1071;
		SEAKING_SHADOW = 1072;
		SEAKING_PURIFIED = 1073;
		STARYU_NORMAL = 1074;
		STARYU_SHADOW = 1075;
		STARYU_PURIFIED = 1076;
		STARMIE_NORMAL = 1077;
		STARMIE_SHADOW = 1078;
		STARMIE_PURIFIED = 1079;
		MR_MIME_NORMAL = 1080;
		MR_MIME_SHADOW = 1081;
		MR_MIME_PURIFIED = 1082;
		JYNX_NORMAL = 1083;
		JYNX_SHADOW = 1084;
		JYNX_PURIFIED = 1085;
		TAUROS_NORMAL = 1086;
		TAUROS_SHADOW = 1087;
		TAUROS_PURIFIED = 1088;
		DITTO_NORMAL = 1089;
		DITTO_SHADOW = 1090;
		DITTO_PURIFIED = 1091;
		EEVEE_NORMAL = 1092;
		EEVEE_SHADOW = 1093;
		EEVEE_PURIFIED = 1094;
		VAPOREON_NORMAL = 1095;
		VAPOREON_SHADOW = 1096;
		VAPOREON_PURIFIED = 1097;
		JOLTEON_NORMAL = 1098;
		JOLTEON_SHADOW = 1099;
		JOLTEON_PURIFIED = 1100;
		FLAREON_NORMAL = 1101;
		FLAREON_SHADOW = 1102;
		FLAREON_PURIFIED = 1103;
		KABUTO_NORMAL = 1104;
		KABUTO_SHADOW = 1105;
		KABUTO_PURIFIED = 1106;
		KABUTOPS_NORMAL = 1107;
		KABUTOPS_SHADOW = 1108;
		KABUTOPS_PURIFIED = 1109;
		AERODACTYL_NORMAL = 1110;
		AERODACTYL_SHADOW = 1111;
		AERODACTYL_PURIFIED = 1112;
		MEWTWO_SHADOW = 1113;
		MEWTWO_PURIFIED = 1114;
		MEW_NORMAL = 1115;
		MEW_SHADOW = 1116;
		MEW_PURIFIED = 1117;
		CHIKORITA_NORMAL = 1118;
		CHIKORITA_SHADOW = 1119;
		CHIKORITA_PURIFIED = 1120;
		BAYLEEF_NORMAL = 1121;
		BAYLEEF_SHADOW = 1122;
		BAYLEEF_PURIFIED = 1123;
		MEGANIUM_NORMAL = 1124;
		MEGANIUM_SHADOW = 1125;
		MEGANIUM_PURIFIED = 1126;
		CYNDAQUIL_NORMAL = 1127;
		CYNDAQUIL_SHADOW = 1128;
		CYNDAQUIL_PURIFIED = 1129;
		QUILAVA_NORMAL = 1130;
		QUILAVA_SHADOW = 1131;
		QUILAVA_PURIFIED = 1132;
		TYPHLOSION_NORMAL = 1133;
		TYPHLOSION_SHADOW = 1134;
		TYPHLOSION_PURIFIED = 1135;
		TOTODILE_NORMAL = 1136;
		TOTODILE_SHADOW = 1137;
		TOTODILE_PURIFIED = 1138;
		CROCONAW_NORMAL = 1139;
		CROCONAW_SHADOW = 1140;
		CROCONAW_PURIFIED = 1141;
		FERALIGATR_NORMAL = 1142;
		FERALIGATR_SHADOW = 1143;
		FERALIGATR_PURIFIED = 1144;
		SENTRET_NORMAL = 1145;
		SENTRET_SHADOW = 1146;
		SENTRET_PURIFIED = 1147;
		FURRET_NORMAL = 1148;
		FURRET_SHADOW = 1149;
		FURRET_PURIFIED = 1150;
		HOOTHOOT_NORMAL = 1151;
		HOOTHOOT_SHADOW = 1152;
		HOOTHOOT_PURIFIED = 1153;
		NOCTOWL_NORMAL = 1154;
		NOCTOWL_SHADOW = 1155;
		NOCTOWL_PURIFIED = 1156;
		LEDYBA_NORMAL = 1157;
		LEDYBA_SHADOW = 1158;
		LEDYBA_PURIFIED = 1159;
		LEDIAN_NORMAL = 1160;
		LEDIAN_SHADOW = 1161;
		LEDIAN_PURIFIED = 1162;
		SPINARAK_NORMAL = 1163;
		SPINARAK_SHADOW = 1164;
		SPINARAK_PURIFIED = 1165;
		ARIADOS_NORMAL = 1166;
		ARIADOS_SHADOW = 1167;
		ARIADOS_PURIFIED = 1168;
		CHINCHOU_NORMAL = 1169;
		CHINCHOU_SHADOW = 1170;
		CHINCHOU_PURIFIED = 1171;
		LANTURN_NORMAL = 1172;
		LANTURN_SHADOW = 1173;
		LANTURN_PURIFIED = 1174;
		PICHU_NORMAL = 1175;
		PICHU_SHADOW = 1176;
		PICHU_PURIFIED = 1177;
		CLEFFA_NORMAL = 1178;
		CLEFFA_SHADOW = 1179;
		CLEFFA_PURIFIED = 1180;
		IGGLYBUFF_NORMAL = 1181;
		IGGLYBUFF_SHADOW = 1182;
		IGGLYBUFF_PURIFIED = 1183;
		TOGEPI_NORMAL = 1184;
		TOGEPI_SHADOW = 1185;
		TOGEPI_PURIFIED = 1186;
		TOGETIC_NORMAL = 1187;
		TOGETIC_SHADOW = 1188;
		TOGETIC_PURIFIED = 1189;
		NATU_NORMAL = 1190;
		NATU_SHADOW = 1191;
		NATU_PURIFIED = 1192;
		XATU_NORMAL = 1193;
		XATU_SHADOW = 1194;
		XATU_PURIFIED = 1195;
		MARILL_NORMAL = 1196;
		MARILL_SHADOW = 1197;
		MARILL_PURIFIED = 1198;
		AZUMARILL_NORMAL = 1199;
		AZUMARILL_SHADOW = 1200;
		AZUMARILL_PURIFIED = 1201;
		SUDOWOODO_NORMAL = 1202;
		SUDOWOODO_SHADOW = 1203;
		SUDOWOODO_PURIFIED = 1204;
		HOPPIP_NORMAL = 1205;
		HOPPIP_SHADOW = 1206;
		HOPPIP_PURIFIED = 1207;
		SKIPLOOM_NORMAL = 1208;
		SKIPLOOM_SHADOW = 1209;
		SKIPLOOM_PURIFIED = 1210;
		JUMPLUFF_NORMAL = 1211;
		JUMPLUFF_SHADOW = 1212;
		JUMPLUFF_PURIFIED = 1213;
		AIPOM_NORMAL = 1214;
		AIPOM_SHADOW = 1215;
		AIPOM_PURIFIED = 1216;
		SUNKERN_NORMAL = 1217;
		SUNKERN_SHADOW = 1218;
		SUNKERN_PURIFIED = 1219;
		SUNFLORA_NORMAL = 1220;
		SUNFLORA_SHADOW = 1221;
		SUNFLORA_PURIFIED = 1222;
		YANMA_NORMAL = 1223;
		YANMA_SHADOW = 1224;
		YANMA_PURIFIED = 1225;
		WOOPER_NORMAL = 1226;
		WOOPER_SHADOW = 1227;
		WOOPER_PURIFIED = 1228;
		QUAGSIRE_NORMAL = 1229;
		QUAGSIRE_SHADOW = 1230;
		QUAGSIRE_PURIFIED = 1231;
		ESPEON_NORMAL = 1232;
		ESPEON_SHADOW = 1233;
		ESPEON_PURIFIED = 1234;
		UMBREON_NORMAL = 1235;
		UMBREON_SHADOW = 1236;
		UMBREON_PURIFIED = 1237;
		SLOWKING_NORMAL = 1238;
		SLOWKING_SHADOW = 1239;
		SLOWKING_PURIFIED = 1240;
		GIRAFARIG_NORMAL = 1241;
		GIRAFARIG_SHADOW = 1242;
		GIRAFARIG_PURIFIED = 1243;
		PINECO_NORMAL = 1244;
		PINECO_SHADOW = 1245;
		PINECO_PURIFIED = 1246;
		FORRETRESS_NORMAL = 1247;
		FORRETRESS_SHADOW = 1248;
		FORRETRESS_PURIFIED = 1249;
		DUNSPARCE_NORMAL = 1250;
		DUNSPARCE_SHADOW = 1251;
		DUNSPARCE_PURIFIED = 1252;
		SNUBBULL_NORMAL = 1253;
		SNUBBULL_SHADOW = 1254;
		SNUBBULL_PURIFIED = 1255;
		GRANBULL_NORMAL = 1256;
		GRANBULL_SHADOW = 1257;
		GRANBULL_PURIFIED = 1258;
		QWILFISH_NORMAL = 1259;
		QWILFISH_SHADOW = 1260;
		QWILFISH_PURIFIED = 1261;
		HERACROSS_NORMAL = 1262;
		HERACROSS_SHADOW = 1263;
		HERACROSS_PURIFIED = 1264;
		TEDDIURSA_NORMAL = 1265;
		TEDDIURSA_SHADOW = 1266;
		TEDDIURSA_PURIFIED = 1267;
		URSARING_NORMAL = 1268;
		URSARING_SHADOW = 1269;
		URSARING_PURIFIED = 1270;
		SLUGMA_NORMAL = 1271;
		SLUGMA_SHADOW = 1272;
		SLUGMA_PURIFIED = 1273;
		MAGCARGO_NORMAL = 1274;
		MAGCARGO_SHADOW = 1275;
		MAGCARGO_PURIFIED = 1276;
		SWINUB_NORMAL = 1277;
		SWINUB_SHADOW = 1278;
		SWINUB_PURIFIED = 1279;
		PILOSWINE_NORMAL = 1280;
		PILOSWINE_SHADOW = 1281;
		PILOSWINE_PURIFIED = 1282;
		CORSOLA_NORMAL = 1283;
		CORSOLA_SHADOW = 1284;
		CORSOLA_PURIFIED = 1285;
		REMORAID_NORMAL = 1286;
		REMORAID_SHADOW = 1287;
		REMORAID_PURIFIED = 1288;
		OCTILLERY_NORMAL = 1289;
		OCTILLERY_SHADOW = 1290;
		OCTILLERY_PURIFIED = 1291;
		MANTINE_NORMAL = 1292;
		MANTINE_SHADOW = 1293;
		MANTINE_PURIFIED = 1294;
		SKARMORY_NORMAL = 1295;
		SKARMORY_SHADOW = 1296;
		SKARMORY_PURIFIED = 1297;
		KINGDRA_NORMAL = 1298;
		KINGDRA_SHADOW = 1299;
		KINGDRA_PURIFIED = 1300;
		PHANPY_NORMAL = 1301;
		PHANPY_SHADOW = 1302;
		PHANPY_PURIFIED = 1303;
		DONPHAN_NORMAL = 1304;
		DONPHAN_SHADOW = 1305;
		DONPHAN_PURIFIED = 1306;
		SMEARGLE_NORMAL = 1307;
		SMEARGLE_SHADOW = 1308;
		SMEARGLE_PURIFIED = 1309;
		TYROGUE_NORMAL = 1310;
		TYROGUE_SHADOW = 1311;
		TYROGUE_PURIFIED = 1312;
		HITMONTOP_NORMAL = 1313;
		HITMONTOP_SHADOW = 1314;
		HITMONTOP_PURIFIED = 1315;
		SMOOCHUM_NORMAL = 1316;
		SMOOCHUM_SHADOW = 1317;
		SMOOCHUM_PURIFIED = 1318;
		ELEKID_NORMAL = 1319;
		ELEKID_SHADOW = 1320;
		ELEKID_PURIFIED = 1321;
		MAGBY_NORMAL = 1322;
		MAGBY_SHADOW = 1323;
		MAGBY_PURIFIED = 1324;
		MILTANK_NORMAL = 1325;
		MILTANK_SHADOW = 1326;
		MILTANK_PURIFIED = 1327;
		BLISSEY_NORMAL = 1328;
		BLISSEY_SHADOW = 1329;
		BLISSEY_PURIFIED = 1330;
		RAIKOU_NORMAL = 1331;
		RAIKOU_SHADOW = 1332;
		RAIKOU_PURIFIED = 1333;
		ENTEI_NORMAL = 1334;
		ENTEI_SHADOW = 1335;
		ENTEI_PURIFIED = 1336;
		SUICUNE_NORMAL = 1337;
		SUICUNE_SHADOW = 1338;
		SUICUNE_PURIFIED = 1339;
		LUGIA_NORMAL = 1340;
		LUGIA_SHADOW = 1341;
		LUGIA_PURIFIED = 1342;
		HO_OH_NORMAL = 1343;
		HO_OH_SHADOW = 1344;
		HO_OH_PURIFIED = 1345;
		CELEBI_NORMAL = 1346;
		CELEBI_SHADOW = 1347;
		CELEBI_PURIFIED = 1348;
		TREECKO_NORMAL = 1349;
		TREECKO_SHADOW = 1350;
		TREECKO_PURIFIED = 1351;
		GROVYLE_NORMAL = 1352;
		GROVYLE_SHADOW = 1353;
		GROVYLE_PURIFIED = 1354;
		SCEPTILE_NORMAL = 1355;
		SCEPTILE_SHADOW = 1356;
		SCEPTILE_PURIFIED = 1357;
		TORCHIC_NORMAL = 1358;
		TORCHIC_SHADOW = 1359;
		TORCHIC_PURIFIED = 1360;
		COMBUSKEN_NORMAL = 1361;
		COMBUSKEN_SHADOW = 1362;
		COMBUSKEN_PURIFIED = 1363;
		BLAZIKEN_NORMAL = 1364;
		BLAZIKEN_SHADOW = 1365;
		BLAZIKEN_PURIFIED = 1366;
		POOCHYENA_NORMAL = 1367;
		POOCHYENA_SHADOW = 1368;
		POOCHYENA_PURIFIED = 1369;
		MIGHTYENA_NORMAL = 1370;
		MIGHTYENA_SHADOW = 1371;
		MIGHTYENA_PURIFIED = 1372;
		ZIGZAGOON_SHADOW = 1373;
		ZIGZAGOON_PURIFIED = 1374;
		LINOONE_SHADOW = 1375;
		LINOONE_PURIFIED = 1376;
		WURMPLE_SHADOW = 1377;
		WURMPLE_PURIFIED = 1378;
		SILCOON_NORMAL = 1379;
		SILCOON_SHADOW = 1380;
		SILCOON_PURIFIED = 1381;
		BEAUTIFLY_NORMAL = 1382;
		BEAUTIFLY_SHADOW = 1383;
		BEAUTIFLY_PURIFIED = 1384;
		CASCOON_NORMAL = 1385;
		CASCOON_SHADOW = 1386;
		CASCOON_PURIFIED = 1387;
		DUSTOX_NORMAL = 1388;
		DUSTOX_SHADOW = 1389;
		DUSTOX_PURIFIED = 1390;
		LOTAD_NORMAL = 1391;
		LOTAD_SHADOW = 1392;
		LOTAD_PURIFIED = 1393;
		LOMBRE_NORMAL = 1394;
		LOMBRE_SHADOW = 1395;
		LOMBRE_PURIFIED = 1396;
		LUDICOLO_NORMAL = 1397;
		LUDICOLO_SHADOW = 1398;
		LUDICOLO_PURIFIED = 1399;
		TAILLOW_NORMAL = 1400;
		TAILLOW_SHADOW = 1401;
		TAILLOW_PURIFIED = 1402;
		SWELLOW_NORMAL = 1403;
		SWELLOW_SHADOW = 1404;
		SWELLOW_PURIFIED = 1405;
		WINGULL_NORMAL = 1406;
		WINGULL_SHADOW = 1407;
		WINGULL_PURIFIED = 1408;
		PELIPPER_NORMAL = 1409;
		PELIPPER_SHADOW = 1410;
		PELIPPER_PURIFIED = 1411;
		SURSKIT_NORMAL = 1412;
		SURSKIT_SHADOW = 1413;
		SURSKIT_PURIFIED = 1414;
		MASQUERAIN_NORMAL = 1415;
		MASQUERAIN_SHADOW = 1416;
		MASQUERAIN_PURIFIED = 1417;
		SHROOMISH_NORMAL = 1418;
		SHROOMISH_SHADOW = 1419;
		SHROOMISH_PURIFIED = 1420;
		BRELOOM_NORMAL = 1421;
		BRELOOM_SHADOW = 1422;
		BRELOOM_PURIFIED = 1423;
		SLAKOTH_NORMAL = 1424;
		SLAKOTH_SHADOW = 1425;
		SLAKOTH_PURIFIED = 1426;
		VIGOROTH_NORMAL = 1427;
		VIGOROTH_SHADOW = 1428;
		VIGOROTH_PURIFIED = 1429;
		SLAKING_NORMAL = 1430;
		SLAKING_SHADOW = 1431;
		SLAKING_PURIFIED = 1432;
		NINCADA_NORMAL = 1433;
		NINCADA_SHADOW = 1434;
		NINCADA_PURIFIED = 1435;
		NINJASK_NORMAL = 1436;
		NINJASK_SHADOW = 1437;
		NINJASK_PURIFIED = 1438;
		SHEDINJA_NORMAL = 1439;
		SHEDINJA_SHADOW = 1440;
		SHEDINJA_PURIFIED = 1441;
		WHISMUR_NORMAL = 1442;
		WHISMUR_SHADOW = 1443;
		WHISMUR_PURIFIED = 1444;
		LOUDRED_NORMAL = 1445;
		LOUDRED_SHADOW = 1446;
		LOUDRED_PURIFIED = 1447;
		EXPLOUD_NORMAL = 1448;
		EXPLOUD_SHADOW = 1449;
		EXPLOUD_PURIFIED = 1450;
		MAKUHITA_NORMAL = 1451;
		MAKUHITA_SHADOW = 1452;
		MAKUHITA_PURIFIED = 1453;
		HARIYAMA_NORMAL = 1454;
		HARIYAMA_SHADOW = 1455;
		HARIYAMA_PURIFIED = 1456;
		AZURILL_NORMAL = 1457;
		AZURILL_SHADOW = 1458;
		AZURILL_PURIFIED = 1459;
		NOSEPASS_NORMAL = 1460;
		NOSEPASS_SHADOW = 1461;
		NOSEPASS_PURIFIED = 1462;
		SKITTY_NORMAL = 1463;
		SKITTY_SHADOW = 1464;
		SKITTY_PURIFIED = 1465;
		DELCATTY_NORMAL = 1466;
		DELCATTY_SHADOW = 1467;
		DELCATTY_PURIFIED = 1468;
		ARON_NORMAL = 1469;
		ARON_SHADOW = 1470;
		ARON_PURIFIED = 1471;
		LAIRON_NORMAL = 1472;
		LAIRON_SHADOW = 1473;
		LAIRON_PURIFIED = 1474;
		AGGRON_NORMAL = 1475;
		AGGRON_SHADOW = 1476;
		AGGRON_PURIFIED = 1477;
		MEDITITE_NORMAL = 1478;
		MEDITITE_SHADOW = 1479;
		MEDITITE_PURIFIED = 1480;
		MEDICHAM_NORMAL = 1481;
		MEDICHAM_SHADOW = 1482;
		MEDICHAM_PURIFIED = 1483;
		ELECTRIKE_NORMAL = 1484;
		ELECTRIKE_SHADOW = 1485;
		ELECTRIKE_PURIFIED = 1486;
		MANECTRIC_NORMAL = 1487;
		MANECTRIC_SHADOW = 1488;
		MANECTRIC_PURIFIED = 1489;
		PLUSLE_NORMAL = 1490;
		PLUSLE_SHADOW = 1491;
		PLUSLE_PURIFIED = 1492;
		MINUN_NORMAL = 1493;
		MINUN_SHADOW = 1494;
		MINUN_PURIFIED = 1495;
		VOLBEAT_NORMAL = 1496;
		VOLBEAT_SHADOW = 1497;
		VOLBEAT_PURIFIED = 1498;
		ILLUMISE_NORMAL = 1499;
		ILLUMISE_SHADOW = 1500;
		ILLUMISE_PURIFIED = 1501;
		ROSELIA_NORMAL = 1502;
		ROSELIA_SHADOW = 1503;
		ROSELIA_PURIFIED = 1504;
		GULPIN_NORMAL = 1505;
		GULPIN_SHADOW = 1506;
		GULPIN_PURIFIED = 1507;
		SWALOT_NORMAL = 1508;
		SWALOT_SHADOW = 1509;
		SWALOT_PURIFIED = 1510;
		WAILMER_NORMAL = 1511;
		WAILMER_SHADOW = 1512;
		WAILMER_PURIFIED = 1513;
		WAILORD_NORMAL = 1514;
		WAILORD_SHADOW = 1515;
		WAILORD_PURIFIED = 1516;
		NUMEL_NORMAL = 1517;
		NUMEL_SHADOW = 1518;
		NUMEL_PURIFIED = 1519;
		CAMERUPT_NORMAL = 1520;
		CAMERUPT_SHADOW = 1521;
		CAMERUPT_PURIFIED = 1522;
		TORKOAL_NORMAL = 1523;
		TORKOAL_SHADOW = 1524;
		TORKOAL_PURIFIED = 1525;
		SPOINK_NORMAL = 1526;
		SPOINK_SHADOW = 1527;
		SPOINK_PURIFIED = 1528;
		GRUMPIG_NORMAL = 1529;
		GRUMPIG_SHADOW = 1530;
		GRUMPIG_PURIFIED = 1531;
		SWABLU_NORMAL = 1532;
		SWABLU_SHADOW = 1533;
		SWABLU_PURIFIED = 1534;
		ALTARIA_NORMAL = 1535;
		ALTARIA_SHADOW = 1536;
		ALTARIA_PURIFIED = 1537;
		ZANGOOSE_NORMAL = 1538;
		ZANGOOSE_SHADOW = 1539;
		ZANGOOSE_PURIFIED = 1540;
		SEVIPER_NORMAL = 1541;
		SEVIPER_SHADOW = 1542;
		SEVIPER_PURIFIED = 1543;
		LUNATONE_NORMAL = 1544;
		LUNATONE_SHADOW = 1545;
		LUNATONE_PURIFIED = 1546;
		SOLROCK_NORMAL = 1547;
		SOLROCK_SHADOW = 1548;
		SOLROCK_PURIFIED = 1549;
		BARBOACH_NORMAL = 1550;
		BARBOACH_SHADOW = 1551;
		BARBOACH_PURIFIED = 1552;
		WHISCASH_NORMAL = 1553;
		WHISCASH_SHADOW = 1554;
		WHISCASH_PURIFIED = 1555;
		CORPHISH_NORMAL = 1556;
		CORPHISH_SHADOW = 1557;
		CORPHISH_PURIFIED = 1558;
		CRAWDAUNT_NORMAL = 1559;
		CRAWDAUNT_SHADOW = 1560;
		CRAWDAUNT_PURIFIED = 1561;
		BALTOY_NORMAL = 1562;
		BALTOY_SHADOW = 1563;
		BALTOY_PURIFIED = 1564;
		CLAYDOL_NORMAL = 1565;
		CLAYDOL_SHADOW = 1566;
		CLAYDOL_PURIFIED = 1567;
		LILEEP_NORMAL = 1568;
		LILEEP_SHADOW = 1569;
		LILEEP_PURIFIED = 1570;
		CRADILY_NORMAL = 1571;
		CRADILY_SHADOW = 1572;
		CRADILY_PURIFIED = 1573;
		ANORITH_NORMAL = 1574;
		ANORITH_SHADOW = 1575;
		ANORITH_PURIFIED = 1576;
		ARMALDO_NORMAL = 1577;
		ARMALDO_SHADOW = 1578;
		ARMALDO_PURIFIED = 1579;
		FEEBAS_NORMAL = 1580;
		FEEBAS_SHADOW = 1581;
		FEEBAS_PURIFIED = 1582;
		MILOTIC_NORMAL = 1583;
		MILOTIC_SHADOW = 1584;
		MILOTIC_PURIFIED = 1585;
		KECLEON_NORMAL = 1586;
		KECLEON_SHADOW = 1587;
		KECLEON_PURIFIED = 1588;
		TROPIUS_NORMAL = 1589;
		TROPIUS_SHADOW = 1590;
		TROPIUS_PURIFIED = 1591;
		CHIMECHO_NORMAL = 1592;
		CHIMECHO_SHADOW = 1593;
		CHIMECHO_PURIFIED = 1594;
		WYNAUT_NORMAL = 1595;
		WYNAUT_SHADOW = 1596;
		WYNAUT_PURIFIED = 1597;
		SPHEAL_NORMAL = 1598;
		SPHEAL_SHADOW = 1599;
		SPHEAL_PURIFIED = 1600;
		SEALEO_NORMAL = 1601;
		SEALEO_SHADOW = 1602;
		SEALEO_PURIFIED = 1603;
		WALREIN_NORMAL = 1604;
		WALREIN_SHADOW = 1605;
		WALREIN_PURIFIED = 1606;
		CLAMPERL_NORMAL = 1607;
		CLAMPERL_SHADOW = 1608;
		CLAMPERL_PURIFIED = 1609;
		HUNTAIL_NORMAL = 1610;
		HUNTAIL_SHADOW = 1611;
		HUNTAIL_PURIFIED = 1612;
		GOREBYSS_NORMAL = 1613;
		GOREBYSS_SHADOW = 1614;
		GOREBYSS_PURIFIED = 1615;
		RELICANTH_NORMAL = 1616;
		RELICANTH_SHADOW = 1617;
		RELICANTH_PURIFIED = 1618;
		LUVDISC_NORMAL = 1619;
		LUVDISC_SHADOW = 1620;
		LUVDISC_PURIFIED = 1621;
		REGIROCK_NORMAL = 1622;
		REGIROCK_SHADOW = 1623;
		REGIROCK_PURIFIED = 1624;
		REGICE_NORMAL = 1625;
		REGICE_SHADOW = 1626;
		REGICE_PURIFIED = 1627;
		REGISTEEL_NORMAL = 1628;
		REGISTEEL_SHADOW = 1629;
		REGISTEEL_PURIFIED = 1630;
		LATIAS_NORMAL = 1631;
		LATIAS_SHADOW = 1632;
		LATIAS_PURIFIED = 1633;
		LATIOS_NORMAL = 1634;
		LATIOS_SHADOW = 1635;
		LATIOS_PURIFIED = 1636;
		KYOGRE_NORMAL = 1637;
		KYOGRE_SHADOW = 1638;
		KYOGRE_PURIFIED = 1639;
		GROUDON_NORMAL = 1640;
		GROUDON_SHADOW = 1641;
		GROUDON_PURIFIED = 1642;
		RAYQUAZA_NORMAL = 1643;
		RAYQUAZA_SHADOW = 1644;
		RAYQUAZA_PURIFIED = 1645;
		JIRACHI_NORMAL = 1646;
		JIRACHI_SHADOW = 1647;
		JIRACHI_PURIFIED = 1648;
		PIPLUP_NORMAL = 1649;
		PIPLUP_SHADOW = 1650;
		PIPLUP_PURIFIED = 1651;
		PRINPLUP_NORMAL = 1652;
		PRINPLUP_SHADOW = 1653;
		PRINPLUP_PURIFIED = 1654;
		EMPOLEON_NORMAL = 1655;
		EMPOLEON_SHADOW = 1656;
		EMPOLEON_PURIFIED = 1657;
		STARLY_NORMAL = 1658;
		STARLY_SHADOW = 1659;
		STARLY_PURIFIED = 1660;
		STARAVIA_NORMAL = 1661;
		STARAVIA_SHADOW = 1662;
		STARAVIA_PURIFIED = 1663;
		STARAPTOR_NORMAL = 1664;
		STARAPTOR_SHADOW = 1665;
		STARAPTOR_PURIFIED = 1666;
		BIDOOF_NORMAL = 1667;
		BIDOOF_SHADOW = 1668;
		BIDOOF_PURIFIED = 1669;
		BIBAREL_NORMAL = 1670;
		BIBAREL_SHADOW = 1671;
		BIBAREL_PURIFIED = 1672;
		KRICKETOT_NORMAL = 1673;
		KRICKETOT_SHADOW = 1674;
		KRICKETOT_PURIFIED = 1675;
		KRICKETUNE_NORMAL = 1676;
		KRICKETUNE_SHADOW = 1677;
		KRICKETUNE_PURIFIED = 1678;
		SHINX_NORMAL = 1679;
		SHINX_SHADOW = 1680;
		SHINX_PURIFIED = 1681;
		LUXIO_NORMAL = 1682;
		LUXIO_SHADOW = 1683;
		LUXIO_PURIFIED = 1684;
		LUXRAY_NORMAL = 1685;
		LUXRAY_SHADOW = 1686;
		LUXRAY_PURIFIED = 1687;
		BUDEW_NORMAL = 1688;
		BUDEW_SHADOW = 1689;
		BUDEW_PURIFIED = 1690;
		ROSERADE_NORMAL = 1691;
		ROSERADE_SHADOW = 1692;
		ROSERADE_PURIFIED = 1693;
		CRANIDOS_NORMAL = 1694;
		CRANIDOS_SHADOW = 1695;
		CRANIDOS_PURIFIED = 1696;
		RAMPARDOS_NORMAL = 1697;
		RAMPARDOS_SHADOW = 1698;
		RAMPARDOS_PURIFIED = 1699;
		SHIELDON_NORMAL = 1700;
		SHIELDON_SHADOW = 1701;
		SHIELDON_PURIFIED = 1702;
		BASTIODON_NORMAL = 1703;
		BASTIODON_SHADOW = 1704;
		BASTIODON_PURIFIED = 1705;
		BURMY_NORMAL = 1706;
		BURMY_SHADOW = 1707;
		BURMY_PURIFIED = 1708;
		WORMADAM_NORMAL = 1709;
		WORMADAM_SHADOW = 1710;
		WORMADAM_PURIFIED = 1711;
		MOTHIM_NORMAL = 1712;
		MOTHIM_SHADOW = 1713;
		MOTHIM_PURIFIED = 1714;
		COMBEE_NORMAL = 1715;
		COMBEE_SHADOW = 1716;
		COMBEE_PURIFIED = 1717;
		VESPIQUEN_NORMAL = 1718;
		VESPIQUEN_SHADOW = 1719;
		VESPIQUEN_PURIFIED = 1720;
		PACHIRISU_NORMAL = 1721;
		PACHIRISU_SHADOW = 1722;
		PACHIRISU_PURIFIED = 1723;
		BUIZEL_NORMAL = 1724;
		BUIZEL_SHADOW = 1725;
		BUIZEL_PURIFIED = 1726;
		FLOATZEL_NORMAL = 1727;
		FLOATZEL_SHADOW = 1728;
		FLOATZEL_PURIFIED = 1729;
		CHERUBI_NORMAL = 1730;
		CHERUBI_SHADOW = 1731;
		CHERUBI_PURIFIED = 1732;
		CHERRIM_NORMAL = 1733;
		CHERRIM_SHADOW = 1734;
		CHERRIM_PURIFIED = 1735;
		SHELLOS_NORMAL = 1736;
		SHELLOS_SHADOW = 1737;
		SHELLOS_PURIFIED = 1738;
		GASTRODON_NORMAL = 1739;
		GASTRODON_SHADOW = 1740;
		GASTRODON_PURIFIED = 1741;
		AMBIPOM_NORMAL = 1742;
		AMBIPOM_SHADOW = 1743;
		AMBIPOM_PURIFIED = 1744;
		DRIFLOON_NORMAL = 1745;
		DRIFLOON_SHADOW = 1746;
		DRIFLOON_PURIFIED = 1747;
		DRIFBLIM_NORMAL = 1748;
		DRIFBLIM_SHADOW = 1749;
		DRIFBLIM_PURIFIED = 1750;
		BUNEARY_NORMAL = 1751;
		BUNEARY_SHADOW = 1752;
		BUNEARY_PURIFIED = 1753;
		LOPUNNY_NORMAL = 1754;
		LOPUNNY_SHADOW = 1755;
		LOPUNNY_PURIFIED = 1756;
		GLAMEOW_NORMAL = 1757;
		GLAMEOW_SHADOW = 1758;
		GLAMEOW_PURIFIED = 1759;
		PURUGLY_NORMAL = 1760;
		PURUGLY_SHADOW = 1761;
		PURUGLY_PURIFIED = 1762;
		CHINGLING_NORMAL = 1763;
		CHINGLING_SHADOW = 1764;
		CHINGLING_PURIFIED = 1765;
		BRONZOR_NORMAL = 1766;
		BRONZOR_SHADOW = 1767;
		BRONZOR_PURIFIED = 1768;
		BRONZONG_NORMAL = 1769;
		BRONZONG_SHADOW = 1770;
		BRONZONG_PURIFIED = 1771;
		BONSLY_NORMAL = 1772;
		BONSLY_SHADOW = 1773;
		BONSLY_PURIFIED = 1774;
		MIME_JR_NORMAL = 1775;
		MIME_JR_SHADOW = 1776;
		MIME_JR_PURIFIED = 1777;
		HAPPINY_NORMAL = 1778;
		HAPPINY_SHADOW = 1779;
		HAPPINY_PURIFIED = 1780;
		CHATOT_NORMAL = 1781;
		CHATOT_SHADOW = 1782;
		CHATOT_PURIFIED = 1783;
		SPIRITOMB_NORMAL = 1784;
		SPIRITOMB_SHADOW = 1785;
		SPIRITOMB_PURIFIED = 1786;
		MUNCHLAX_NORMAL = 1787;
		MUNCHLAX_SHADOW = 1788;
		MUNCHLAX_PURIFIED = 1789;
		RIOLU_NORMAL = 1790;
		RIOLU_SHADOW = 1791;
		RIOLU_PURIFIED = 1792;
		LUCARIO_NORMAL = 1793;
		LUCARIO_SHADOW = 1794;
		LUCARIO_PURIFIED = 1795;
		SKORUPI_NORMAL = 1796;
		SKORUPI_SHADOW = 1797;
		SKORUPI_PURIFIED = 1798;
		DRAPION_NORMAL = 1799;
		DRAPION_SHADOW = 1800;
		DRAPION_PURIFIED = 1801;
		CROAGUNK_NORMAL = 1802;
		CROAGUNK_SHADOW = 1803;
		CROAGUNK_PURIFIED = 1804;
		TOXICROAK_NORMAL = 1805;
		TOXICROAK_SHADOW = 1806;
		TOXICROAK_PURIFIED = 1807;
		CARNIVINE_NORMAL = 1808;
		CARNIVINE_SHADOW = 1809;
		CARNIVINE_PURIFIED = 1810;
		FINNEON_NORMAL = 1811;
		FINNEON_SHADOW = 1812;
		FINNEON_PURIFIED = 1813;
		LUMINEON_NORMAL = 1814;
		LUMINEON_SHADOW = 1815;
		LUMINEON_PURIFIED = 1816;
		MANTYKE_NORMAL = 1817;
		MANTYKE_SHADOW = 1818;
		MANTYKE_PURIFIED = 1819;
		LICKILICKY_NORMAL = 1820;
		LICKILICKY_SHADOW = 1821;
		LICKILICKY_PURIFIED = 1822;
		TANGROWTH_NORMAL = 1823;
		TANGROWTH_SHADOW = 1824;
		TANGROWTH_PURIFIED = 1825;
		TOGEKISS_NORMAL = 1826;
		TOGEKISS_SHADOW = 1827;
		TOGEKISS_PURIFIED = 1828;
		YANMEGA_NORMAL = 1829;
		YANMEGA_SHADOW = 1830;
		YANMEGA_PURIFIED = 1831;
		LEAFEON_NORMAL = 1832;
		LEAFEON_SHADOW = 1833;
		LEAFEON_PURIFIED = 1834;
		GLACEON_NORMAL = 1835;
		GLACEON_SHADOW = 1836;
		GLACEON_PURIFIED = 1837;
		MAMOSWINE_NORMAL = 1838;
		MAMOSWINE_SHADOW = 1839;
		MAMOSWINE_PURIFIED = 1840;
		PROBOPASS_NORMAL = 1841;
		PROBOPASS_SHADOW = 1842;
		PROBOPASS_PURIFIED = 1843;
		FROSLASS_NORMAL = 1844;
		FROSLASS_SHADOW = 1845;
		FROSLASS_PURIFIED = 1846;
		UXIE_NORMAL = 1847;
		UXIE_SHADOW = 1848;
		UXIE_PURIFIED = 1849;
		MESPRIT_NORMAL = 1850;
		MESPRIT_SHADOW = 1851;
		MESPRIT_PURIFIED = 1852;
		AZELF_NORMAL = 1853;
		AZELF_SHADOW = 1854;
		AZELF_PURIFIED = 1855;
		DIALGA_NORMAL = 1856;
		DIALGA_SHADOW = 1857;
		DIALGA_PURIFIED = 1858;
		PALKIA_NORMAL = 1859;
		PALKIA_SHADOW = 1860;
		PALKIA_PURIFIED = 1861;
		HEATRAN_NORMAL = 1862;
		HEATRAN_SHADOW = 1863;
		HEATRAN_PURIFIED = 1864;
		REGIGIGAS_NORMAL = 1865;
		REGIGIGAS_SHADOW = 1866;
		REGIGIGAS_PURIFIED = 1867;
		GIRATINA_NORMAL = 1868;
		GIRATINA_SHADOW = 1869;
		GIRATINA_PURIFIED = 1870;
		CRESSELIA_NORMAL = 1871;
		CRESSELIA_SHADOW = 1872;
		CRESSELIA_PURIFIED = 1873;
		PHIONE_NORMAL = 1874;
		PHIONE_SHADOW = 1875;
		PHIONE_PURIFIED = 1876;
		MANAPHY_NORMAL = 1877;
		MANAPHY_SHADOW = 1878;
		MANAPHY_PURIFIED = 1879;
		DARKRAI_NORMAL = 1880;
		DARKRAI_SHADOW = 1881;
		DARKRAI_PURIFIED = 1882;
		SHAYMIN_NORMAL = 1883;
		SHAYMIN_SHADOW = 1884;
		SHAYMIN_PURIFIED = 1885;
		VICTINI_NORMAL = 1886;
		VICTINI_SHADOW = 1887;
		VICTINI_PURIFIED = 1888;
		SNIVY_NORMAL = 1889;
		SNIVY_SHADOW = 1890;
		SNIVY_PURIFIED = 1891;
		SERVINE_NORMAL = 1892;
		SERVINE_SHADOW = 1893;
		SERVINE_PURIFIED = 1894;
		SERPERIOR_NORMAL = 1895;
		SERPERIOR_SHADOW = 1896;
		SERPERIOR_PURIFIED = 1897;
		TEPIG_NORMAL = 1898;
		TEPIG_SHADOW = 1899;
		TEPIG_PURIFIED = 1900;
		PIGNITE_NORMAL = 1901;
		PIGNITE_SHADOW = 1902;
		PIGNITE_PURIFIED = 1903;
		EMBOAR_NORMAL = 1904;
		EMBOAR_SHADOW = 1905;
		EMBOAR_PURIFIED = 1906;
		OSHAWOTT_NORMAL = 1907;
		OSHAWOTT_SHADOW = 1908;
		OSHAWOTT_PURIFIED = 1909;
		DEWOTT_NORMAL = 1910;
		DEWOTT_SHADOW = 1911;
		DEWOTT_PURIFIED = 1912;
		SAMUROTT_NORMAL = 1913;
		SAMUROTT_SHADOW = 1914;
		SAMUROTT_PURIFIED = 1915;
		PATRAT_NORMAL = 1916;
		PATRAT_SHADOW = 1917;
		PATRAT_PURIFIED = 1918;
		WATCHOG_NORMAL = 1919;
		WATCHOG_SHADOW = 1920;
		WATCHOG_PURIFIED = 1921;
		LILLIPUP_NORMAL = 1922;
		LILLIPUP_SHADOW = 1923;
		LILLIPUP_PURIFIED = 1924;
		HERDIER_NORMAL = 1925;
		HERDIER_SHADOW = 1926;
		HERDIER_PURIFIED = 1927;
		STOUTLAND_NORMAL = 1928;
		STOUTLAND_SHADOW = 1929;
		STOUTLAND_PURIFIED = 1930;
		PURRLOIN_NORMAL = 1931;
		PURRLOIN_SHADOW = 1932;
		PURRLOIN_PURIFIED = 1933;
		LIEPARD_NORMAL = 1934;
		LIEPARD_SHADOW = 1935;
		LIEPARD_PURIFIED = 1936;
		PANSAGE_NORMAL = 1937;
		PANSAGE_SHADOW = 1938;
		PANSAGE_PURIFIED = 1939;
		SIMISAGE_NORMAL = 1940;
		SIMISAGE_SHADOW = 1941;
		SIMISAGE_PURIFIED = 1942;
		PANSEAR_NORMAL = 1943;
		PANSEAR_SHADOW = 1944;
		PANSEAR_PURIFIED = 1945;
		SIMISEAR_NORMAL = 1946;
		SIMISEAR_SHADOW = 1947;
		SIMISEAR_PURIFIED = 1948;
		PANPOUR_NORMAL = 1949;
		PANPOUR_SHADOW = 1950;
		PANPOUR_PURIFIED = 1951;
		SIMIPOUR_NORMAL = 1952;
		SIMIPOUR_SHADOW = 1953;
		SIMIPOUR_PURIFIED = 1954;
		MUNNA_NORMAL = 1955;
		MUNNA_SHADOW = 1956;
		MUNNA_PURIFIED = 1957;
		MUSHARNA_NORMAL = 1958;
		MUSHARNA_SHADOW = 1959;
		MUSHARNA_PURIFIED = 1960;
		PIDOVE_NORMAL = 1961;
		PIDOVE_SHADOW = 1962;
		PIDOVE_PURIFIED = 1963;
		TRANQUILL_NORMAL = 1964;
		TRANQUILL_SHADOW = 1965;
		TRANQUILL_PURIFIED = 1966;
		UNFEZANT_NORMAL = 1967;
		UNFEZANT_SHADOW = 1968;
		UNFEZANT_PURIFIED = 1969;
		BLITZLE_NORMAL = 1970;
		BLITZLE_SHADOW = 1971;
		BLITZLE_PURIFIED = 1972;
		ZEBSTRIKA_NORMAL = 1973;
		ZEBSTRIKA_SHADOW = 1974;
		ZEBSTRIKA_PURIFIED = 1975;
		ROGGENROLA_NORMAL = 1976;
		ROGGENROLA_SHADOW = 1977;
		ROGGENROLA_PURIFIED = 1978;
		BOLDORE_NORMAL = 1979;
		BOLDORE_SHADOW = 1980;
		BOLDORE_PURIFIED = 1981;
		GIGALITH_NORMAL = 1982;
		GIGALITH_SHADOW = 1983;
		GIGALITH_PURIFIED = 1984;
		WOOBAT_NORMAL = 1985;
		WOOBAT_SHADOW = 1986;
		WOOBAT_PURIFIED = 1987;
		SWOOBAT_NORMAL = 1988;
		SWOOBAT_SHADOW = 1989;
		SWOOBAT_PURIFIED = 1990;
		DRILBUR_NORMAL = 1991;
		DRILBUR_SHADOW = 1992;
		DRILBUR_PURIFIED = 1993;
		EXCADRILL_NORMAL = 1994;
		EXCADRILL_SHADOW = 1995;
		EXCADRILL_PURIFIED = 1996;
		AUDINO_NORMAL = 1997;
		AUDINO_SHADOW = 1998;
		AUDINO_PURIFIED = 1999;
		TIMBURR_NORMAL = 2000;
		TIMBURR_SHADOW = 2001;
		TIMBURR_PURIFIED = 2002;
		GURDURR_NORMAL = 2003;
		GURDURR_SHADOW = 2004;
		GURDURR_PURIFIED = 2005;
		CONKELDURR_NORMAL = 2006;
		CONKELDURR_SHADOW = 2007;
		CONKELDURR_PURIFIED = 2008;
		TYMPOLE_NORMAL = 2009;
		TYMPOLE_SHADOW = 2010;
		TYMPOLE_PURIFIED = 2011;
		PALPITOAD_NORMAL = 2012;
		PALPITOAD_SHADOW = 2013;
		PALPITOAD_PURIFIED = 2014;
		SEISMITOAD_NORMAL = 2015;
		SEISMITOAD_SHADOW = 2016;
		SEISMITOAD_PURIFIED = 2017;
		THROH_NORMAL = 2018;
		THROH_SHADOW = 2019;
		THROH_PURIFIED = 2020;
		SAWK_NORMAL = 2021;
		SAWK_SHADOW = 2022;
		SAWK_PURIFIED = 2023;
		SEWADDLE_NORMAL = 2024;
		SEWADDLE_SHADOW = 2025;
		SEWADDLE_PURIFIED = 2026;
		SWADLOON_NORMAL = 2027;
		SWADLOON_SHADOW = 2028;
		SWADLOON_PURIFIED = 2029;
		LEAVANNY_NORMAL = 2030;
		LEAVANNY_SHADOW = 2031;
		LEAVANNY_PURIFIED = 2032;
		VENIPEDE_NORMAL = 2033;
		VENIPEDE_SHADOW = 2034;
		VENIPEDE_PURIFIED = 2035;
		WHIRLIPEDE_NORMAL = 2036;
		WHIRLIPEDE_SHADOW = 2037;
		WHIRLIPEDE_PURIFIED = 2038;
		SCOLIPEDE_NORMAL = 2039;
		SCOLIPEDE_SHADOW = 2040;
		SCOLIPEDE_PURIFIED = 2041;
		COTTONEE_NORMAL = 2042;
		COTTONEE_SHADOW = 2043;
		COTTONEE_PURIFIED = 2044;
		WHIMSICOTT_NORMAL = 2045;
		WHIMSICOTT_SHADOW = 2046;
		WHIMSICOTT_PURIFIED = 2047;
		PETILIL_NORMAL = 2048;
		PETILIL_SHADOW = 2049;
		PETILIL_PURIFIED = 2050;
		LILLIGANT_NORMAL = 2051;
		LILLIGANT_SHADOW = 2052;
		LILLIGANT_PURIFIED = 2053;
		SANDILE_NORMAL = 2054;
		SANDILE_SHADOW = 2055;
		SANDILE_PURIFIED = 2056;
		KROKOROK_NORMAL = 2057;
		KROKOROK_SHADOW = 2058;
		KROKOROK_PURIFIED = 2059;
		KROOKODILE_NORMAL = 2060;
		KROOKODILE_SHADOW = 2061;
		KROOKODILE_PURIFIED = 2062;
		DARUMAKA_NORMAL = 2063;
		DARUMAKA_SHADOW = 2064;
		DARUMAKA_PURIFIED = 2065;
		MARACTUS_NORMAL = 2066;
		MARACTUS_SHADOW = 2067;
		MARACTUS_PURIFIED = 2068;
		DWEBBLE_NORMAL = 2069;
		DWEBBLE_SHADOW = 2070;
		DWEBBLE_PURIFIED = 2071;
		CRUSTLE_NORMAL = 2072;
		CRUSTLE_SHADOW = 2073;
		CRUSTLE_PURIFIED = 2074;
		SCRAGGY_NORMAL = 2075;
		SCRAGGY_SHADOW = 2076;
		SCRAGGY_PURIFIED = 2077;
		SCRAFTY_NORMAL = 2078;
		SCRAFTY_SHADOW = 2079;
		SCRAFTY_PURIFIED = 2080;
		SIGILYPH_NORMAL = 2081;
		SIGILYPH_SHADOW = 2082;
		SIGILYPH_PURIFIED = 2083;
		YAMASK_NORMAL = 2084;
		YAMASK_SHADOW = 2085;
		YAMASK_PURIFIED = 2086;
		COFAGRIGUS_NORMAL = 2087;
		COFAGRIGUS_SHADOW = 2088;
		COFAGRIGUS_PURIFIED = 2089;
		TIRTOUGA_NORMAL = 2090;
		TIRTOUGA_SHADOW = 2091;
		TIRTOUGA_PURIFIED = 2092;
		CARRACOSTA_NORMAL = 2093;
		CARRACOSTA_SHADOW = 2094;
		CARRACOSTA_PURIFIED = 2095;
		ARCHEN_NORMAL = 2096;
		ARCHEN_SHADOW = 2097;
		ARCHEN_PURIFIED = 2098;
		ARCHEOPS_NORMAL = 2099;
		ARCHEOPS_SHADOW = 2100;
		ARCHEOPS_PURIFIED = 2101;
		TRUBBISH_NORMAL = 2102;
		TRUBBISH_SHADOW = 2103;
		TRUBBISH_PURIFIED = 2104;
		GARBODOR_NORMAL = 2105;
		GARBODOR_SHADOW = 2106;
		GARBODOR_PURIFIED = 2107;
		ZORUA_NORMAL = 2108;
		ZORUA_SHADOW = 2109;
		ZORUA_PURIFIED = 2110;
		ZOROARK_NORMAL = 2111;
		ZOROARK_SHADOW = 2112;
		ZOROARK_PURIFIED = 2113;
		MINCCINO_NORMAL = 2114;
		MINCCINO_SHADOW = 2115;
		MINCCINO_PURIFIED = 2116;
		CINCCINO_NORMAL = 2117;
		CINCCINO_SHADOW = 2118;
		CINCCINO_PURIFIED = 2119;
		GOTHITA_NORMAL = 2120;
		GOTHITA_SHADOW = 2121;
		GOTHITA_PURIFIED = 2122;
		GOTHORITA_NORMAL = 2123;
		GOTHORITA_SHADOW = 2124;
		GOTHORITA_PURIFIED = 2125;
		GOTHITELLE_NORMAL = 2126;
		GOTHITELLE_SHADOW = 2127;
		GOTHITELLE_PURIFIED = 2128;
		SOLOSIS_NORMAL = 2129;
		SOLOSIS_SHADOW = 2130;
		SOLOSIS_PURIFIED = 2131;
		DUOSION_NORMAL = 2132;
		DUOSION_SHADOW = 2133;
		DUOSION_PURIFIED = 2134;
		REUNICLUS_NORMAL = 2135;
		REUNICLUS_SHADOW = 2136;
		REUNICLUS_PURIFIED = 2137;
		DUCKLETT_NORMAL = 2138;
		DUCKLETT_SHADOW = 2139;
		DUCKLETT_PURIFIED = 2140;
		SWANNA_NORMAL = 2141;
		SWANNA_SHADOW = 2142;
		SWANNA_PURIFIED = 2143;
		VANILLITE_NORMAL = 2144;
		VANILLITE_SHADOW = 2145;
		VANILLITE_PURIFIED = 2146;
		VANILLISH_NORMAL = 2147;
		VANILLISH_SHADOW = 2148;
		VANILLISH_PURIFIED = 2149;
		VANILLUXE_NORMAL = 2150;
		VANILLUXE_SHADOW = 2151;
		VANILLUXE_PURIFIED = 2152;
		EMOLGA_NORMAL = 2153;
		EMOLGA_SHADOW = 2154;
		EMOLGA_PURIFIED = 2155;
		KARRABLAST_NORMAL = 2156;
		KARRABLAST_SHADOW = 2157;
		KARRABLAST_PURIFIED = 2158;
		ESCAVALIER_NORMAL = 2159;
		ESCAVALIER_SHADOW = 2160;
		ESCAVALIER_PURIFIED = 2161;
		FOONGUS_NORMAL = 2162;
		FOONGUS_SHADOW = 2163;
		FOONGUS_PURIFIED = 2164;
		AMOONGUSS_NORMAL = 2165;
		AMOONGUSS_SHADOW = 2166;
		AMOONGUSS_PURIFIED = 2167;
		FRILLISH_NORMAL = 2168;
		FRILLISH_SHADOW = 2169;
		FRILLISH_PURIFIED = 2170;
		JELLICENT_NORMAL = 2171;
		JELLICENT_SHADOW = 2172;
		JELLICENT_PURIFIED = 2173;
		ALOMOMOLA_NORMAL = 2174;
		ALOMOMOLA_SHADOW = 2175;
		ALOMOMOLA_PURIFIED = 2176;
		JOLTIK_NORMAL = 2177;
		JOLTIK_SHADOW = 2178;
		JOLTIK_PURIFIED = 2179;
		GALVANTULA_NORMAL = 2180;
		GALVANTULA_SHADOW = 2181;
		GALVANTULA_PURIFIED = 2182;
		FERROSEED_NORMAL = 2183;
		FERROSEED_SHADOW = 2184;
		FERROSEED_PURIFIED = 2185;
		FERROTHORN_NORMAL = 2186;
		FERROTHORN_SHADOW = 2187;
		FERROTHORN_PURIFIED = 2188;
		KLINK_NORMAL = 2189;
		KLINK_SHADOW = 2190;
		KLINK_PURIFIED = 2191;
		KLANG_NORMAL = 2192;
		KLANG_SHADOW = 2193;
		KLANG_PURIFIED = 2194;
		KLINKLANG_NORMAL = 2195;
		KLINKLANG_SHADOW = 2196;
		KLINKLANG_PURIFIED = 2197;
		TYNAMO_NORMAL = 2198;
		TYNAMO_SHADOW = 2199;
		TYNAMO_PURIFIED = 2200;
		EELEKTRIK_NORMAL = 2201;
		EELEKTRIK_SHADOW = 2202;
		EELEKTRIK_PURIFIED = 2203;
		EELEKTROSS_NORMAL = 2204;
		EELEKTROSS_SHADOW = 2205;
		EELEKTROSS_PURIFIED = 2206;
		ELGYEM_NORMAL = 2207;
		ELGYEM_SHADOW = 2208;
		ELGYEM_PURIFIED = 2209;
		BEHEEYEM_NORMAL = 2210;
		BEHEEYEM_SHADOW = 2211;
		BEHEEYEM_PURIFIED = 2212;
		LITWICK_NORMAL = 2213;
		LITWICK_SHADOW = 2214;
		LITWICK_PURIFIED = 2215;
		LAMPENT_NORMAL = 2216;
		LAMPENT_SHADOW = 2217;
		LAMPENT_PURIFIED = 2218;
		CHANDELURE_NORMAL = 2219;
		CHANDELURE_SHADOW = 2220;
		CHANDELURE_PURIFIED = 2221;
		AXEW_NORMAL = 2222;
		AXEW_SHADOW = 2223;
		AXEW_PURIFIED = 2224;
		FRAXURE_NORMAL = 2225;
		FRAXURE_SHADOW = 2226;
		FRAXURE_PURIFIED = 2227;
		HAXORUS_NORMAL = 2228;
		HAXORUS_SHADOW = 2229;
		HAXORUS_PURIFIED = 2230;
		CUBCHOO_NORMAL = 2231;
		CUBCHOO_SHADOW = 2232;
		CUBCHOO_PURIFIED = 2233;
		BEARTIC_NORMAL = 2234;
		BEARTIC_SHADOW = 2235;
		BEARTIC_PURIFIED = 2236;
		CRYOGONAL_NORMAL = 2237;
		CRYOGONAL_SHADOW = 2238;
		CRYOGONAL_PURIFIED = 2239;
		SHELMET_NORMAL = 2240;
		SHELMET_SHADOW = 2241;
		SHELMET_PURIFIED = 2242;
		ACCELGOR_NORMAL = 2243;
		ACCELGOR_SHADOW = 2244;
		ACCELGOR_PURIFIED = 2245;
		STUNFISK_NORMAL = 2246;
		STUNFISK_SHADOW = 2247;
		STUNFISK_PURIFIED = 2248;
		MIENFOO_NORMAL = 2249;
		MIENFOO_SHADOW = 2250;
		MIENFOO_PURIFIED = 2251;
		MIENSHAO_NORMAL = 2252;
		MIENSHAO_SHADOW = 2253;
		MIENSHAO_PURIFIED = 2254;
		DRUDDIGON_NORMAL = 2255;
		DRUDDIGON_SHADOW = 2256;
		DRUDDIGON_PURIFIED = 2257;
		GOLETT_NORMAL = 2258;
		GOLETT_SHADOW = 2259;
		GOLETT_PURIFIED = 2260;
		GOLURK_NORMAL = 2261;
		GOLURK_SHADOW = 2262;
		GOLURK_PURIFIED = 2263;
		PAWNIARD_NORMAL = 2264;
		PAWNIARD_SHADOW = 2265;
		PAWNIARD_PURIFIED = 2266;
		BISHARP_NORMAL = 2267;
		BISHARP_SHADOW = 2268;
		BISHARP_PURIFIED = 2269;
		BOUFFALANT_NORMAL = 2270;
		BOUFFALANT_SHADOW = 2271;
		BOUFFALANT_PURIFIED = 2272;
		RUFFLET_NORMAL = 2273;
		RUFFLET_SHADOW = 2274;
		RUFFLET_PURIFIED = 2275;
		BRAVIARY_NORMAL = 2276;
		BRAVIARY_SHADOW = 2277;
		BRAVIARY_PURIFIED = 2278;
		VULLABY_NORMAL = 2279;
		VULLABY_SHADOW = 2280;
		VULLABY_PURIFIED = 2281;
		MANDIBUZZ_NORMAL = 2282;
		MANDIBUZZ_SHADOW = 2283;
		MANDIBUZZ_PURIFIED = 2284;
		HEATMOR_NORMAL = 2285;
		HEATMOR_SHADOW = 2286;
		HEATMOR_PURIFIED = 2287;
		DURANT_NORMAL = 2288;
		DURANT_SHADOW = 2289;
		DURANT_PURIFIED = 2290;
		DEINO_NORMAL = 2291;
		DEINO_SHADOW = 2292;
		DEINO_PURIFIED = 2293;
		ZWEILOUS_NORMAL = 2294;
		ZWEILOUS_SHADOW = 2295;
		ZWEILOUS_PURIFIED = 2296;
		HYDREIGON_NORMAL = 2297;
		HYDREIGON_SHADOW = 2298;
		HYDREIGON_PURIFIED = 2299;
		LARVESTA_NORMAL = 2300;
		LARVESTA_SHADOW = 2301;
		LARVESTA_PURIFIED = 2302;
		VOLCARONA_NORMAL = 2303;
		VOLCARONA_SHADOW = 2304;
		VOLCARONA_PURIFIED = 2305;
		COBALION_NORMAL = 2306;
		COBALION_SHADOW = 2307;
		COBALION_PURIFIED = 2308;
		TERRAKION_NORMAL = 2309;
		TERRAKION_SHADOW = 2310;
		TERRAKION_PURIFIED = 2311;
		VIRIZION_NORMAL = 2312;
		VIRIZION_SHADOW = 2313;
		VIRIZION_PURIFIED = 2314;
		RESHIRAM_NORMAL = 2315;
		RESHIRAM_SHADOW = 2316;
		RESHIRAM_PURIFIED = 2317;
		ZEKROM_NORMAL = 2318;
		ZEKROM_SHADOW = 2319;
		ZEKROM_PURIFIED = 2320;
		MELTAN_NORMAL = 2321;
		MELTAN_SHADOW = 2322;
		MELTAN_PURIFIED = 2323;
		MELMETAL_NORMAL = 2324;
		MELMETAL_SHADOW = 2325;
		MELMETAL_PURIFIED = 2326;
		WURMPLE_SPRING_2020 = 2327;
		WOBBUFFET_SPRING_2020 = 2328;
		RATICATE_SPRING_2020 = 2329;
		FRILLISH_FEMALE = 2330;
		JELLICENT_FEMALE = 2331;
		PIKACHU_COSTUME_2020 = 2332;
		DRAGONITE_COSTUME_2020 = 2333;
		ONIX_COSTUME_2020 = 2334;
		MEOWTH_GALARIAN = 2335;
		PONYTA_GALARIAN = 2336;
		RAPIDASH_GALARIAN = 2337;
		FARFETCHD_GALARIAN = 2338;
		MR_MIME_GALARIAN = 2339;
		CORSOLA_GALARIAN = 2340;
		DARUMAKA_GALARIAN = 2341;
		DARMANITAN_GALARIAN_STANDARD = 2342;
		DARMANITAN_GALARIAN_ZEN = 2343;
		YAMASK_GALARIAN = 2344;
		STUNFISK_GALARIAN = 2345;
		TOXTRICITY_LOW_KEY = 2463;
		TOXTRICITY_AMPED = 2464;
		SINISTEA_PHONY = 2477;
		SINISTEA_ANTIQUE = 2478;
		POLTEAGEIST_PHONY = 2480;
		POLTEAGEIST_ANTIQUE = 2481;
		OBSTAGOON_NORMAL = 2501;
		OBSTAGOON_SHADOW = 2502;
		OBSTAGOON_PURIFIED = 2503;
		PERRSERKER_NORMAL = 2504;
		PERRSERKER_SHADOW = 2505;
		PERRSERKER_PURIFIED = 2506;
		CURSOLA_NORMAL = 2507;
		CURSOLA_SHADOW = 2508;
		CURSOLA_PURIFIED = 2509;
		SIRFETCHD_NORMAL = 2510;
		SIRFETCHD_SHADOW = 2511;
		SIRFETCHD_PURIFIED = 2512;
		MR_RIME_NORMAL = 2513;
		MR_RIME_SHADOW = 2514;
		MR_RIME_PURIFIED = 2515;
		RUNERIGUS_NORMAL = 2516;
		RUNERIGUS_SHADOW = 2517;
		RUNERIGUS_PURIFIED = 2518;
		EISCUE_ICE = 2540;
		EISCUE_NOICE = 2541;
		INDEEDEE_MALE = 2542;
		INDEEDEE_FEMALE = 2543;
		MORPEKO_FULL_BELLY = 2544;
		MORPEKO_HANGRY = 2545;
		ZACIAN_CROWNED_SWORD = 2576;
		ZACIAN_HERO = 2577;
		ZAMAZENTA_CROWNED_SHIELD = 2578;
		ZAMAZENTA_HERO = 2579;
		ETERNATUS_ETERNAMAX = 2580;
		ETERNATUS_NORMAL = 2581;
		SLOWPOKE_GALARIAN = 2582;
		SLOWBRO_GALARIAN = 2583;
		SLOWKING_GALARIAN = 2584;
		LAPRAS_COSTUME_2020 = 2585;
		GENGAR_COSTUME_2020 = 2586;
		PYROAR_NORMAL = 2587;
		PYROAR_FEMALE = 2588;
		MEOWSTIC_NORMAL = 2589;
		MEOWSTIC_FEMALE = 2590;
		ZYGARDE_TEN_PERCENT = 2591;
		ZYGARDE_FIFTY_PERCENT = 2592;
		ZYGARDE_COMPLETE = 2593;
		VIVILLON_ARCHIPELAGO = 2594;
		VIVILLON_CONTINENTAL = 2595;
		VIVILLON_ELEGANT = 2596;
		VIVILLON_FANCY = 2597;
		VIVILLON_GARDEN = 2598;
		VIVILLON_HIGH_PLAINS = 2599;
		VIVILLON_ICY_SNOW = 2600;
		VIVILLON_JUNGLE = 2601;
		VIVILLON_MARINE = 2602;
		VIVILLON_MEADOW = 2603;
		VIVILLON_MODERN = 2604;
		VIVILLON_MONSOON = 2605;
		VIVILLON_OCEAN = 2606;
		VIVILLON_POKEBALL = 2607;
		VIVILLON_POLAR = 2608;
		VIVILLON_RIVER = 2609;
		VIVILLON_SANDSTORM = 2610;
		VIVILLON_SAVANNA = 2611;
		VIVILLON_SUN = 2612;
		VIVILLON_TUNDRA = 2613;
		FLABEBE_RED = 2614;
		FLABEBE_YELLOW = 2615;
		FLABEBE_ORANGE = 2616;
		FLABEBE_BLUE = 2617;
		FLABEBE_WHITE = 2618;
		FLOETTE_RED = 2619;
		FLOETTE_YELLOW = 2620;
		FLOETTE_ORANGE = 2621;
		FLOETTE_BLUE = 2622;
		FLOETTE_WHITE = 2623;
		FLORGES_RED = 2624;
		FLORGES_YELLOW = 2625;
		FLORGES_ORANGE = 2626;
		FLORGES_BLUE = 2627;
		FLORGES_WHITE = 2628;
		FURFROU_NATURAL = 2629;
		FURFROU_HEART = 2630;
		FURFROU_STAR = 2631;
		FURFROU_DIAMOND = 2632;
		FURFROU_DEBUTANTE = 2633;
		FURFROU_MATRON = 2634;
		FURFROU_DANDY = 2635;
		FURFROU_LA_REINE = 2636;
		FURFROU_KABUKI = 2637;
		FURFROU_PHARAOH = 2638;
		AEGISLASH_SHIELD = 2639;
		AEGISLASH_BLADE = 2640;
		PUMPKABOO_SMALL = 2641;
		PUMPKABOO_AVERAGE = 2642;
		PUMPKABOO_LARGE = 2643;
		PUMPKABOO_SUPER = 2644;
		GOURGEIST_SMALL = 2645;
		GOURGEIST_AVERAGE = 2646;
		GOURGEIST_LARGE = 2647;
		GOURGEIST_SUPER = 2648;
		XERNEAS_NEUTRAL = 2649;
		XERNEAS_ACTIVE = 2650;
		HOOPA_CONFINED = 2651;
		HOOPA_UNBOUND = 2652;
		SABLEYE_COSTUME_2020_DEPRECATED = 2666;
		SABLEYE_COSTUME_2020 = 2668;
		PIKACHU_ADVENTURE_HAT_2020 = 2669;
		PIKACHU_WINTER_2020 = 2670;
		DELIBIRD_WINTER_2020 = 2671;
		CUBCHOO_WINTER_2020 = 2672;
		SLOWPOKE_2020 = 2673;
		SLOWBRO_2021 = 2674;
		PIKACHU_KARIYUSHI = 2675;
		PIKACHU_POP_STAR = 2676;
		PIKACHU_ROCK_STAR = 2677;
		PIKACHU_FLYING_5TH_ANNIV = 2678;
		ORICORIO_BAILE = 2679;
		ORICORIO_POMPOM = 2680;
		ORICORIO_PAU = 2681;
		ORICORIO_SENSU = 2683;
		LYCANROC_MIDDAY = 2684;
		LYCANROC_MIDNIGHT = 2685;
		LYCANROC_DUSK = 2686;
		WISHIWASHI_SOLO = 2687;
		WISHIWASHI_SCHOOL = 2688;
		SILVALLY_NORMAL = 2689;
		SILVALLY_BUG = 2690;
		SILVALLY_DARK = 2691;
		SILVALLY_DRAGON = 2692;
		SILVALLY_ELECTRIC = 2693;
		SILVALLY_FAIRY = 2694;
		SILVALLY_FIGHTING = 2695;
		SILVALLY_FIRE = 2696;
		SILVALLY_FLYING = 2697;
		SILVALLY_GHOST = 2698;
		SILVALLY_GRASS = 2699;
		SILVALLY_GROUND = 2700;
		SILVALLY_ICE = 2701;
		SILVALLY_POISON = 2702;
		SILVALLY_PSYCHIC = 2703;
		SILVALLY_ROCK = 2704;
		SILVALLY_STEEL = 2705;
		SILVALLY_WATER = 2706;
		MINIOR_METEOR_BLUE = 2707;
		MINIOR_BLUE = 2708;
		MINIOR_GREEN = 2709;
		MINIOR_INDIGO = 2710;
		MINIOR_ORANGE = 2711;
		MINIOR_RED = 2712;
		MINIOR_VIOLET = 2713;
		MINIOR_YELLOW = 2714;
		MIMIKYU_BUSTED = 2715;
		MIMIKYU_DISGUISED = 2716;
		NECROZMA_NORMAL = 2717;
		NECROZMA_DUSK_MANE = 2718;
		NECROZMA_DAWN_WINGS = 2719;
		NECROZMA_ULTRA = 2720;
		MAGEARNA_NORMAL = 2721;
		MAGEARNA_ORIGINAL_COLOR = 2722;
		URSHIFU_SINGLE_STRIKE = 2723;
		URSHIFU_RAPID_STRIKE = 2724;
		CALYREX_NORMAL = 2725;
		CALYREX_ICE_RIDER = 2726;
		CALYREX_SHADOW_RIDER = 2727;
		VOLTORB_HISUIAN = 2728;
		LUGIA_S = 2729;
		HO_OH_S = 2730;
		RAIKOU_S = 2731;
		ENTEI_S = 2732;
		SUICUNE_S = 2733;
		SLOWKING_2022 = 2734;
		ELECTRODE_HISUIAN = 2735;
		PIKACHU_FLYING_OKINAWA = 2736;
		ROCKRUFF_DUSK = 2737;
		MINIOR_METEOR_GREEN = 2739;
		MINIOR_METEOR_INDIGO = 2740;
		MINIOR_METEOR_ORANGE = 2741;
		MINIOR_METEOR_RED = 2742;
		MINIOR_METEOR_VIOLET = 2743;
		MINIOR_METEOR_YELLOW = 2744;
		SCATTERBUG_ARCHIPELAGO = 2745;
		SCATTERBUG_CONTINENTAL = 2746;
		SCATTERBUG_ELEGANT = 2747;
		SCATTERBUG_FANCY = 2748;
		SCATTERBUG_GARDEN = 2749;
		SCATTERBUG_HIGH_PLAINS = 2750;
		SCATTERBUG_ICY_SNOW = 2751;
		SCATTERBUG_JUNGLE = 2752;
		SCATTERBUG_MARINE = 2753;
		SCATTERBUG_MEADOW = 2754;
		SCATTERBUG_MODERN = 2755;
		SCATTERBUG_MONSOON = 2756;
		SCATTERBUG_OCEAN = 2757;
		SCATTERBUG_POKEBALL = 2758;
		SCATTERBUG_POLAR = 2759;
		SCATTERBUG_RIVER = 2760;
		SCATTERBUG_SANDSTORM = 2761;
		SCATTERBUG_SAVANNA = 2762;
		SCATTERBUG_SUN = 2763;
		SCATTERBUG_TUNDRA = 2764;
		SPEWPA_ARCHIPELAGO = 2765;
		SPEWPA_CONTINENTAL = 2766;
		SPEWPA_ELEGANT = 2767;
		SPEWPA_FANCY = 2768;
		SPEWPA_GARDEN = 2769;
		SPEWPA_HIGH_PLAINS = 2770;
		SPEWPA_ICY_SNOW = 2771;
		SPEWPA_JUNGLE = 2772;
		SPEWPA_MARINE = 2773;
		SPEWPA_MEADOW = 2774;
		SPEWPA_MODERN = 2775;
		SPEWPA_MONSOON = 2776;
		SPEWPA_OCEAN = 2777;
		SPEWPA_POKEBALL = 2778;
		SPEWPA_POLAR = 2779;
		SPEWPA_RIVER = 2780;
		SPEWPA_SANDSTORM = 2781;
		SPEWPA_SAVANNA = 2782;
		SPEWPA_SUN = 2783;
		SPEWPA_TUNDRA = 2784;
		DECIDUEYE_HISUIAN = 2785;
		TYPHLOSION_HISUIAN = 2786;
		SAMUROTT_HISUIAN = 2787;
		QWILFISH_HISUIAN = 2788;
		LILLIGANT_HISUIAN = 2789;
		SLIGGOO_HISUIAN = 2790;
		GOODRA_HISUIAN = 2791;
		GROWLITHE_HISUIAN = 2792;
		ARCANINE_HISUIAN = 2793;
		SNEASEL_HISUIAN = 2794;
		AVALUGG_HISUIAN = 2795;
		ZORUA_HISUIAN = 2796;
		ZOROARK_HISUIAN = 2797;
		BRAVIARY_HISUIAN = 2798;
		MOLTRES_GALARIAN = 2799;
		ZAPDOS_GALARIAN = 2800;
		ARTICUNO_GALARIAN = 2801;
		ENAMORUS_INCARNATE = 2802;
		ENAMORUS_THERIAN = 2803;
		BASCULIN_WHITE_STRIPED = 2804;
		PIKACHU_GOFEST_2022 = 2805;
	}

	enum KJGDPFEEFAJ {
		GENDER_UNSET = 0;
		MALE = 1;
		FEMALE = 2;
		GENDERLESS = 3;
	}

	BNNGGJPIPIH klnlllpannh = 1;
	KJGDPFEEFAJ fmndeglcfbp = 2;
	bool hpmncphhkfg = 3;
	IBGFAGKHKGN cdnlplomkgo = 4;
	GameplayWeatherProto.WeatherCondition ibpefkllkjo = 5;
	DDEDEGGJGPH ckahpbnljmg = 6;
	GEHCPPAAPNF mianiijjcfg = 7;
	GMICNCPLCMG jkaacbeimpn = 8;
	int64 nbfajofcdkg = 9;
	bool cdnbodjiele = 10;
	GMICNCPLCMG jkjcanpagdk = 11;
	BNNGGJPIPIH kebboddpejc = 12;
	int64 aplbolfdmbf = 13;
	EGFAAGMDKOI jpdhhboacga = 14;
}

message ICDPIDDAENN {
	oneof MCIFLOMBKNM {
		DPMBDHJOJFH pokemon_trade_response = 1;
		GEFNPLBMKPI pokemon_compare_response = 2;
		KIMCHNHODJH gift_trade_response = 3;
	}

	message DPMBDHJOJFH {
		enum GCBOFLKPBGG {
			UNSET = 0;
			SUCCESS = 1;
			ERROR_INVALID_POKEMON = 2;
		}

		GCBOFLKPBGG hhkodmoefol = 1;
		NHLCGNMFNOM piddpkfgmod = 2;
	}

	message GEFNPLBMKPI {
	}

	message KIMCHNHODJH {
	}

	PAEHCJKJPLP jnmnpmljlcg = 4;
	DPDFNNJNANJ hfemgcaflln = 5;
}

message ICGJCOLIPFE {
}

message ICMPEJGKAAH {
	enum BEOPEKBEIOL {
		UNSET = 0;
		ATTACK = 1;
		SPECIAL_ATTACK = 2;
		SPECIAL_ATTACK_2 = 3;
		MINIGAME_OFFENSIVE_FINISH = 4;
		MINIGAME_DEFENSIVE_START = 5;
		MINIGAME_DEFENSIVE_FINISH = 6;
		FAINT = 7;
		CHANGE_POKEMON = 8;
		QUICK_SWAP_POKEMON = 9;
	}

	BEOPEKBEIOL ldccnikjabe = 1;
	int32 hpcolmdaago = 3;
	int32 ljiipjnjmjm = 5;
	int32 knleifffbdd = 6;
	int32 ockdoifjhec = 7;
	uint64 gpdelkhfogk = 8;
	uint64 ppcoajflhnl = 14;
	float inbdaoliafb = 15;
	int32 iiioddccfjd = 16;
}

message ICMPFBJHBIH {
	IBGGKKNEKOA kelcfjcffmc = 1;
	int32 pgbbknijccp = 2;
	string nlplpeiodhn = 3;
	IBGGKKNEKOA jpibadgapic = 4;
	int32 hgnghcglhme = 5;
	int64 hncgbjmfmol = 6;
	int32 ffiekckbebi = 7;
	DIAINAPMBIM fdcjcolbhbl = 8;
}

message ICOBCGKIEGE {
	float ejmngbjakic = 1;
	repeated string ckdihiinphi = 2;
}

message ICOJEHFEEAK {
	string mkdlflaoaki = 1;
	OBICLGNCNFN cmffghmeiof = 2;
}

message ICPFFCNLIKF {
}

message ICPKMDGGNHG {
	int32 agpkppligho = 1;
	int32 cohmfpbflgm = 2;
}

message IDFMJMIFHFG {
	repeated GMPALGCFLJJ mmlpnhdbeil = 1;
	repeated int32 dgahhkolhab = 2;
	repeated int32 hoanpjoekbf = 3;
	repeated int32 mcladekkgmh = 4;
	repeated int32 afalhlfjafi = 5;
	int32 igagmenbhac = 6;
	int32 bfmbgjhpblf = 7;
}

message IDGLPGDMKEO {
	enum JEAJBOCCBNK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_ATTACK_ACTIONS = 2;
		ERROR_NOT_IN_RANGE = 3;
		ERROR_WRONG_BATTLE_TYPE = 4;
		ERROR_RAID_ACTIVE = 5;
	}

	JEAJBOCCBNK hhkodmoefol = 1;
	IJKFIEDNELI gaalacimldk = 2;
	DMPNAOEDHIF dpmplnjinki = 3;
}

message IDKJLDJMNLL {
	string aooblimbnga = 1;
	string iomhbkhfabb = 2;
}

message IDMILCDCFKA {
	string oocggedbcke = 1;
	string gfepbfmmdcc = 2;
	string mgeiaokbdbi = 3;
	string dmchibkbdla = 4;
	int32 cdaebgpamij = 5;
	repeated INGNDLKFDDL jgdpdgjemkd = 6;
	JOLDPAMFDLN cgbdgpjgbgb = 7;
	NKDPOODGENC.CDIKKLMHAHB likhphmlcgl = 8;
}

message IDNIMHMFPMG {
	int32 hbmmfopjbce = 1;
	repeated int32 ephkplfnblk = 2;
	uint32 kdmbdkobmmd = 3;
}

message IDOCCGCGAFL {
	bool ffnepcnpmif = 1;
	bool felhikjlgoh = 2;
}

message IEGLPFCLANN {
	enum MKOGKKOEFPP {
		NO_END = 0;
		LEAVE_LOBBY = 1;
		TIME_OUT = 2;
		ENCOUNTER_POKEMON_NOT_CAUGHT = 3;
		ENCOUNTER_POKEMON_CAUGHT = 4;
		WITH_ERROR = 5;
	}

	MKOGKKOEFPP ldccnikjabe = 1;
}

message IEHJBEFPHJF {
	LDKENAMCIPK.NFOKKLIKGJA llponloodfk = 1;
	EHOHINHPAGL dfnpfkcmcbk = 2;
}

message IEKLEKNNHBG {
	repeated uint64 jmbiglfhdkl = 1;
	float ijcmkbjajpn = 2;
	float llhoelieolj = 3;
}

message IELLFHHNLPL {
}

message IFEMCMAOKKG {
	message MCLLEDIIIDE {
		int32 ngmiffepnmp = 1;
		int32 bbcaeildbae = 2;
		int32 fjbmmjnabkm = 3;
		int32 eejhifbcjmm = 4;
	}

	repeated MCLLEDIIIDE ngmiffepnmp = 1;
	MCLLEDIIIDE eegibclmomb = 2;
	int32 gkbbgkpcijb = 3;
	int32 ppfgkhoifnp = 4;
}

message IFFECDCBIDH {
	enum KPBKBMDNIPN {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	KPBKBMDNIPN hhkodmoefol = 1;
	repeated int32 mkindhfapmh = 2;
}

message IFKBBGPOIIO {
	repeated NKDPOODGENC.EALAKMIFPHD cpmfkoedaek = 1;
	repeated NKDPOODGENC.OHPOBKKLMHO jhbceelaock = 2;
}

message IGBIBJHMFCF {
	bool pfjignanobb = 1;
}

message IGBJMLOPACK {
	enum ECGBEDGOOFB {
		UNSET = 0;
		SUCCESS_ELIGIBLE = 1;
		ERROR_UNKNOWN = 2;
		FAILURE_SKU_NOT_GIFTABLE = 3;
		FAILURE_SENDER_LEVEL = 4;
		FAILURE_SENDER_LIMIT_REACHED = 5;
		FAILURE_SENDER_CHILD_ACCOUNT = 6;
		FAILURE_FRIEND_DOES_NOT_EXIST = 7;
		FAILURE_FRIEND_LEVEL = 8;
		FAILURE_FRIEND_HAS_TICKET = 9;
	}

	repeated ECGBEDGOOFB jieookpopnd = 1;
	repeated ECGBEDGOOFB eiaphoackll = 2;
	repeated ECGBEDGOOFB gmikmngdncl = 3;
}

message IGDINGHKKBJ {
	enum BEJJMANKKDB {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PHOTO_POKEMON_INVALID = 2;
		ERROR_UNKNOWN = 3;
	}

	BEJJMANKKDB llponloodfk = 1;
}

message IGFAGNNAHNG {
	string bebimkogphh = 1;
	string lkheohlgndb = 2;
}

message IGNCIOEADMC {
	oneof DOEKKLCMNFO {
		BKHAIPKDHAG poi_submission_telemetry = 1;
		FEEIHHNAFKI poi_submission_photo_upload_error_telemetry = 2;
		BDLILFKJFJJ player_metadata_telemetry = 3;
	}

	PlatformServerData neoecjfbjjn = 1001;
}

message IHAMJKAOCDE {
	string ekoefomdgpp = 1;
}

message IHAPFLFCNIL {
	int32 ficmgmlbhmp = 1;
	int32 clbkokojbom = 2;
	int32 nkeplnogkna = 3;
	int32 djlkofhpfef = 4;
}

message IHCLMNHIELB {
	enum KCPDFJHCLLN {
		UNSET = 0;
		SUCCESS = 1;
		INVALID_POKEMON_ID = 2;
		NO_PLAYER = 3;
		WRONG_ITEM_TYPE = 4;
		ITEM_NOT_IN_INVENTORY = 5;
		NOT_ENOUGH_ITEMS = 6;
	}

	KCPDFJHCLLN hhkodmoefol = 1;
	PCNMLNDPOML igfdgcikjem = 2;
}

message IHJJNPGHLME {
	int32 bajlglfammf = 1;
	int32 pdlfinenfhm = 2;
	float agkjhjkobnf = 3;
}

message IHPAHNKDCDL {
	enum AIGANBEKAPH {
		UNSET = 0;
		CANDY_FOUND = 1;
	}

	AIGANBEKAPH hhkodmoefol = 1;
	PCNMLNDPOML lojbhbgllgp = 2;
	int32 lfbajfmidfg = 3;
	IBGGKKNEKOA nnnmmlpnchp = 4;
	uint64 igfdgcikjem = 5;
}

message IIFEAMEPMLE {
	enum BNIJEOFAEKC {
		UNKNOWN = 0;
		SUCCESS = 1;
		NOT_AVAILABLE = 2;
		NOT_IN_RANGE = 3;
		ENCOUNTER_ALREADY_FINISHED = 4;
		POKEMON_INVENTORY_FULL = 5;
	}

	BNIJEOFAEKC hhkodmoefol = 1;
	NHLCGNMFNOM piddpkfgmod = 2;
	DCMHMGIGNLJ ihnhoapaepl = 3;
	BFABHCMKGCB kkagkkighdm = 4;
	int32 mhigdejohkh = 5;
}

message IIKFEIOLPDG {
	int64 djkhggodgdn = 1;
	int64 fhknpfdcenp = 2;
}

message IIMAEBGICEG {
	string nlilbnljlhj = 1;
	string kfcajdjbnil = 2;
	string mpaekobkjkh = 3;
	string llilgjkfdfe = 4;
	string nmjophnddei = 5;
	string hkfgeagmpib = 6;
	string fheppeipccl = 7;
	float klhfedngdhm = 8;
}

message IIPNHEOJPPM {
	string edabjienhim = 1;
	LMPLGPLAEIC jdbflapgnpm = 2;
}

message IJIALBBCJDM {
	repeated int32 cgehpfglnkf = 1;
	repeated int32 cgllnofgfag = 2;
	repeated float bmfgcfjdnjo = 3;
	int32 ekjcobdjbmh = 4;
	int32 ealpigfmcpo = 5;
	int32 npneafijpoo = 6;
	int32 oebhpnmmpof = 7;
	int32 lihjaghhpea = 8;
	int32 gbnpdikfdhh = 9;
}

message IJJFHPLBGLP {
	enum AKCACDADEIJ {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
		ERROR_INVALID_POKEMON = 7;
		ERROR_INSUFFICIENT_PAYMENT = 8;
		ERROR_NO_PLAYER_POKEMON = 9;
		ERROR_NO_FRIEND_POKEMON = 10;
		ERROR_PLAYER_ALREADY_CONFIRMED = 11;
		ERROR_TRANSACTION_LOG_NOT_MATCH = 12;
		ERROR_TRADING_EXPIRED = 13;
		ERROR_TRANSACTION = 14;
		ERROR_DAILY_LIMIT_REACHED = 15;
	}

	AKCACDADEIJ hhkodmoefol = 1;
	CLLOCMAOPDJ dmkmeeheamb = 2;
}

message IJKBAJBOAKO {
	enum AFKJJDENHDC {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_STILL_IN_PROGRESS = 2;
	}

	AFKJJDENHDC llponloodfk = 1;
	repeated NCFPKMAHCKB aflnkbolkmh = 2;
}

message IJKFIEDNELI {
	ACMJMCCMKOD epmnkbjjplo = 1;
	string dileendfikh = 2;
	CFCJGNJCLOK ldnobidlamf = 3;
	CFCJGNJCLOK gimkljmcjjp = 4;
	OBICLGNCNFN lbanlicclch = 5;
}

message IJOIOMGLKCG {
	PCNMLNDPOML piddpkfgmod = 1;
	ODIIOABFMDJ fmndeglcfbp = 2;
	IBGGKKNEKOA.IBGFAGKHKGN cdnlplomkgo = 3;
}

message IJOIPMJCHKC {
	BFABHCMKGCB acifngkjfjh = 1;
	EHAGMDBOMIL mlpkgmcbapf = 2;
	int64 mppmjljceic = 3;
	int64 femhedmfakk = 4;
}

message IKEBFPAKGIF {
	NKDPOODGENC.GBKCKHAINCA gghaofibkea = 1;
	NKDPOODGENC.OHPOBKKLMHO eonalmmgobe = 2;
}

message IKEDMHFHAJN {
	PCNMLNDPOML piddpkfgmod = 1;
	repeated PMHCLJNHGAM mkalolgoecd = 2;
}

message IKFDLGMKHKL {
	int32 bobobmkpjge = 1;
	int32 fflcakbmafa = 2;
	bool cickdmolfjl = 3;
	EMIKNLOOFDJ alkndggamll = 4;
}

message IKIEODFFHNA {
	enum CIBEDBCINEK {
		UNSET = 0;
		SUCCESS = 1;
		NO_NEWS_FOUND = 2;
	}

	CIBEDBCINEK hhkodmoefol = 1;
}

message IKJCFEPNHCK {
	enum EOEEKGNPCGA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_CANNOT_USE = 2;
		ERROR_NOT_IN_RANGE = 3;
		ERROR_POKEMON_NOT_THERE = 4;
		ERROR_POKEMON_FULL = 5;
		ERROR_NO_BERRIES_LEFT = 6;
		ERROR_WRONG_TEAM = 7;
		ERROR_WRONG_COUNT = 8;
		ERROR_TOO_FAST = 9;
		ERROR_TOO_FREQUENT = 10;
		ERROR_GYM_BUSY = 11;
		ERROR_RAID_ACTIVE = 12;
		ERROR_GYM_CLOSED = 13;
	}

	EOEEKGNPCGA hhkodmoefol = 1;
	PHKNAKANAEL mlopablhopj = 2;
	DMPNAOEDHIF dpmplnjinki = 3;
	int32 lnlggmmcmeb = 4;
	int32 mibpipkaggd = 5;
	int32 dljejnhpmeg = 6;
	GKOJINOCBHK mojfnojaagl = 7;
	int64 ohfkknkaknb = 8;
	int32 hcajdegeiah = 9;
}

message ILBLCCBPIKL {
	bool plmpdlcoemi = 1;
	float ncmocnnnopp = 2;
}

message ILCEAAGOONP {
	string cinmjcglgnm = 1;
	repeated MJPAJDCCJEF jhkjacenpbh = 2;
	bool ladllihlpdd = 3;
}

message ILDPFODKDEJ {
	string niladcmocjb = 1;
	EFDCDOBEKEN kobgohfemnn = 2;
	repeated JHKHBGIEONB hdcjbcagmao = 3;
	MBKJCODCAKE.OEIDGAHAMII likhphmlcgl = 4;
	MAIHDOEJGIJ pplgileafni = 5;
}

message ILEHKELGPHL {
	enum BLKILCAKDCM {
		UNSET = 0;
		arch32_bit = 1;
		arch64_bit = 2;
	}

	BLKILCAKDCM ehlajgcbcof = 1;
}

message ILEIGBCDHEG {
	bool debnfjhgaci = 1;
	int64 giifcajfofc = 2;
}

message ILFOMABHMKK {
	bool decfblkinfk = 1;
	bool cifigjgjnml = 2;
	uint32 nahaonlflml = 3;
	int32 nnemnlbdhad = 4;
	int32 bjflegdkblm = 5;
}

message ILKHCIMNKLI {
	uint64 igfdgcikjem = 1;
	IBGGKKNEKOA.IBGFAGKHKGN jgidokimlep = 2;
}

message ILMHOEJHCHE {
	bool mcmjgclkikb = 1;
	int32 pkjclcnpcmk = 2;
	bool ahmgpefpmbi = 3;
	int64 eoeegghodpj = 4;
}

message IMFNKOILKIE {
	BFABHCMKGCB cjhpfbnoalf = 1;
	int64 nkmclpoiofa = 2;
	int64 ocgbaiencio = 3;
}

message IMGKONDPGKH {
	enum ACNPIKFLOLD {
		UNSET = 0;
		HOLIDAY_2016 = 1;
		ANNIVERSARY = 2;
		ONE_YEAR_ANNIVERSARY = 3;
		HALLOWEEN_2017 = 4;
	}

	enum BHNFADMDDDC {
		TRAINER_MALE = 0;
		TRAINER_FEMALE = 1;
	}

	enum CANPLGHJMDK {
		FORM_UNSET = 0;
		ALOLA = 1;
	}

	enum FIIJHBJBFKO {
		NONE = 0;
		TEAM_BLUE = 1;
		TEAM_RED = 2;
		TEAM_YELLOW = 3;
	}

	enum GPFCIKHLGKP {
		GENDER_UNSET = 0;
		MALE = 1;
		FEMALE = 2;
		GENDERLESS = 3;
	}

	string fgnapjpklak = 1;
	BHNFADMDDDC fmkpcgcckhb = 2;
	FIIJHBJBFKO lbdlgaacken = 3;
	int32 jnddicbikkd = 4;
	int32 lahokpiipjb = 5;
	int32 pamcojidban = 6;
	float alppkihahie = 7;
	int32 ldgcoeglodf = 8;
	double bkglagbnokd = 9;
	double ahncoakhfpn = 10;
	float iammcapccoj = 11;
	float lbjcbmemcbn = 12;
	int32 nckphldmbhl = 13;
	int32 cioaphnbeme = 14;
	int32 nhmffbamnde = 15;
	int32 libhhbnnhkg = 16;
	int32 pmhodlecdda = 17;
	int32 eiaioiefpgg = 18;
	string mgajgldjfcb = 19;
	GPFCIKHLGKP fmndeglcfbp = 20;
	ACNPIKFLOLD klnlllpannh = 21;
	CANPLGHJMDK cdnlplomkgo = 22;
	bool hpmncphhkfg = 23;
	int32 afgdgnmpmae = 24;
	int32 plhdcjeoiif = 25;
}

message IMOBJFLGOOF {
	enum NLIPFDOJDLL {
		UNSET = 0;
		STARTED_CHARGING = 1;
		FULLY_CHARGED = 2;
		ACTIVATED = 3;
	}

	NLIPFDOJDLL mkhphhccfdj = 1;
	double cmjhcgdfolp = 2;
	double pfegdcanmel = 3;
	int32 mfafdmclgia = 4;
	int32 fopanhibilb = 6;
	JACGNJEMAKN dmijpaiccfj = 7;
	string dhegldagbpm = 8;
	bool lccmbbblkml = 9;
}

message IMOJBNOFECA {
	int32 hbmmfopjbce = 1;
}

message INGNDLKFDDL {
	oneof HFBLMGONBPF {
		PDDKFOEOCNI invasion_battle = 1;
		FFMIPABIEKB invasion_encounter = 2;
		LFLAIKDDABA pokestop_dialogue = 3;
	}

}

message INHAMHDDMGH {
	float almdmhcnjgo = 1;
	float mgkbeoalmha = 2;
	float hjdlcepelbb = 3;
	float loeglhbochl = 4;
	int32 dgpbdcchjkj = 5;
	bool jgmmafkhmal = 6;
	float gncpbfckkdo = 7;
	float kmjjbaeeeok = 8;
	float laamhdgjeoe = 9;
	float ldkfmdehhog = 10;
	float ajbmhcenkpb = 11;
	float bhdldlmifdd = 12;
	int32 kgihjfmagca = 13;
	int32 dpeoheclnnp = 14;
	float jgmaoogfina = 15;
	float fogppidmiil = 16;
	float eogadjikclg = 17;
	float djilldgidnn = 18;
	float bajkchpghhb = 20;
	float egjfidllcmb = 21;
}

message INMFPHGJALC {
	enum KBIFMCIOKME {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		ERROR_ALREADY_HAS_POKEMON_ON_FORT = 2;
		ERROR_OPPOSING_TEAM_OWNS_FORT = 3;
		ERROR_FORT_IS_FULL = 4;
		ERROR_NOT_IN_RANGE = 5;
		ERROR_PLAYER_HAS_NO_TEAM = 6;
		ERROR_POKEMON_NOT_FULL_HP = 7;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 8;
		ERROR_POKEMON_IS_BUDDY = 9;
		ERROR_FORT_DEPLOY_LOCKOUT = 10;
		ERROR_PLAYER_HAS_NO_NICKNAME = 11;
		ERROR_POI_INACCESSIBLE = 12;
		ERROR_NOT_A_POKEMON = 13;
		ERROR_TOO_MANY_OF_SAME_KIND = 14;
		ERROR_TOO_MANY_DEPLOYED = 15;
		ERROR_TEAM_DEPLOY_LOCKOUT = 16;
		ERROR_LEGENDARY_POKEMON = 17;
		ERROR_INVALID_POKEMON = 18;
		ERROR_RAID_ACTIVE = 19;
	}

	KBIFMCIOKME hhkodmoefol = 1;
	PHKNAKANAEL mlopablhopj = 2;
	DMPNAOEDHIF fblnanmjfem = 3;
	int64 macfpaphbbf = 4;
}

message INPNDEBCNOB {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	AAFHCDKDCHI.ELCJFIIOMPB hhkodmoefol = 3;
}

message IOAHCKINEDO {
	enum NKOJMMMKPNM {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		TOO_SOON = 3;
		NO_DEFENDERS = 4;
	}

	NKOJMMMKPNM hhkodmoefol = 1;
	repeated string ociljkfohmp = 2;
	repeated int32 blkgmmbgjmj = 3;
	int32 ekacaoffpgm = 4;
}

message IOAIINDBDBH {
	int32 hbmmfopjbce = 1;
	CBHNLIFNBAD.HPCLFELCBAP hhkodmoefol = 2;
	uint32 fklbigfoann = 3;
}

message IOBPLMHEMPE {
	enum HCAANIJGPDK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_LEVEL_TOO_LOW = 2;
		ERROR_POKEMON_NOT_FOUND = 3;
		ERROR_TAG_INVALID = 4;
	}

	HCAANIJGPDK llponloodfk = 2;
}

message IOHFLGKILIP {
	string ahcgfgkkkdn = 1;
	int64 bkkcjfmmhpl = 2;
	repeated int32 gdghkinahdb = 4;
	repeated uint64 iepbdcjdpfk = 5;
	double icnndjclaef = 6;
	double ogmopfkhcpa = 7;
	double kbgeoncpmbj = 8;
	double jkgggjheffd = 9;
}

message IOJKGOIEJNA {
	DCAECPGGPON epmmciendad = 1;
}

message IONKIEIJBKE {
	string bajolmeabfd = 1;
	string mbnpdlghjcb = 2;
}

message IONMACHHMPC {
	enum PAFHIDFFHKD {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	PAFHIDFFHKD hhkodmoefol = 1;
}

message IPDHFCMFIFH {
	enum IFJAOOGCMDE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_INCIDENT_COMPLETED = 3;
		ERROR_INCIDENT_NOT_FOUND = 4;
		ERROR_PLAYER_BELOW_MIN_LEVEL = 5;
		ERROR = 6;
	}

	IFJAOOGCMDE llponloodfk = 1;
	IDMILCDCFKA ipeaagdigbj = 2;
}

message IPEOPNMEGPI {
	oneof LPLBJGJMFDJ {
		BFABHCMKGCB item = 1;
		bool stardust = 2;
		bool pokecoin = 3;
		PCNMLNDPOML pokemon_candy = 4;
		bool experience = 6;
		NHLCGNMFNOM pokemon_egg = 7;
		string avatar_template_id = 8;
		string sticker_id = 9;
		PCNMLNDPOML mega_energy_pokemon_id = 10;
		PCNMLNDPOML xl_candy = 11;
	}

	int32 fjdhldkllcc = 5;
}

message IPGELDMEKIF {
	bool ilkhacelmma = 1;
	int32 nbbibibajdh = 2;
}

message IPHBPEMGHHN {
	enum KGLJAPGCJNI {
		QUEST_ENCOUNTER_UNKNOWN = 0;
		QUEST_ENCOUNTER_SUCCESS = 1;
		QUEST_ENCOUNTER_NOT_AVAILABLE = 2;
		QUEST_ENCOUNTER_ALREADY_FINISHED = 3;
		POKEMON_INVENTORY_FULL = 4;
	}

	KGLJAPGCJNI hhkodmoefol = 1;
	NHLCGNMFNOM piddpkfgmod = 2;
	DCMHMGIGNLJ ihnhoapaepl = 3;
	BFABHCMKGCB kkagkkighdm = 4;
}

message IPMNGKLEOOB {
	enum EHHOANPAMGJ {
		UNSET = 0;
		SUCCESS = 1;
		ENCOUNTER_NOT_AVAILABLE = 2;
		POKEMON_INVENTORY_FULL = 3;
	}

	EHHOANPAMGJ hhkodmoefol = 1;
	NHLCGNMFNOM piddpkfgmod = 2;
	DCMHMGIGNLJ ihnhoapaepl = 3;
	BFABHCMKGCB kkagkkighdm = 4;
	int32 mhigdejohkh = 5;
}

message ImageGalleryTelemetry {
	enum ImageGalleryEventId {
		UNKNOWN = 0;
		ENTER_IMAGE_GALLERY = 1;
		ENTER_IMAGE_DETAILS_PAGE = 2;
		VOTE_FROM_MAIN_GALLERY_PAGE = 3;
		UNVOTE_FROM_MAIN_GALLERY_PAGE = 4;
		VOTE_FROM_IMAGE_DETAILS_PAGE = 5;
		UNVOTE_FROM_IMAGE_DETAILS_PAGE = 6;
		ENTER_IMAGE_EDIT_FROM_GALLERY = 7;
	}

	ImageGalleryEventId image_gallery_telemetry_id = 1;
}

message InAppPurchaseSubscriptionInfo {
	enum NativeStoreVendor {
		UNKNOWN_STORE = 0;
		GOOGLE = 1;
		APPLE = 2;
		DESKTOP = 3;
	}

	enum PaymentState {
		UNKNOWN_STATE = 0;
		SUCCESS = 1;
		BILLING_ISSUE = 2;
	}

	enum State {
		UNKNOWN = 0;
		ACTIVE = 1;
		CANCELLED = 2;
		EXPIRED = 3;
		GRACE_PERIOD = 4;
		FREE_TRIAL = 5;
		PENDING_PURCHASE = 6;
		REVOKED = 7;
		ON_HOLD = 8;
	}

	message PurchasePeriod {
		int64 subscription_end_time_ms = 1;
		int64 receipt_timestamp_ms = 2;
		string receipt = 3;
		SkuStorePrice store_price = 4;
		string country_code = 5;
	}

	string subscription_id = 1;
	string sku_id = 2;
	repeated PurchasePeriod purchase_period = 3;
	int64 last_notification_time_ms = 4;
	string lookup_id = 5;
}

message InGamePurchaseDetails {
	string ingame_type = 1;
	int64 ingame_price = 2;
	int64 remaining_ingame_balance = 3;
}

message IncomingFriendInviteDisplayProto {
	IncomingFriendInviteProto invite = 1;
	PlayerSummaryProto player = 2;
}

message IncomingFriendInviteProto {
	enum Status {
		UNSET = 0;
		PENDING = 1;
		DECLINED = 2;
		CANCELLED = 3;
	}

	Status status = 1;
	string player_id = 2;
	int64 created_ms = 3;
	string full_name = 5;
	string nia_account_id = 7;
}

message InventoryDeltaProto {
	int64 original_timestamp = 1;
	int64 new_timestamp = 2;
	repeated InventoryItemProto inventory_item = 3;
}

message InventoryItemProto {
	oneof InventoryItem {
		bytes deleted_item_key = 2;
		bytes item = 3;
	}

	int64 modified_timestamp = 1;
}

message InventoryProto {
}

message InviteFacebookFriendOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
		ERROR_PLAYER_OUTBOX_FULL = 4;
		ERROR_PLAYER_INBOX_FULL = 5;
		ERROR_SENDER_HAS_MAX_FRIENDS = 6;
		ERROR_RECEIVER_HAS_MAX_FRIENDS = 7;
		ERROR_ALREADY_A_FRIEND = 8;
		ERROR_INVITE_ALREADY_SENT = 9;
		ERROR_INVITE_ALREADY_RECEIVED = 10;
		ERROR_CANNOT_SEND_INVITES_TO_YOURSELF = 11;
		ERROR_FRIEND_CACHE_EXPIRED = 12;
		ERROR_FRIEND_NOT_CACHED = 13;
		ERROR_INVALID_SENDER_FACEBOOK_ID = 14;
	}

	Result result = 1;
}

message InviteFacebookFriendProto {
	string fb_access_token = 1;
	string friend_fb_user_id = 2;
}

message InviteGameRequest {
	string friend_id = 1;
	string friend_nia_account_id = 2;
	string app_key = 3;
}

message InviteGameResponse {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_NOT_FRIEND = 3;
		ERROR_EXCEED_LIMIT = 4;
		ERROR_ALREADY_SIGNED_UP = 5;
		ERROR_EMAIL_FAILED = 6;
	}

	Status status = 1;
}

message IosDevice {
	string name = 1;
	string manufacturer = 2;
	string model = 3;
	string hardware = 4;
	string software = 5;
}

message IosSourceRevision {
	string name = 1;
	string bundle = 2;
	string version = 3;
	string product = 4;
	string os = 5;
}

message IsMyFriendOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND_DELETED = 3;
	}

	Result result = 1;
	bool is_friend = 2;
}

message IsMyFriendProto {
	string player_id = 1;
	string nia_account_id = 2;
}

message ItemTelemetry {
	ItemUseTelemetryIds item_use_click_id = 1;
	int32 item_id = 2;
	bool equipped = 3;
	bool from_inventory = 4;
	string item_id_string = 5;
}

message JBLIFNNMCJM {
	int32 lgclomekpol = 1;
	bool nnnbcnpcjed = 2;
	GOBLBKAHHFO.ICFKDOGAKMA mmlpnhdbeil = 3;
	HIIJKCFDNKO nfjpfclenhm = 4;
}

message JCBHAJDAEMN {
	FJIHIBMJOKK ebkpdjhogdo = 1;
}

message JCCOIOBIMDN {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	CLEFLPHEJMH.IHJOONCCEFJ hhkodmoefol = 3;
	PPMOEEBFKKG bniaebpgnal = 4;
}

message JCEDPPLPPMM {
	BFABHCMKGCB acifngkjfjh = 1;
}

message JCEMPBBIKHK {
	bytes ipioohaepnm = 1;
}

message JCIKENNDCHO {
	OMCCLHKGJGC iiaaeobhjll = 1;
	int32 fdadklicimp = 2;
	PEDJLCIJFBE acilgeiioib = 3;
	int64 iamgpkgceei = 4;
}

message JCOLLAMLKBH {
	uint64 ijaiokookkb = 1;
}

message JCOOHFOFMMI {
	JACGNJEMAKN dmijpaiccfj = 1;
}

message JCPKGJCNIKD {
	enum MCDAKCBLPPG {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	MCDAKCBLPPG llponloodfk = 1;
	GGJPLEFPDDL ommbijfelko = 2;
}

message JDGNGCPHCML {
	LCKIOJJDOJO boeedjcoloj = 1;
	string llokememgmi = 2;
}

message JDHFHGGEFDC {
	message DPMDEFHLGEO {
		string doblngnlada = 1;
		string beilkicaidm = 2;
	}

	repeated DPMDEFHLGEO pjfgjlehkic = 1;
	repeated DPMDEFHLGEO pehddjmjcac = 2;
}

message JDHOCBHIAMN {
	enum BBHGMAEIPLP {
		UNSET = 0;
		CREATED = 1;
		OPENED = 2;
		CANCELLED = 3;
		ACCEPTED = 4;
		DECLINED = 5;
		READY = 6;
		TIMEOUT = 7;
	}

	message LGGFNBLBBHC {
		string lkheohlgndb = 1;
		MIHKJLMMMGA lnlkpjmocom = 2;
		int64 nkjlidkjpij = 3;
		repeated uint64 iepbdcjdpfk = 4;
		JNPCNHMKDMB ecpapnmbgfa = 5;
	}

	string flnekghfefk = 1;
	OMDCMKIAADD ldccnikjabe = 2;
	string blgcpjojdbm = 3;
	LGGFNBLBBHC jbajamdjccm = 5;
	LGGFNBLBBHC nlnjlikopkl = 6;
	BBHGMAEIPLP aihkgechdic = 7;
	int64 ioiconefljg = 8;
	string jlpmmlbclok = 10;
	int64 gheamopbihp = 19;
}

message JDILIIOOIEN {
	string ahcgfgkkkdn = 1;
	double icnndjclaef = 2;
	double ogmopfkhcpa = 3;
}

message JDKAJMCADJP {
	BFABHCMKGCB acifngkjfjh = 1;
	int32 fjdhldkllcc = 2;
}

message JDKFLHHNLNH {
	int32 fomdmlbpogh = 1;
	int32 epongcjlgki = 2;
}

message JDOLCOCPJFF {
	uint64 igfdgcikjem = 1;
	string mgajgldjfcb = 2;
}

message JDPFGLGNDHP {
	enum ANDBNFFDOPG {
		QUEST_PRECONDITION_UNSET = 0;
		QUEST_PRECONDITION_QUEST = 1;
		QUEST_PRECONDITION_LEVEL = 2;
		QUEST_PRECONDITION_MEDAL = 3;
		QUEST_PRECONDITION_IS_MINOR = 4;
		QUEST_PRECONDITION_EXCLUSIVE_QUESTS = 5;
		QUEST_PRECONDITION_NEVER = 6;
		QUEST_PRECONDITION_RECEIVED_ANY_LISTED_QUEST = 7;
		QUEST_PRECONDITION_MONTH_YEAR_BUCKET = 8;
		QUEST_PRECONDITION_EXCLUSIVE_IN_PROGRESS_GROUP = 9;
		QUEST_PRECONDITION_STORYLINE_PROGRESS = 10;
		QUEST_PRECONDITION_TEAM = 11;
	}

	oneof FNEAHEDOLFA {
		string quest_template_id = 2;
		PCGKGPBKHGG level = 3;
		FAPHFKEMGFA medal = 4;
		GDBBIHHKOOF quests = 5;
		DGEDIAHEBCG month_year_bucket = 6;
		AKJFFNHEKOC group = 7;
		NPBONGLOLOG story_line = 8;
		CEOCLCNIIHM team = 9;
	}

	enum NGCHMLIAHKH {
		UNSET = 0;
		EQUALS = 1;
		GREATER_THAN = 2;
		LESS_THAN = 3;
		NOT_EQUALS = 4;
	}

	message AKJFFNHEKOC {
		enum DBDDCBHLNGJ {
			UNSET = 0;
			GIOVANNI = 1;
		}

		DBDDCBHLNGJ edabjienhim = 1;
	}

	message CEOCLCNIIHM {
		NGCHMLIAHKH npjlkaoighg = 1;
		MBJGAPHFDHC neifnabaggg = 2;
	}

	message DGEDIAHEBCG {
		int32 geedgefhfoa = 1;
		int32 cocdohbaafn = 2;
	}

	message FAPHFKEMGFA {
		DCAECPGGPON ldccnikjabe = 1;
		NGCHMLIAHKH npjlkaoighg = 2;
		int32 apfapaooaco = 3;
	}

	message GDBBIHHKOOF {
		repeated string hlhbhdgegjg = 1;
	}

	message NPBONGLOLOG {
		repeated string bfogcbahpgp = 1;
		repeated string gkckanjjbbd = 2;
		int32 caljgmcnfii = 3;
		int32 fonikkdpacg = 4;
	}

	message PCGKGPBKHGG {
		NGCHMLIAHKH npjlkaoighg = 1;
		int32 ejpigpepieg = 2;
	}

	ANDBNFFDOPG ldccnikjabe = 1;
}

message JEIKOEDIMAG {
}

message JEMOEBANGNJ {
	enum KJGGADLLIME {
		UNSET = 0;
		SUCCESS = 1;
		FAILED_POKEMON_MISSING = 2;
		FAILED_INSUFFICIENT_RESOURCES = 3;
		FAILED_POKEMON_CANNOT_EVOLVE = 4;
		FAILED_POKEMON_IS_DEPLOYED = 5;
		FAILED_INVALID_ITEM_REQUIREMENT = 6;
	}

	KJGGADLLIME hhkodmoefol = 1;
	NHLCGNMFNOM lcdnpbiiffe = 2;
	int32 ainphkodlei = 3;
	int32 jhbbfkcbjlo = 4;
	HDPCEHMGHOO dcdflocpcki = 5;
}

message JENBNPINAKI {
	enum PALKMJMFILJ {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_DISABLED = 2;
		ERROR_MILESTONE_NOT_FOUND = 3;
	}

	PALKMJMFILJ llponloodfk = 1;
}

message JFGIGKCKFMO {
	enum PIIDHEMDHEC {
		UNSET = 0;
		MINUTE = 1;
		HOUR = 2;
		DAY = 3;
		WEEK = 4;
		MONTH = 5;
	}

	message DJIDFHHLJIP {
		int32 pljhinldecj = 1;
		int32 gejeebmcaop = 2;
		int64 kdippigofaj = 4;
		int32 ehgaladbneb = 5;
	}

	map<string, DJIDFHHLJIP> ljlhhhgfajb = 1;
}

message JFIGFHPGJBE {
	string flnekghfefk = 1;
	repeated uint64 iepbdcjdpfk = 6;
}

message JFJGADHOEMK {
}

message JFJIGPFFLLA {
	int32 iobacealpah = 1;
	int32 hnefeilpakk = 2;
	repeated JLKOLGJGPGD.HPBOBAPCOPI ieggicjdogl = 3;
	repeated JLKOLGJGPGD.HPBOBAPCOPI gaegbmohjhd = 4;
}

message JFMFEMLDNFH {
	string gfepbfmmdcc = 1;
	double chhgiikbnma = 2;
	double flaphjheime = 3;
}

message JGABDLPLBGK {
	bytes ekoefomdgpp = 1;
	uint32 cialapddfee = 2;
	bytes hfcjcahaegh = 3;
}

message JGBPDBGNMPB {
	enum FHHFPMNPJDG {
		EXPRESSION_UNSET = 0;
		HAPPY = 1;
		SYMPATHETIC = 2;
		ENERGETIC = 3;
		PUSHY = 4;
		IMPATIENT = 5;
		ADMIRATION = 6;
		SAD = 7;
		IDLE = 8;
		IDLE_B = 9;
		GREETING = 10;
		GREETING_B = 11;
		REACT_ANGRY = 12;
		REACT_CELEBRATION = 13;
		REACT_HAPPY = 14;
		REACT_LAUGH = 15;
		REACT_SAD = 16;
		REACT_SCARED = 17;
		REACT_SURPRISED = 18;
	}

	enum LPBBHHPKOHI {
		CHARACTER_UNSET = 0;
		PROFESSOR_WILLOW = 1;
		SPECIAL_GUEST_1 = 2;
		SPECIAL_GUEST_2 = 3;
		SPECIAL_GUEST_3 = 4;
		SPECIAL_GUEST_4 = 5;
		SPECIAL_GUEST_5 = 6;
		SPECIAL_GUEST_RHI = 7;
	}

	string bdlnhilgeab = 1;
	FHHFPMNPJDG cghampncghf = 2;
	string jopfeihkjal = 3;
	LPBBHHPKOHI eonalmmgobe = 4;
	repeated float jfoiblgjamb = 5;
	string aalebhcmigo = 6;
	string cjglfjjhbhe = 7;
	string gnnfgjiapbk = 124;
}

message JGFDPNGHFIO {
	repeated int64 igfdgcikjem = 1;
	string aooblimbnga = 2;
	string iomhbkhfabb = 3;
}

message JGGHHDNKGAP {
	string ncmogglbdib = 1;
	int32 fjdhldkllcc = 2;
	int32 mpeclnbojog = 3;
}

message JGHBGMKOLJK {
	enum BGJFDNJOHOC {
		UNSET = 0;
		WAITING_FOR_PLAYERS = 1;
		READY = 2;
		ACTIVE = 3;
		SPECIAL_ATTACK = 4;
		WAITING_FOR_CHANGE_POKEMON = 5;
		FINISHED = 6;
		PLAYER_QUIT = 7;
		TIMEOUT = 8;
		SYNC = 9;
	}

	message DNHGJCIKEBA {
		JNPCNHMKDMB ecpapnmbgfa = 1;
		FDPPMJOOJNI pcdppeomhnn = 2;
		repeated FDPPMJOOJNI agdlihnfjac = 3;
		repeated FDPPMJOOJNI ifpnlibbgpp = 4;
		ICMPEJGKAAH jbkialfaoid = 5;
		bool bjhmgamdfaf = 6;
		int32 jjiimebmkha = 7;
		ICMPEJGKAAH pehmigkmaep = 8;
		int64 aphioobhfke = 9;
		int32 njpnbokpmlh = 10;
		string okngdebcijm = 11;
		int32 hfflpkeajfg = 12;
		int64 djlhjjcekee = 13;
		int32 ipgeccbaddn = 14;
	}

	message FDPPMJOOJNI {
		uint64 igfdgcikjem = 1;
		int32 lahokpiipjb = 2;
		int32 pamcojidban = 3;
		float bmfgcfjdnjo = 4;
		int32 ijjgponbajg = 5;
		int32 agedjchhpkd = 6;
		int32 afgdgnmpmae = 7;
		int32 plhdcjeoiif = 8;
		int32 jkmdcoekemo = 9;
		int32 lajmlaadkmd = 10;
		IBGGKKNEKOA nnnmmlpnchp = 11;
		int32 nckphldmbhl = 12;
		int32 cioaphnbeme = 13;
		int32 nhmffbamnde = 14;
		int32 liepajefafl = 15;
		int32 gmjdmgimcbb = 16;
		int32 ebhklopjhlk = 17;
		int32 jbimgjclkbh = 18;
		string mgajgldjfcb = 19;
		BFABHCMKGCB ihccaegggcb = 20;
	}

	message IEMHDCIPLIH {
		int64 lpnhnhhnmad = 1;
		int64 cccdobcngca = 2;
		int32 kmhibgnnpbo = 3;
		int32 oaemocpohkm = 4;
	}

	BGJFDNJOHOC gblfjjghpbb = 1;
	string jlpmmlbclok = 2;
	DNHGJCIKEBA cephaffhbfh = 3;
	DNHGJCIKEBA nlnjlikopkl = 4;
	int64 kokpooahcma = 5;
	int64 acbiijkagfn = 6;
	int64 dgekaaoeode = 7;
	int32 mjfmafdimpk = 8;
	int64 oejabhfjcbk = 9;
	int64 lpnhnhhnmad = 10;
	int64 cccdobcngca = 11;
	int64 ojkdfeimnpc = 12;
	int64 andebdjmohd = 13;
	int64 pgabmkeifbk = 14;
	IEMHDCIPLIH nkdbailpabg = 15;
	int32 dphkfnpgkja = 16;
	bool emjlkaoanjk = 17;
	int32 lecbchpmihp = 18;
}

message JGHIAJGFBMF {
	int32 ficmgmlbhmp = 1;
}

message JHGOGCEHGIA {
	string ndlikaoblhi = 1;
	BFABHCMKGCB acifngkjfjh = 2;
	GNPJGEDGNAF bhmdkemneoi = 3;
	int32 eeaafdfldmm = 4;
	int64 igfdgcikjem = 5;
	double cmjhcgdfolp = 6;
	double pfegdcanmel = 7;
}

message JHKEJFFOLGL {
	string gfepbfmmdcc = 1;
	int64 kgbkghaoafb = 2;
	int64 pnbnepbmaei = 3;
	string mpaekobkjkh = 4;
	double chhgiikbnma = 5;
	double flaphjheime = 6;
	string kmcejhffckk = 7;
	repeated IPEOPNMEGPI acbpiimiphk = 8;
}

message JHKHBGIEONB {
	repeated BLLKLCHINHP kbokedgbkcl = 1;
	int32 ljafcllohfl = 2;
}

message JIIMEAMCOIB {
	repeated string pgpjnbllogn = 1;
}

message JIINDCCFJNI {
	string flnekghfefk = 1;
}

message JIJGPHDJIGI {
	enum GOBFEDMHGGK {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_DOES_NOT_MEET_MIN_LEVEL = 2;
		ERROR_DAILY_TICKET_ALREADY_AWARDED = 3;
		ERROR_PLAYER_OUT_OF_RANGE = 4;
	}

	GOBFEDMHGGK hhkodmoefol = 1;
}

message JIJLPNKPOCP {
	GameplayWeatherProto.WeatherCondition icnjpmpgnnk = 1;
	repeated IDJMLGDHNHI lojbhbgllgp = 2;
	repeated IDJMLGDHNHI lhdppafllje = 3;
}

message JINPEAACFFD {
	int32 bghcellpffc = 1;
	int32 ibfbphblmmf = 2;
}

message JJANBDNBLOI {
	enum GCNKJNHNINO {
		UNSET = 0;
		SUCCESS = 1;
		AWARDED_ALREADY = 2;
	}

	GCNKJNHNINO hhkodmoefol = 1;
	repeated GIKDFLAJIDF ojgckfiagpm = 2;
	repeated BFABHCMKGCB pdeejlemdhi = 4;
	repeated string ckdihiinphi = 5;
}

message JJDEGAMJEPC {
	enum ANDPFFCMOHP {
		UNSET = 0;
		POKEMON_CAPTURED = 1;
		POKEMON_FLED = 2;
	}

	ANDPFFCMOHP hhkodmoefol = 1;
	int32 blhabfdhobn = 2;
	int32 gfghaaephjj = 3;
	uint64 igfdgcikjem = 4;
	IBGGKKNEKOA nnnmmlpnchp = 5;
	ECBJDBHKDAE iphfojfkcnl = 6;
}

message JKBBFAOINGP {
	enum KFIBPLAIPHM {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_DISABLED = 2;
	}

	KFIBPLAIPHM llponloodfk = 1;
	FCLDEPJJJHM eadjnngbcap = 2;
}

message JKBPCKHOGIJ {
	repeated IBGGKKNEKOA.DDEDEGGJGPH ckahpbnljmg = 1;
}

message JKGFLCFMDOL {
	repeated PCNMLNDPOML plncdpkcoml = 1;
	uint64 ncbaddoaemo = 2;
}

message JKGNNPONNNO {
}

message JKJCDKKKEMB {
	enum LDHGENDAMOK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_SAME_TEAM = 2;
		ERROR_ITEM_NOT_IN_INVENTORY = 3;
		ERROR_WRONG_ITEM = 4;
		ERROR_UNKNOWN = 5;
	}

	LDHGENDAMOK llponloodfk = 1;
	EHIECBBPACE doadjpohlbg = 2;
}

message JKMFLBLEKFC {
	string dbhpmnaaoik = 1;
	bool hbopflfeopg = 2;
	bool gpcgddjekab = 3;
	bool mdcpjdjcjjl = 4;
}

message JLBLANPCHJB {
	string godfillmpmn = 1;
	string obbickmckep = 2;
}

message JLCPCCCPGKN {
	KBBGOLDGILB.LCBDHPCGHLE hhkodmoefol = 1;
	bool bbamdjgnkmf = 2;
	bool kheodfnoljg = 3;
	int32 gceielnimla = 4;
	bool fpnbahjgobf = 5;
	int32 giiifglkjoj = 6;
	uint32 fffliffjkao = 7;
	int32 pcdmgcgdeee = 8;
	bool cjkbbioihfg = 9;
	bool jhhgjgiegbf = 10;
}

message JLDAAPDABPH {
	message ODFBOIGGEOE {
		bool egindlaefjg = 1;
		bool cjpmcekbmch = 2;
	}

	bool felbonfpjil = 1;
	int32 dopoogoolfd = 2;
	ODFBOIGGEOE mjegffhoejj = 3;
}

message JLDJJCPLJLP {
	uint64 ghadpgjcoel = 1;
	string blpnlkdpbla = 2;
	string ngbidgclakh = 3;
	string hianpamgdph = 4;
	string kfhpblcjgee = 5;
	string gfepbfmmdcc = 6;
	string mgeiaokbdbi = 7;
	double kdfjiijebjg = 8;
	double agndimhpnjk = 9;
	string omejlbelfjm = 10;
	int64 ilcelenmoki = 11;
	int64 ibanadhajai = 12;
	uint64 ajggfogmoan = 13;
	bool nghdnklolom = 14;
	repeated LJACKGHOCHI hgfebmjngmb = 15;
	AGJKMAADOHK.KLHBAOENIMK kjobkbdpppn = 16;
	string mggbbndiemh = 17;
	int64 ohdjkgpemeh = 18;
}

message JLHFBGGIIHC {
	enum KDIDPEJJPBJ {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NO_POKEMON = 2;
		ERROR_CANNOT_USE = 3;
		ERROR_DEPLOYED_TO_FORT = 4;
	}

	KDIDPEJJPBJ hhkodmoefol = 1;
	int32 ijjgponbajg = 2;
}

message JLILLMNGKLP {
	bool hedbhjimbmc = 1;
	bool akcjbdanolj = 2;
	bool jcboedkilhi = 3;
	bool jblghgjdigc = 4;
	float eneofoihlbi = 5;
	uint32 ildalodleee = 6;
	string ilbbbdklnoj = 7;
}

message JLKOLGJGPGD {
	enum AGNEFIDAFEK {
		PROFILE = 0;
		FRIENDS = 1;
	}

	enum AKNAONONFJF {
		TODAY_VIEW = 0;
		FIELD_RESEARCH = 1;
		SPECIAL_RESEARCH = 2;
	}

	enum HHHCIEPJKEC {
		NEARBY_POKEMON = 0;
		RAIDS = 1;
		ROUTES = 2;
	}

	enum HPBOBAPCOPI {
		UNSET = 0;
		OPEN_SHOP = 1;
		OPEN_NEWS = 2;
		OPEN_BATTLE_LEAGUE = 3;
		OPEN_SETTINGS = 4;
		OPEN_PLAYER_PROFILE = 5;
		OPEN_BUDDY = 6;
		OPEN_AVATAR_ITEMS = 7;
		OPEN_QUEST_LIST = 8;
		OPEN_POKEMON_INVENTORY = 9;
		OPEN_NEARBY_POKEMON = 10;
		OPEN_POKEDEX = 11;
		OPEN_EVENTS = 12;
		OPEN_JOURNAL = 13;
		OPEN_TIPS = 14;
		OPEN_ITEM_INVENTORY = 15;
		FILL_REFERRAL_CODE = 16;
		OPEN_ADDRESS_BOOK = 17;
	}

	enum MPOHJDJHBOA {
		COMBAT_PARTY = 0;
		POKEMON = 1;
		EGGS = 2;
	}

}

message JLMDADBCBKE {
	NECCKHDNPKM pgdgeobanmh = 1;
	int32 jgdpdgjemkd = 2;
}

message JMDPOIAHFCA {
	enum NOAECFHGDHN {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_RAID_UNAVAILABLE = 2;
		ERROR_LOBBY_NOT_FOUND = 3;
	}

	NOAECFHGDHN hhkodmoefol = 1;
	NNGBBEPJIDA ngefmadkckh = 2;
}

message JMFCGDMDKPL {
}

message JMLOOJKCDNE {
	enum NHHFHCIAIDA {
		UNSET = 0;
		SUCCESS = 1;
	}

	NHHFHCIAIDA hhkodmoefol = 1;
	string ajbpmokphcc = 2;
}

message JNCEJNKDEJH {
	BFABHCMKGCB acifngkjfjh = 1;
	int32 nilcjmkfggi = 2;
	string ahcgfgkkkdn = 3;
	uint64 igfdgcikjem = 4;
	double icnndjclaef = 5;
	double ogmopfkhcpa = 6;
}

message JNHMPJDOBHP {
	float jcjddhpbgpp = 1;
}

message JNJOIFKFCPO {
	int32 ceabceojacp = 1;
	int32 ffgiphknghl = 2;
	repeated int32 pgihkaiebgb = 3;
	repeated int32 decbgphhfcl = 4;
	float addlmkklgjl = 5;
	float kkabmmggdph = 6;
	float acgbpagnjjc = 7;
	float eoepmppkchk = 8;
	int32 dnlmjheckcd = 9;
	int32 ngphdgmlddc = 10;
	int32 iidfgdeeibg = 11;
	repeated int32 pahpnophafb = 12;
	int32 kihodccgead = 13;
}

message JNKJIAMIHJH {
	int32 jeaggaghjic = 1;
	int64 clfgcfkafhm = 2;
	int64 gjkfhcpdhjl = 3;
	int64 afamomefdln = 4;
	float pccjfkdalpc = 5;
	int32 hdmhcbfcmgo = 6;
	int32 oaojlpdoemc = 7;
	int32 mfkojnllnkc = 8;
	int32 hfgdfgcjocm = 9;
	int32 kgjejfgcamk = 10;
	int32 eagihcljnmp = 11;
	int32 edfohjkbcag = 12;
	int32 gpjhijbahof = 13;
	int32 neopgbjniph = 14;
	int32 bdmmiaobjkc = 15;
	int32 gkhpkjcoadh = 16;
	int32 iabackgdggc = 17;
	int32 ogondlojpdo = 18;
	int32 mchnkenclpp = 19;
	int32 kmohjfbniim = 20;
	int32 dcolnmccegp = 21;
	repeated int32 nlahnkjhfdn = 22;
	int32 gekgidpbopj = 23;
	double bkdmkhiabkf = 24;
	int64 mobefllkiok = 25;
	int32 ffdlmmgjjma = 26;
	int32 mdlfpegohoi = 27;
	int32 mgdedobloop = 28;
	int32 finmmbodjoj = 29;
	int32 achkjjbajjb = 30;
	int64 midiiiaeagp = 31;
	repeated DCAECPGGPON ebkobmddmnf = 32;
	float nlomnamafpi = 33;
	int32 jpnmegkhdhe = 34;
	int32 pgnodkppgfc = 35;
	int32 jpbfbpnbnff = 36;
	int64 pkmpoamhjmp = 37;
	int64 dambedgpbea = 38;
	NIAHNHJLNKG adebklcjgdd = 39;
	int32 nbipllkmpdp = 40;
	int32 gbglloiemom = 41;
	int32 ibolpgicobh = 42;
	int32 iimabpeonpg = 43;
	int32 gdjbngigfef = 44;
	int32 oipilkmeeeb = 47;
	int32 oeiejlcpicm = 48;
	int32 ilphadkeaig = 49;
	int32 ohgdipegbda = 50;
	int32 ifinioagmll = 51;
	int32 jbeibpcjaeg = 52;
	int32 cimcjkafcdj = 53;
	int32 ckjdjjginhi = 54;
	int64 egaldjafegb = 55;
	int32 jjlnkinghid = 56;
	int32 bmgoohmmchc = 57;
	int32 gekhgaooghk = 60;
	int32 aplhnonlhel = 61;
	int32 hjjbaajlolg = 62;
	int32 fnobjbjaoni = 63;
	int32 hopbbbdfopc = 64;
	int32 afaakmiljgd = 65;
	int32 iffjnfonkom = 67;
	int32 efolmkekckm = 69;
	int32 kmijpnloalf = 70;
}

message JNNEAMJJILK {
	enum BKJNMHHECFO {
		NONE = 0;
		TRAINER_NPC_COMBAT = 1;
		INVASION_GRUNT_COMBAT = 2;
		INVASION_BOSS_COMBAT = 3;
		FRIEND_COMBAT = 4;
	}

	bool ebmhichpcgp = 1;
	int32 hihgoeaaoim = 2;
	bool inkhndlafhi = 3;
	uint32 iajlpmmijec = 4;
	int32 bfalfdejhop = 5;
	int32 ndgplbcdclm = 6;
	int32 hagjibgkbpo = 7;
	int32 pkechphbmjm = 8;
	int32 foahjhkchid = 9;
	int32 lmcpjmffgdd = 10;
	bool apodckjokkc = 11;
	bool jkbkmhcjljg = 12;
	bool mpdpgickgme = 13;
	bool ekdmdhijfoh = 14;
	int32 bnfjlhimakj = 15;
	int32 pahnnecdmfm = 16;
	int32 bilfoaecggo = 17;
	bool baniejhjdbp = 18;
	bool lbjjkoclkbk = 19;
	bool bdeanbldadc = 20;
	bool ejfhlnedmho = 21;
	int32 jkdpchechpp = 22;
	int64 pkcilpgklij = 23;
	int32 dahmlnndhme = 24;
	repeated BKJNMHHECFO naigfkgllmb = 25;
	repeated string hndahhmnfmc = 26;
}

message JNOMOAKILEC {
	string plkjlhilhfb = 1;
}

message JNPCNHMKDMB {
	string edabjienhim = 1;
	int32 jeaggaghjic = 2;
	MIHKJLMMMGA ggokaolekab = 3;
	MBJGAPHFDHC neifnabaggg = 4;
	int32 ebhklopjhlk = 5;
	float pccjfkdalpc = 6;
	int32 fgckopjbiec = 7;
	PJBIONEILPM ipgfkdaidgm = 8;
	repeated GAMMMHKHAMF aoapobnhdni = 9;
	int64 clfgcfkafhm = 10;
	bool mkdcldpcdgh = 11;
	int32 peljphdjfbh = 12;
	float jphppcoijjb = 13;
	GJFBNOPGACK gkmbjpelagm = 14;
}

message JOJAIKJBOLF {
	enum OODDLIFEHKD {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INCUBATOR_NOT_FOUND = 2;
		ERROR_POKEMON_EGG_NOT_FOUND = 3;
		ERROR_POKEMON_ID_NOT_EGG = 4;
		ERROR_INCUBATOR_ALREADY_IN_USE = 5;
		ERROR_POKEMON_ALREADY_INCUBATING = 6;
		ERROR_INCUBATOR_NO_USES_REMAINING = 7;
	}

	OODDLIFEHKD hhkodmoefol = 1;
	JHGOGCEHGIA lakfibjckfp = 2;
}

message JOJDJNPLMFO {
	enum MFIAFPMIBHM {
		INVASION_AVAILABILITY_SETTINGS_UNSET = 0;
		INVASION_AVAILABILITY_SETTINGS_MONDAY = 1;
		INVASION_AVAILABILITY_SETTINGS_TUESDAY = 2;
		INVASION_AVAILABILITY_SETTINGS_WEDNESDAY = 3;
		INVASION_AVAILABILITY_SETTINGS_THURSDAY = 4;
		INVASION_AVAILABILITY_SETTINGS_FRIDAY = 5;
		INVASION_AVAILABILITY_SETTINGS_SATURDAY = 6;
		INVASION_AVAILABILITY_SETTINGS_SUNDAY = 7;
	}

	int64 nikejkmmplm = 1;
	int64 fflohbedmkc = 2;
}

message JOLDPAMFDLN {
	oneof ABILMJHOGPI {
		IKEBFPAKGIF character_display = 10;
		PFFLKCBDFCF invasion_finished = 11;
	}

	string oocggedbcke = 1;
	int64 hdngmfjogjk = 2;
	int64 leldggcclih = 3;
	bool cececiagahi = 4;
	bool eanohjjkmpm = 5;
	KOALJFNPGBK hjdcncgdjfn = 6;
	int32 mckpjilcddp = 7;
	bool oejollbioia = 8;
}

message JOLNMDLIEMA {
	repeated OPHGLHPHJHJ lgjjfglhbcl = 1;
}

message JOOOGMOHMNG {
	enum EBMIDJHJDNC {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_ITEM_TYPE = 2;
		ERROR_XP_BOOST_ALREADY_ACTIVE = 3;
		ERROR_NO_ITEMS_REMAINING = 4;
		ERROR_LOCATION_UNSET = 5;
	}

	EBMIDJHJDNC hhkodmoefol = 1;
	HCLDOPDIFHO pncjajihjhk = 2;
}

message JPEKHIIBGOK {
	PJLBLLIIDMG.NBGEPKLBAHL hhkodmoefol = 1;
	ACMJMCCMKOD.GHFKJCMAMFN aihkgechdic = 2;
	uint32 fffliffjkao = 3;
	repeated BHCNOFEPILP eimhnfbidac = 4;
	uint32 hjoifgfcadh = 5;
	uint32 chinpeihmjg = 6;
}

message JPHNPFADKEO {
	repeated JHGOGCEHGIA lakfibjckfp = 1;
}

message JPNNNCBFBJH {
	enum LDBEJNMEPIC {
		INCENSE_ENCOUNTER_UNKNOWN = 0;
		INCENSE_ENCOUNTER_AVAILABLE = 1;
		INCENSE_ENCOUNTER_NOT_AVAILABLE = 2;
	}

	LDBEJNMEPIC hhkodmoefol = 1;
	int32 eokcbhecaai = 2;
	double ddpmccoobod = 3;
	double jcolbanhgpk = 4;
	string komegjnnkib = 5;
	uint64 pkljdiaplkc = 6;
	int64 ncbidhhllff = 7;
	IBGGKKNEKOA nnnmmlpnchp = 8;
}

message KACKJEJBHLK {
	string lkheohlgndb = 1;
	uint64 ghadpgjcoel = 2;
}

message KANPDIBKAEP {
	string flnekghfefk = 1;
	BKEDJHGEELJ pplgileafni = 2;
	int64 ioajpbkdjjd = 3;
	int64 odcelpnkacg = 4;
	ALPAADFICGP hnbjaicpgdf = 5;
}

message KAONAJBABOO {
	bool gmaefaehmfo = 1;
	bool gacakgfbklc = 2;
	bool eaiohoipjie = 3;
	bool fhomdmohdoo = 4;
	bool pmjlmcoeojj = 5;
	bool dfobojcgmpd = 6;
	bool iiegggfhmkc = 7;
	bool bpaeigeegjc = 8;
	bool iieinlbfibp = 9;
	bool akiljiafpdc = 10;
	bool jpfnfkeoodj = 11;
	repeated MLCJKIIMCOP nbjkhkjkehb = 12;
}

message KBBGOLDGILB {
	enum LCBDHPCGHLE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_RAID_COMPLETED = 3;
		ERROR_RAID_UNAVAILABLE = 4;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 5;
		ERROR_POI_INACCESSIBLE = 6;
	}

	NNGBBEPJIDA ngefmadkckh = 1;
	KLGNLFGLMEM elkikajipbj = 2;
	bool ghmcpgabfie = 3;
	LCBDHPCGHLE hhkodmoefol = 4;
	MMJEAILADJO ekcodclomef = 5;
	bool bbamdjgnkmf = 6;
	bool kheodfnoljg = 7;
	int32 gceielnimla = 8;
	bool fpnbahjgobf = 9;
	int32 giiifglkjoj = 10;
	int64 dgekaaoeode = 11;
	int32 pcdmgcgdeee = 12;
	bool nbggfdeieod = 13;
	int32 dimbbjlcnib = 14;
	bool cjkbbioihfg = 15;
	bool jhhgjgiegbf = 16;
	BFABHCMKGCB kkagkkighdm = 17;
}

message KBHKOKDGPHL {
	string iomfibmhiip = 1;
}

message KBJGDCHGCAN {
	BFABHCMKGCB apgnpjbapog = 1;
	EHAGMDBOMIL mlpkgmcbapf = 2;
	LFCGMBEAIKE cpmfkoedaek = 3;
	float gpdelahfnol = 4;
	int32 nfaknojjnll = 5;
	OOBOINDKCDH ihccaegggcb = 6;
	CBBPJINJDBN biiblgppnkl = 7;
	NGFMDOMIKDG llbcfjfghga = 8;
	MIBMKCLCGJO hdlfefpaljd = 9;
	GJDKKBMDCNB bojacnihklm = 10;
	PJHMIONLPBE mineglijhgg = 11;
	PGCDJCOLNHF ijjbdlhemah = 12;
	HAHPDNIIAEC cpkgnmkffja = 13;
	PHJEENCEHBB lakfibjckfp = 14;
	DNPCLEIMBCJ aibfjfhdolm = 15;
	LPCECKEPEHI amkiipbnphm = 16;
	KOEFGAFIJLN kabkgkhpkda = 17;
	PKJJOAGPANE mjmmnebnieg = 18;
	bool plcoekeiiic = 19;
}

message KBLOPKKNMJG {
	bool lmchpigcagh = 1;
	repeated string dflbcdfnlip = 2;
}

message KBODINMDNLE {
	bool nmfmhmhmkpk = 1;
	repeated string ljmpeapcdjh = 2;
	repeated string bmjigcfhfpo = 3;
	bool mpjcenmpleo = 4;
}

message KCCEMDBINAI {
	int32 kfcmojkoddc = 1;
}

message KCDBGPELKBJ {
}

message KCEIOKNIKPJ {
	BFABHCMKGCB mmhlndalpdg = 1;
}

message KCJHPLCPBPG {
	bool fncmjcpigcn = 1;
}

message KCNIILBABPN {
	oneof DCFAJHOOGME {
		MFJALKJICAJ wild_detail = 1;
		GMDLJFGGPIN egg_detail = 2;
		DBCOPLDPEPL raid_detail = 3;
		EGABODEKNMN quest_detail = 4;
		GENAIMNEDNN vs_seeker_detail = 5;
		MOFGEHCDAAM invasion_detail = 6;
		OEOCFMAELMK photobomb_detail = 7;
		MEMDKPJHMIN tutorial_detail = 8;
	}

}

message KDLPNEJHOGN {
}

message KDPKDEIBKBK {
	uint64 hjgmipfjaaf = 1;
	double cmjhcgdfolp = 2;
	double egddjihjedc = 3;
	KEFCKGDMLFB dmecnkkcpeo = 4;
	int64 ipafdojgfop = 5;
	bool gfnnbceammb = 6;
}

message KECAOGNIFPK {
	enum CNLAAFNHDNK {
		SUCCESS = 0;
		ERROR = 1;
	}

	CNLAAFNHDNK llponloodfk = 1;
}

message KEDPAMFCCIO {
}

message KEFCKGDMLFB {
	int64 jabhfllnpha = 1;
	int32 fjdhldkllcc = 2;
	int32 pbgcbopkpca = 3;
}

message KEKMBIELJKG {
	enum LDINEAPBBNP {
		UNSET = 0;
		SUCCESS = 1;
		PAGE = 2;
		RETRY = 3;
	}

	repeated FCFGINLEOLP ncacpiojjka = 1;
	uint64 fojnmdbfmja = 2;
	LDINEAPBBNP hhkodmoefol = 3;
	int32 ddjilmjnhji = 4;
}

message KELAPNFCPCK {
	enum HKFNONHMCIH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_RAID_UNAVAILABLE = 3;
		ERROR_RAID_COMPLETED = 4;
		ERROR_NO_AVAILABLE_LOBBIES = 5;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 6;
		ERROR_POI_INACCESSIBLE = 7;
		ERROR_GYM_LOCKOUT = 8;
		ERROR_NO_TICKET = 9;
		ERROR_NO_REMOTE_TICKET = 10;
		ERROR_NO_INVITE = 11;
		ERROR_NO_REMOTE_SLOTS_REMAINING = 12;
		ERROR_LOBBY_FULL = 13;
		ERROR_LOBBY_EXPIRED = 14;
	}

	HKFNONHMCIH hhkodmoefol = 1;
	NNGBBEPJIDA ngefmadkckh = 2;
}

message KENGFOEAJOC {
	enum CKPCCBNKCFH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	CKPCCBNKCFH hhkodmoefol = 1;
	int64 dimmklpadmh = 2;
}

message KFKMKCKOBCE {
}

message KFPDEMCHJOJ {
	enum MHFNLOHAGIK {
		SUCCESS = 0;
		ALREADY_COMPLETED = 1;
		ACTIVE_ITEM_EXISTS = 2;
		NO_ITEM_IN_INVENTORY = 3;
		INVALID_ITEM_CATEGORY = 4;
	}

	MHFNLOHAGIK llponloodfk = 1;
	DCMHMGIGNLJ ihnhoapaepl = 2;
	BFABHCMKGCB kkagkkighdm = 3;
}

message KGIIFABMANL {
	oneof HFJBPGIJPGM {
		NADFALIGENL mini_collection = 2;
	}

	DCAECPGGPON epmmciendad = 1;
}

message KHAAIDOOEGJ {
	enum CFJGNPCLMKE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
	}

	CFJGNPCLMKE hhkodmoefol = 1;
	CLLOCMAOPDJ dmkmeeheamb = 2;
}

message KHDENDAOFBE {
	enum GELCDPNBJDP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 2;
		ERROR_POKEMON_LINEUP_INELIGIBLE_FOR_LEAGUE = 3;
		ERROR_ACCESS_DENIED = 4;
	}

	GELCDPNBJDP hhkodmoefol = 1;
	JGHBGMKOLJK kanajhkhmhb = 2;
}

message KHFOMIICDJE {
	message CDGCOFDGKFF {
		string lkheohlgndb = 1;
		string bfljhnkfaba = 2;
	}

	repeated CDGCOFDGKFF afomnodeiij = 1;
	repeated CDGCOFDGKFF pidmokkfkld = 2;
}

message KHHDNFOJHNF {
	repeated BFABHCMKGCB aolodkafgaj = 1;
	repeated BFABHCMKGCB jljdgkklmip = 2;
}

message KHOFOOOHEMH {
	enum KLBNGMEMMNL {
		COLOR_UNSET = 0;
	}

	enum NMMLLFIBBLC {
		TYPE_UNSET = 0;
	}

	NMMLLFIBBLC ldccnikjabe = 1;
	KLBNGMEMMNL jdbflapgnpm = 2;
	string nkgbkeegomj = 3;
	string pofcpnikfel = 4;
	string cpmfkoedaek = 5;
	int32 bkoeoeocnkb = 6;
}

message KIHBIGMIDLB {
	int32 deinignmnha = 1;
	int32 bclgaepmofd = 2;
}

message KIHBOKHLNED {
	enum NHPPHJMOIHL {
		VS_SEEKER_ENCOUNTER_UNKNOWN = 0;
		VS_SEEKER_ENCOUNTER_SUCCESS = 1;
		VS_SEEKER_ENCOUNTER_ALREADY_FINISHED = 2;
		ERROR_PLAYER_NOT_ENOUGH_VICTORIES = 3;
		ERROR_POKEMON_INVENTORY_FULL = 4;
		ERROR_REDEEM_ITEM = 5;
	}

	NHPPHJMOIHL hhkodmoefol = 1;
	NHLCGNMFNOM piddpkfgmod = 2;
	DCMHMGIGNLJ ihnhoapaepl = 3;
	BFABHCMKGCB kkagkkighdm = 4;
	uint64 pkljdiaplkc = 5;
}

message KIKAJDJFJKA {
	enum EDHJJHIOFPJ {
		UNSET = 0;
		STAGE1 = 1;
		STAGE2 = 2;
		STAGE3 = 3;
	}

	EDHJJHIOFPJ kpjekbljega = 1;
	bytes obbickmckep = 2;
}

message KIONGGFFJCP {
	int32 lnlkdlaiico = 1;
	int32 emnlnalikkc = 2;
	int64 joghfanihmi = 3;
	int64 agkanflkpfe = 4;
}

message KIONMGNHHOL {
	enum HCHDLMJJLCO {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	HCHDLMJJLCO llponloodfk = 1;
}

message KJCFMGNCFNL {
	string lkheohlgndb = 1;
	uint64 ghadpgjcoel = 2;
	bool ibgfingdiak = 3;
}

message KJCPLDGHMHE {
	int64 pkljdiaplkc = 1;
	string gfepbfmmdcc = 2;
	double icnndjclaef = 3;
	double ogmopfkhcpa = 4;
	double kbgeoncpmbj = 5;
	double jkgggjheffd = 6;
}

message KJEFONPBKCL {
	float nnjljidnidg = 1;
}

message KJFDIFAJMAE {
}

message KJKHPIDBEAD {
}

message KKDBIFMIGKA {
	bool ippaccedpik = 1;
	repeated PCNMLNDPOML lahokpiipjb = 2;
	PCNMLNDPOML jhpkpkmckim = 3;
	int32 ljcmbfpicmi = 4;
}

message KKGIKOHDFBP {
	string jlpmmlbclok = 1;
	ICMPEJGKAAH ipcldpmlhbj = 2;
	string dponoaehcak = 3;
	int32 dphkfnpgkja = 4;
}

message KKGJFANEEGI {
	int64 dloafgmmhfl = 1;
	repeated float aikpbpgbhkb = 2;
	repeated float odllmkhfoeo = 3;
}

message KKLBFOOOMBA {
	enum LMOAGFJPMJJ {
		UNSET = 0;
		SUCCESS = 1;
	}

	LMOAGFJPMJJ hhkodmoefol = 1;
	repeated FNAEMJCJMFI dcghenmcimk = 2;
}

message KKMMNIIOAPI {
	DGHCAOAEEAG jeaggaghjic = 1;
	int32 dddpofldoac = 2;
	repeated JOFACALMFCP cbnfaebeann = 3;
	int32 hmodlcgkjje = 4;
}

message KKNNNHBMLNF {
	string lacfcomnkkg = 1;
	repeated string aohbmhafkhc = 2;
}

message KLGNLFGLMEM {
	int64 pniikgdbnoa = 1;
	int64 moohipbgpjh = 2;
	string dileendfikh = 3;
	ELEGOIEBFIM dchbfpddiig = 4;
	ACMJMCCMKOD epmnkbjjplo = 5;
	ELEGOIEBFIM penhheilocg = 6;
	GameplayWeatherProto.WeatherCondition icnjpmpgnnk = 7;
	OBICLGNCNFN lbanlicclch = 8;
}

message KLJBHPNIBGL {
	message BIECPLELNPM {
		oneof OJJJLJNBCNJ {
			AMKKJIAEOGO pokemon = 1;
			BPLDMJNFOCK limited_pokemon_reward = 2;
			BPLDMJNFOCK guaranteed_limited_pokemon_reward = 3;
		}

		int32 pcnofnjcgck = 4;
		float lbjcbmemcbn = 5;
		HCHNPEJPJLD hpnemklhiig = 6;
		HCHNPEJPJLD blghgbdmmcb = 7;
		HCHNPEJPJLD nocaajclkkg = 8;
	}

	message HCHNPEJPJLD {
		oneof AGCLHMNNLBB {
			PFBJBODIBMH range = 1;
			bool zero = 2;
		}

	}

	repeated BIECPLELNPM mfbmgiiemgo = 1;
	JACGNJEMAKN dmijpaiccfj = 2;
}

message KMAEGNPECKM {
	enum JDGKAGDDAHK {
		UNSET = 0;
		SUCCESS = 1;
	}

	JDGKAGDDAHK hhkodmoefol = 1;
	string cmldemjecei = 2;
	EJPBMINNHBN acbpiimiphk = 3;
}

message KMFDJPAPHBM {
	int32 dhfmfjemjli = 1;
	repeated PCNMLNDPOML jfcppdonjna = 2;
	repeated IBGGKKNEKOA.IBGFAGKHKGN pbkpgfflifb = 3;
	repeated IBGGKKNEKOA.BNNGGJPIPIH hhnjkfbhgbm = 4;
}

message KMHCCPJEION {
	oneof CCJCEAEJFNP {
		EONICCBEILE open_combat_session_data = 2;
		MCGJABKCBEA open_combat_session_response_data = 3;
		NPKKHCFAMHJ update_combat_data = 4;
		PJPCFIEPNOF update_combat_response_data = 5;
		NACHJFJJCOO quit_combat_data = 6;
		ELPOMPFEBMI quit_combat_response_data = 7;
		AGENAAGBEEE web_socket_response_data = 8;
		MFDBCLLLINJ rpc_error_data = 9;
		IMOJBNOFECA get_combat_player_profile_data = 10;
		MECABJOMLEH get_combat_player_profile_response_data = 11;
		NENJNLBAEIA generate_combat_challenge_id_data = 12;
		MKHHILENCDB generate_combat_challenge_id_response_data = 13;
		EKFKCHDAJGO create_combat_challenge_data = 14;
		PLOBBGOGMNB create_combat_challenge_response_data = 15;
		GIFOLDGPPGP open_combat_challenge_data = 16;
		NNEGJCOCFOP open_combat_challenge_response_data = 17;
		GEJGHLAECCH open_npc_combat_session_data = 18;
		CIBPBJNFIBK open_npc_combat_session_response_data = 19;
		NFBABJFGHNG accept_combat_challenge_data = 20;
		FGOPBILAKBN accept_combat_challenge_response_data = 21;
		IDNIMHMFPMG submit_combat_challenge_pokemons_data = 22;
		NDKANLHIAFK submit_combat_challenge_pokemons_response_data = 23;
		LIFPCJOHBKM decline_combat_challenge_data = 24;
		CLBIEAJDOOO decline_combat_challenge_response_data = 25;
		LCJCPEDMNGN cancel_combat_challenge_data = 26;
		INPNDEBCNOB cancel_combat_challenge_response_data = 27;
		FJGBEPPMMOO get_combat_challenge_data = 28;
		EBEOJAMPGNE get_combat_challenge_response_data = 29;
		HNDCEACDIDA vs_seeker_start_matchmaking_data = 30;
		JCCOIOBIMDN vs_seeker_start_matchmaking_response_data = 31;
		FLLAPHHAGJD get_matchmaking_status_data = 32;
		NDJEFPMAHEL get_matchmaking_status_response_data = 33;
		CPCLPPGAABJ cancel_matchmaking_data = 34;
		EKEJKFEANKL cancel_matchmaking_response_data = 35;
		FIOENLEKBGB submit_combat_action = 36;
		CLNPCPDDEII invasion_open_combat_session_data = 37;
		BHDLBNFBLHK invasion_open_combat_session_response_data = 38;
		CAGHJKANJHF invasion_battle_update = 39;
		LBMLCICHMEJ invasion_battle_response_update = 40;
		DEGIOBJFLHN combat_id_mismatch_data = 41;
		PMJOHFOHGFG league_id_mismatch_data = 42;
		OPAFGJPFCNH challenge_id_mismatch_data = 43;
		FNAEHFBNHNM progress_token_data = 44;
		IGBIBJHMFCF on_application_focus_data = 45;
		BDBFDABJAMF on_application_pause_data = 46;
		PDJAMOCJAAA on_application_quit_data = 47;
		LIMNPPJDEDB exception_caught_data = 48;
		EGICDHIABHP combat_pub_sub_data = 49;
		GEKAGCCNAHH combat_end_data = 50;
		LAHMOIFGOJA combat_sync_server_data = 51;
		IOAIINDBDBH combat_sync_server_response_data = 52;
	}

	message LGFABOIJPEN {
		enum MHEKLBNOJBN {
			NO_TYPE = 0;
			OPEN_COMBAT_SESSION = 1;
			OPEN_COMBAT_SESSION_RESPONSE = 2;
			UPDATE_COMBAT = 3;
			UPDATE_COMBAT_RESPONSE = 4;
			QUIT_COMBAT = 5;
			QUIT_COMBAT_RESPONSE = 6;
			WEB_SOCKET_RESPONSE = 7;
			RPC_ERROR = 8;
			GET_COMBAT_PLAYER_PROFILE = 9;
			GET_COMBAT_PLAYER_PROFILE_RESPONSE = 10;
			GENERATE_COMBAT_CHALLENGE_ID = 11;
			GENERATE_COMBAT_CHALLENGE_ID_RESPONSE = 12;
			CREATE_COMBAT_CHALLENGE = 13;
			CREATE_COMBAT_CHALLENGE_RESPONSE = 14;
			OPEN_COMBAT_CHALLENGE = 15;
			OPEN_COMBAT_CHALLENGE_RESPONSE = 16;
			OPEN_NPC_COMBAT_SESSION = 17;
			OPEN_NPC_COMBAT_SESSION_RESPONSE = 18;
			ACCEPT_COMBAT_CHALLENGE = 19;
			ACCEPT_COMBAT_CHALLENGE_RESPONSE = 20;
			SUBMIT_COMBAT_CHALLENGE_POKEMONS = 21;
			SUBMIT_COMBAT_CHALLENGE_POKEMONS_RESPONSE = 22;
			DECLINE_COMBAT_CHALLENGE = 23;
			DECLINE_COMBAT_CHALLENGE_RESPONSE = 24;
			CANCEL_COMBAT_CHALLENGE = 25;
			CANCEL_COMBAT_CHALLENGE_RESPONSE = 26;
			GET_COMBAT_CHALLENGE = 27;
			GET_COMBAT_CHALLENGE_RESPONSE = 28;
			VS_SEEKER_START_MATCHMAKING = 29;
			VS_SEEKER_START_MATCHMAKING_RESPONSE = 30;
			GET_MATCHMAKING_STATUS = 31;
			GET_MATCHMAKING_STATUS_RESPONSE = 32;
			CANCEL_MATCHMAKING = 33;
			CANCEL_MATCHMAKING_RESPONSE = 34;
			SUBMIT_COMBAT_ACTION = 35;
			INVASION_OPEN_COMBAT_SESSION = 36;
			INVASION_OPEN_COMBAT_SESSION_RESPONSE = 37;
			INVASION_BATTLE_UPDATE = 38;
			INVASION_BATTLE_UPDATE_RESPONSE = 39;
			COMBAT_ID_MISMATCH = 40;
			LEAGUE_ID_MISMATCH = 41;
			CHALLENGE_ID_MISMATCH = 42;
			PROGRESS_TOKEN = 43;
			ON_APPLICATION_FOCUS = 44;
			ON_APPLICATION_PAUSE = 45;
			ON_APPLICATION_QUIT = 46;
			EXCEPTION_CAUGHT = 47;
			PUB_SUB_MESSAGE = 48;
			PLAYER_END_COMBAT = 49;
			COMBAT_SYNC_SERVER = 50;
			COMBAT_SYNC_SERVER_RESPONSE = 51;
		}

		MHEKLBNOJBN ldccnikjabe = 1;
		uint32 jpejmpfnemc = 2;
		uint32 cdllhoejhkb = 3;
		float oapfochbljl = 4;
	}

	LGFABOIJPEN mebcjpidnjm = 1;
}

message KMHHGOPNMCN {
	enum JCANDJAFINO {
		UNSET = 0;
		SUCCESS = 1;
	}

	JCANDJAFINO hhkodmoefol = 1;
	PAEHCJKJPLP acbpiimiphk = 2;
	int32 inajmmplclj = 3;
	int32 gnkjgefflcn = 4;
}

message KMPPDILLCKH {
	float jjlbedpkbfa = 1;
	int32 ficmgmlbhmp = 2;
}

message KNCHFDNEFDI {
}

message KNDCDEPHGBJ {
	float gaajkncnnmp = 1;
	float gkhphkplhbc = 2;
	float igciepadpbm = 3;
	float ejipcomgaok = 4;
	float onnjkbcpgpp = 5;
	bool hbmnpkoaiah = 6;
	float dpclmcabhed = 7;
}

message KNIBLDOKBEE {
	repeated string hdhelgjcbfp = 1;
}

message KOAGHKIGCDG {
	string godfillmpmn = 1;
	double chhgiikbnma = 2;
	double flaphjheime = 3;
}

message KOEFGAFIJLN {
	bool bcblmkccbdg = 1;
	int32 fedamjkncfe = 2;
	BFABHCMKGCB lfilnlcplpe = 3;
}

message KOFBOBFKIGL {
	MBKJCODCAKE.OEIDGAHAMII likhphmlcgl = 1;
	uint64 ehmhemllaog = 2;
}

message KOJMFBANDOF {
	repeated string gdofdcppaca = 1;
}

message KOKDFLOMCNB {
	bool ofbjlgcnmmb = 1;
}

message KPAHMDIBMHI {
	int32 mgfnknikoid = 1;
	int64 oceojkbjnnm = 2;
	int32 cojdhghhjbj = 3;
	int32 npdghanemim = 4;
	int32 hlfdomcbjff = 5;
}

message KPGCFHCDKAE {
	bool pchfnjcfaom = 1;
}

message KPONKMGEFME {
	int32 ghkfggknmop = 1;
	int32 pljhinldecj = 2;
	JFGIGKCKFMO.PIIDHEMDHEC objoeecogjb = 3;
	string kmnnfcdpeng = 4;
	int32 fcooddjhblf = 20;
}

message LABCMFPMENL {
	bool ddipndnmbkh = 1;
}

message LAHMOIFGOJA {
	int32 hbmmfopjbce = 1;
}

message LAIPGNIGAOA {
	string bajolmeabfd = 1;
	string hfnkmbgbjib = 2;
	int32 lgclomekpol = 3;
}

message LAKPCJJKJBF {
	double picapmllkle = 1;
	int32 aliokgglpao = 2;
	int32 pilalonadno = 3;
	double pcbabnhmmmn = 4;
	double mngemeonaom = 5;
	double acfeopciikh = 6;
	bool jhgjjfhdnhh = 7;
	int32 iakhllmpcmo = 8;
	int32 ifhecnojnce = 9;
	bool klnboonadoh = 10;
	bool hcjgecgjdlm = 11;
	bool pannkdkadnn = 12;
	double ileglekhapa = 13;
}

message LBMLCICHMEJ {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	ALOCBADNLJC.IFINICEPNLK llponloodfk = 3;
}

message LBMOBGOMNJK {
	enum IENLMMIJLFG {
		UNSET = 0;
		STORY_QUEST_BATTLE = 1;
		TIMED_QUEST_BATTLE = 2;
	}

	string ljknacljjeb = 1;
	IENLMMIJLFG likhphmlcgl = 2;
	NECCKHDNPKM pgdgeobanmh = 3;
}

message LCJCPEDMNGN {
	int32 hbmmfopjbce = 1;
}

message LCKIOJJDOJO {
	string gedndgmoeaf = 1;
	BFABHCMKGCB acifngkjfjh = 2;
}

message LDAGDCNJIIM {
	repeated string kkmnldhplfp = 1;
	bool pnglenkkkja = 2;
}

message LDBLCKAEJDB {
	IBGGKKNEKOA.IBGFAGKHKGN cdnlplomkgo = 1;
	int32 abgnikhoaga = 2;
	string ppdochkmnff = 3;
	bool hhlpdblfang = 4;
}

message LDFALHFIDDC {
	string bajolmeabfd = 1;
	ODAMJPADCEA pbmgnaajdii = 2;
	double meelbmkpppj = 3;
	double daoffindkme = 4;
	string npfenpeghnd = 5;
	string lnbjncaedlo = 6;
	int64 glohmcgacob = 7;
	int32 ecobmpijhnl = 8;
	int64 jfjhgohjlcb = 9;
	int32 jlljgbmhbao = 10;
}

message LDJCBANMBAA {
	enum FDBMJKLHCHL {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_EX_RAID_PASS_NOT_FOUND = 2;
		ERROR_UNKNOWN = 3;
	}

	FDBMJKLHCHL hhkodmoefol = 1;
}

message LDKENAMCIPK {
	enum NFOKKLIKGJA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_ROUTE_NOT_FOUND = 3;
		ERROR_FORT_NOT_FOUND = 4;
		ERROR_INVALID_START_FORT = 5;
		ERROR_WRONG_WAYPOINT = 6;
		ERROR_ROUTE_PLAY_EXPIRED = 7;
		ERROR_ROUTE_IN_COOLDOWN = 8;
		ERROR_ROUTE_PLAY_NOT_FOUND = 9;
		ERROR_PLAYER_LEVEL_TOO_LOW = 10;
		ERROR_U13_NO_PERMISSION = 11;
	}

}

message LDLPKIGFBDH {
	int64 pkljdiaplkc = 1;
	string komegjnnkib = 2;
}

message LDNFAEGPBEL {
	bool plmpdlcoemi = 1;
}

message LEELICHGBMP {
	string ncmogglbdib = 1;
	int32 fjdhldkllcc = 2;
}

message LEKGGEJLFJF {
	string jlpmmlbclok = 1;
}

message LEKJCFCNCFN {
	int64 flgffdpdbfk = 1;
	int32 aknpjcebbeg = 2;
}

message LELIDJFPICK {
	int32 nmofolhpigf = 1;
}

message LFBGNFDFOLG {
	enum MPHBPGFJOPD {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	MPHBPGFJOPD hhkodmoefol = 1;
}

message LFFJMGLIIPC {
	enum JPFKMBEAMNI {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 2;
		ERROR_ACCESS_DENIED = 3;
	}

	JPFKMBEAMNI hhkodmoefol = 1;
	string flnekghfefk = 2;
}

message LFHDIPBCHAL {
	enum GCIKPKOLDKD {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		OUT_OF_RANGE = 2;
		IN_COOLDOWN_PERIOD = 3;
		INVENTORY_FULL = 4;
		EXCEEDED_DAILY_LIMIT = 5;
		POI_INACCESSIBLE = 6;
	}

	GCIKPKOLDKD hhkodmoefol = 1;
	repeated GIKDFLAJIDF ojgckfiagpm = 2;
	int32 mcaokgooofd = 3;
	NHLCGNMFNOM mclknpmojhc = 4;
	int32 mibpipkaggd = 5;
	int64 ohfkknkaknb = 6;
	int32 pfggkfikbcj = 7;
	DMPNAOEDHIF fblnanmjfem = 8;
	PAEHCJKJPLP dceacnapffn = 9;
	PAEHCJKJPLP jbgclacjpjl = 10;
	int32 imhjdpebgeh = 11;
	PAEHCJKJPLP ohdphdcphmc = 12;
	string gfepbfmmdcc = 13;
	BGOGOGOMLBN eghcnompngl = 14;
	OEFNBCPAHHB pcbcgefjmfp = 15;
	FBPJJHIIEEN kijlbkjoeen = 16;
	PAEHCJKJPLP jkaojnbndof = 17;
	FEJOFJDIKPO dcjoeebdaec = 18;
}

message LFJCDMCAMLN {
	enum KJDHGHNJFHP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_HAS_NO_VS_SEEKER = 2;
		ERROR_REWARDS_ALREADY_COLLECTED = 3;
	}

	KJDHGHNJFHP hhkodmoefol = 1;
	PAEHCJKJPLP ckobkiimlfg = 2;
	int32 hbifmojlajb = 3;
	float mfebogokilh = 4;
	FFHMCAEIELD nlmkhakkcno = 5;
	bool pcohngfaomd = 6;
}

message LFLAIKDDABA {
	repeated BCFBPANEMFP fbijdhjflgf = 1;
}

message LFOCNLFOJNF {
	enum ODGKINMDFGK {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_LOBBY_NOT_FOUND = 2;
		ERROR_RAID_UNAVAILABLE = 3;
		ERROR_INVALID_POKEMON = 4;
	}

	ODGKINMDFGK hhkodmoefol = 1;
	NNGBBEPJIDA ngefmadkckh = 2;
}

message LGADBIMIBCH {
	repeated DJKIGOFBLDB nhlknjjblpk = 1;
}

message LGCGLJMMCOL {
	MBKJCODCAKE.OEIDGAHAMII likhphmlcgl = 1;
}

message LGEBNLFMGCH {
	BFABHCMKGCB acifngkjfjh = 1;
	uint64 igfdgcikjem = 2;
}

message LGJJKAJKOLM {
	bytes obbickmckep = 1;
}

message LGMBIBOBMBM {
	message MDGNFDACNLN {
		string pofcpnikfel = 1;
		uint32 laiinhecmni = 2;
	}

	uint32 npfplijbieh = 1;
	repeated MDGNFDACNLN djdcicbgoih = 2;
}

message LGPDDJHCOJP {
	int32 pbgcbopkpca = 1;
	int32 nfjkheapjac = 2;
	float fhehhajeoce = 3;
	float ddlfjenepcj = 4;
	bool hnbkjpccknp = 5;
}

message LHCBMFEKINK {
	uint64 pkljdiaplkc = 1;
	int32 ihccaegggcb = 2;
	double dgonddihfni = 3;
	string albfofbkfle = 4;
	bool doplalgpihl = 5;
	double nhbnfddffcc = 6;
	double gidkpbifgod = 7;
	DMMGCCEKHEP jojegbacmkm = 8;
}

message LHDMMFEPDEM {
	enum IAFBNCEAOJI {
		POKEMON_HEALTH = 0;
		WIN_BATTLE = 1;
		LOSE_BATTLE = 2;
	}

	NECCKHDNPKM pgdgeobanmh = 1;
	int32 jgdpdgjemkd = 2;
	repeated DLINKAFOEED lkpjnadghoj = 3;
	bool njoaakpeobg = 4;
	IAFBNCEAOJI ehcjfpjbhlm = 5;
	int64 djlhjjcekee = 6;
	NHHFPHJCFNG hblklnlpfbo = 7;
}

message LHEOGMILNNE {
	enum AAEHAHAICNC {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_POSTCARD_DOES_NOT_EXIST = 2;
		ERROR_POSTCARD_FAVORITED = 3;
		ERROR_NOT_ENABLED = 4;
	}

	AAEHAHAICNC hhkodmoefol = 1;
	BOJDGFGFLNL bkmggdmchek = 2;
}

message LHPBHIIFLCA {
	message CFEGMHBIEDO {
		int64 genboggibgm = 1;
	}

	message HOPCFGMDFBC {
		int64 jabhfllnpha = 1;
		map<int32, float> ibhfgocjjin = 2;
	}

	uint64 hjgmipfjaaf = 1;
	int32 dfbjhednlfk = 2;
	int32 pcgfjnacjda = 3;
	int64 dmcmcojppma = 4;
	int64 elljchcfank = 5;
	int64 hglbapgippg = 7;
	float hineheackkm = 12;
	CEGJPOAAPFD bdcodilboji = 15;
	int32 epdjccpppid = 18;
	map<int32, KEFCKGDMLFB> heagdjolifo = 19;
	map<int32, KEFCKGDMLFB> minkmflddoa = 20;
	HOPCFGMDFBC pjhcoklfdem = 21;
	HOPCFGMDFBC hkkhgkmbhef = 22;
	map<int32, BGHBCCEGNKK> bdndnpdclak = 23;
	int32 ijfpjgnjnfg = 24;
	int64 bbalogkmmjl = 25;
	int64 ioflkhjmabb = 26;
	float nbnhmfjejcn = 27;
	int64 kdiciobafmd = 28;
	int64 onmicfjkddd = 29;
	bool hbeojcpacck = 30;
	IBGGKKNEKOA nnnmmlpnchp = 31;
	bool lhfilifmcbb = 32;
	string mgajgldjfcb = 33;
	int64 hdbgmahoggb = 34;
	PCNMLNDPOML ilcnbgfockh = 35;
	int64 dfnocjfpleg = 36;
	BFABHCMKGCB ihccaegggcb = 37;
	int32 lbjcfllaceh = 38;
	string fpmohllfknl = 39;
	int64 ohobhdjchmh = 40;
	string dhnhekhlaki = 41;
	int64 ofjnbggpglh = 42;
	int64 omgmkeinmop = 43;
	bool hmlnnlehakb = 44;
	int64 lhgbpkjdlbl = 45;
	map<int32, int64> ppdcajlaged = 46;
	int64 jabhfllnpha = 47;
	int64 imencaolbej = 48;
	int32 phgfdnmkmdd = 49;
	int32 ooaiejneckl = 50;
	int64 lcgmfkofcmg = 51;
	float mdfgpincamk = 52;
	map<string, CFEGMHBIEDO> hjkmjnmhdec = 56;
}

message LIDCAHNLDMG {
	LMPLGPLAEIC jdbflapgnpm = 1;
	string fbpffdphkcj = 2;
}

message LIFPCJOHBKM {
	int32 hbmmfopjbce = 1;
}

message LIGMFEECOEA {
	int32 fmbmhollefe = 1;
	int32 hjgkndboknb = 2;
	int32 cajmofkfjdp = 3;
	int32 ebomjcafaba = 4;
	int32 acjohpnolld = 5;
	int32 fjaennohlmg = 6;
	int32 mpobdbpepbb = 7;
	int32 jeikdkimmlm = 8;
	int32 aanodmedlea = 9;
	int32 embooagofei = 10;
	int32 eommijllgfc = 11;
	int32 ifaohpljeop = 12;
	int32 bpnmbjfgmlf = 13;
	bool nagkgikfahn = 14;
	int32 bmfgkobghdl = 15;
	bool hhlopifemda = 16;
	float kpbacnajpio = 17;
	float cmpakkfhhil = 18;
	float lcnkmncfmke = 19;
	float jocfhdhjpej = 20;
	float jgeohemkimp = 21;
	float npafdmboiam = 22;
	float nmnhbgjgpkk = 23;
	float kkmlcnfnpha = 24;
	float mccdemgoaip = 25;
	bool eedmdolellj = 26;
}

message LIGOEELMONH {
	enum PPMIAIFNCBE {
		UNSET = 0;
		DEFAULT_TEMPLATE = 1;
	}

	string godfillmpmn = 1;
	repeated string mpaekobkjkh = 2;
	string pmjbmnjniia = 3;
	string keicgelkmpa = 4;
	string kmngnenpibn = 5;
	int64 fojnmdbfmja = 6;
	PPMIAIFNCBE nnengjneboo = 7;
	bool plmpdlcoemi = 8;
	bool cepgnihodlg = 9;
}

message LIIKDKEMGNL {
	string mkdlflaoaki = 1;
}

message LIJLCCLIHAM {
	string hdhelgjcbfp = 1;
	int64 cahpblfemjn = 2;
	bool djppneefjho = 3;
}

message LIKOHJOFACA {
	OMDCMKIAADD ldccnikjabe = 1;
	string flnekghfefk = 2;
	string blgcpjojdbm = 3;
	string kgafldackcd = 4;
	repeated uint64 iepbdcjdpfk = 5;
}

message LIMMBPLBLJA {
	double picapmllkle = 1;
	double acfeopciikh = 2;
	double ileglekhapa = 3;
}

message LIMNPPJDEDB {
	enum IGMPMINBBPK {
		NO_EXCEPTION = 0;
		COMBAT_PUB_SUB = 1;
	}

	int32 eeiecpioghn = 1;
	IGMPMINBBPK ohhklmidagh = 2;
}

message LJACKGHOCHI {
	string ncmogglbdib = 1;
}

message LJIEPDICOEF {
	string mcdggnpebgc = 1;
	int64 gbgbpohgnif = 2;
	map<string, string> gmdhmdmlafh = 3;
}

message LJLLHGEBBPA {
	enum LCLFEIGFDBP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_ALREADY_STARTED_TUTORIAL = 2;
		ERROR_FAILED_TO_START = 3;
	}

	LCLFEIGFDBP hhkodmoefol = 1;
}

message LJNAADNKMGN {
	enum DFKGKOHFENJ {
		UNSET = 0;
		SUCCESS = 1;
		FAILED_BUDDY_NOT_SET = 2;
		FAILED_BUDDY_NOT_FOUND = 3;
		FAILED_BAD_BUDDY = 4;
		FAILED_BUDDY_V2_NOT_ENABLED = 5;
		FAILED_PLAYER_LEVEL_TOO_LOW = 6;
	}

	message FGNOHCDFNFB {
		int64 hglbapgippg = 1;
		float lgaejejcdlc = 2;
		int64 jnbooalmcbb = 3;
		int64 hlcbbimhgfj = 4;
	}

	int32 dfbjhednlfk = 1;
	HEKBKGNBCDJ hmkodjkkhdm = 3;
	CEGJPOAAPFD bdcodilboji = 6;
	int32 epdjccpppid = 7;
	DFKGKOHFENJ gankckniahn = 8;
	map<int32, BGHBCCEGNKK> bdndnpdclak = 9;
	FOALJFDFEJF habpmkglimj = 10;
	FGNOHCDFNFB jmdifbidolo = 11;
	string dhnhekhlaki = 12;
	int64 ohijghpfoai = 13;
	int32 lbjcfllaceh = 14;
}

message LJOPBEKIDJA {
	message JDMPNBHBKCD {
		FFKJOOMBLDO eibnojbkfkk = 1;
		int32 nljnpgkobii = 2;
		bool doakgjfhcfl = 3;
	}

	bool nmfmhmhmkpk = 1;
	repeated JDMPNBHBKCD najioohilgc = 2;
}

message LKDFANJFCOF {
	bool ooaekfgjcpj = 1;
	bool fhjlcbmikee = 2;
}

message LKEKNGJILIO {
	bool ijehjphkkog = 1;
	int32 chlbaobhanc = 2;
	float ojfhhbabfga = 3;
}

message LKKGOBPFJBJ {
	int64 pibmobfdhea = 1;
	repeated BFABHCMKGCB bjhcdenpale = 2;
}

message LKPJOEFPCFI {
	int64 bkkcjfmmhpl = 1;
	string ahcgfgkkkdn = 2;
	repeated int32 gdghkinahdb = 3;
	bool cljhadgjijo = 4;
	double icnndjclaef = 5;
	double ogmopfkhcpa = 6;
	double kbgeoncpmbj = 7;
	double jkgggjheffd = 8;
	bool gpgbcmjccjh = 9;
	string cffbhlodofi = 10;
}

message LLAPBFLGNPO {
	int32 lahokpiipjb = 1;
}

message LLCMNLKODBA {
	string lmigamdobja = 1;
}

message LLEOKCNCOGJ {
	CBEHDFKNGJE ghfdhcjofbk = 1;
}

message LLFIBBFKKHG {
	enum KHFANJBNLJB {
		UNSET = 0;
		IN_PROGRESS = 1;
		COMPLETE = 2;
	}

	KHFANJBNLJB mlfhkehegbh = 1;
	LDKENAMCIPK.NFOKKLIKGJA llponloodfk = 2;
	EHOHINHPAGL dfnpfkcmcbk = 3;
	ICDPIDDAENN dpojicdojdd = 4;
	int64 clolhfeopbf = 5;
	PAEHCJKJPLP kobpgegcmhe = 6;
	GNADEEPKNPK coijhcadfbb = 7;
}

message LLGMIPAONHB {
	enum LHMCEEKLFFE {
		CREATE_SUCCESS = 0;
		CREATE_BUDDY_NOT_SET = 1;
		CREATE_BUDDY_NOT_FOUND = 2;
		CREATE_BAD_BUDDY = 3;
		CREATE_BUDDY_V2_NOT_ENABLED = 4;
		CREATE_PLAYER_LEVEL_TOO_LOW = 5;
		CREATE_UNKNOWN_ERROR = 6;
		CREATE_U13_NO_PERMISSION = 7;
	}

	string plkjlhilhfb = 1;
	bytes focnckloljj = 2;
	int64 kaadmgcfpii = 3;
	int32 ifbgmejbogo = 4;
	LHMCEEKLFFE hhkodmoefol = 5;
}

message LLJHDPIEAID {
	enum PDPIBAPJCHP {
		UNSET = 0;
		SUCCESS = 1;
		STILL_IN_COOL_DOWN = 2;
		BUDDY_NOT_SET = 3;
		ERROR_INVENTORY_FULL = 4;
		ERROR_NO_REMOTE_GIFTS = 5;
	}

	PDPIBAPJCHP hhkodmoefol = 1;
}

message LLJHOLGBOOO {
	PCNMLNDPOML igfdgcikjem = 1;
	int32 lfbajfmidfg = 2;
}

message LLLDEKMGNNB {
	enum LHBNMILMDPI {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_ENOUGH_CANDY = 2;
		ERROR_PLAYER_LEVEL_TOO_LOW = 3;
	}

	LHBNMILMDPI llponloodfk = 1;
}

message LLMAHBMAJCG {
	string ahcgfgkkkdn = 1;
	double icnndjclaef = 2;
	double ogmopfkhcpa = 3;
	double kbgeoncpmbj = 4;
	double jkgggjheffd = 5;
	string ncbfmanandg = 6;
}

message LLMELOPFDLB {
	FJIHIBMJOKK ebkpdjhogdo = 1;
}

message LLPPDNFOHND {
	bool bldghjalhil = 1;
	bool epehdbgagdl = 2;
	int64 lkfpejehhea = 3;
}

message LMGLFHKGOGK {
	message PGCCCMFCDGN {
		BJBJJBOKJBP.NBJDLPGIJFG.JMOICIHMOEG iofhmehcpio = 1;
		string hpgahfngepj = 2;
		string gpchpipjlii = 3;
	}

	bool nmfmhmhmkpk = 1;
	repeated PGCCCMFCDGN djmlnhbekga = 2;
	int64 cbhmeinpgep = 3;
	int64 jkjnabpfhmn = 4;
	int32 bhfnhicnmml = 5;
	string dffjcihgpbk = 6;
}

message LMMNHHIPECA {
	bool plmpdlcoemi = 1;
	bool ghhbgnlofbh = 2;
	bool mnbcnkomgim = 3;
	bool jkkpibgokej = 4;
	bool oimfogbkiim = 5;
	bool pjheemhkibl = 6;
	bool kamaoomfbod = 7;
	bool hbgioepmfeo = 8;
	bool knpkpkohmcm = 9;
	int32 jdfafbdohlk = 10;
	bool bcghoejmeah = 11;
	int32 jooaneonmdg = 12;
}

message LMMPBMEABML {
	enum DBIHPBLLADD {
		UNSET = 0;
		SUCCESS = 1;
	}

	DBIHPBLLADD hhkodmoefol = 1;
	string ajbpmokphcc = 2;
}

message LNBENCBGFDF {
	enum IFCHGDMBKIG {
		UNSET = 0;
		LEARN_MORE = 1;
		OFFER = 2;
	}

	repeated string gelmhfcjfee = 1;
	repeated string nhciomkdeid = 2;
	string kdhocdmlffi = 3;
	IFCHGDMBKIG dhedcmjpbjm = 4;
	string apbfngdodan = 5;
	NPANMHAOFMF mfeoenfmbeo = 6;
	repeated EDPDFKFCMJK mocbadkcpla = 7;
}

message LNBHPBALHGH {
	enum HKNEDKHDCKO {
		UNSET = 0;
		POKEMON_CAPTURED = 1;
		POKEMON_FLED = 2;
		NOT_FOUND = 3;
		NO_MORE_POKEBALLS = 4;
		POKEMON_INVENTORY_FULL = 5;
		NOT_IN_RANGE = 6;
		ENCOUNTER_ALREADY_FINISHED = 7;
	}

	HKNEDKHDCKO hhkodmoefol = 1;
	int32 ogcelmiombp = 2;
}

message LNFPIDBCBMG {
	bool nmfmhmhmkpk = 1;
}

message LNNHPJKMBJA {
	BFABHCMKGCB acifngkjfjh = 1;
}

message LNOLCFMICDD {
	enum CFMMPJHHCOH {
		UNKNOWN = 0;
		SUCCESS = 1;
		ERROR_PLAYER_LEVEL_TOO_LOW = 2;
		ERROR_PLAYER_NOT_USING_PH_APP = 3;
		ERROR_PHAPI_UNKNOWN = 4;
		ERROR_RELOGIN_TO_PH_APP_NEEDED = 5;
	}

	CFMMPJHHCOH llponloodfk = 1;
	string ikoijhgigbc = 2;
	string kpceeafdbom = 3;
	string nmpbdbjaohh = 4;
}

message LOHFJEPAEAD {
	enum AGPJOHGFELD {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_POSTCARD_DOES_NOT_EXIST = 2;
		ERROR_NOT_ENABLED = 4;
		ERROR_RATE_LIMITED = 5;
	}

	AGPJOHGFELD hhkodmoefol = 1;
	BOJDGFGFLNL bkmggdmchek = 2;
}

message LOMFNNKPMKE {
	enum GHNKHACNKKH {
		UNSET = 0;
		SUCCESS = 1;
	}

	GHNKHACNKKH hhkodmoefol = 1;
	string gfepbfmmdcc = 2;
	repeated OOFDHEHENPH ojgckfiagpm = 3;
	int32 gojjgbpcnng = 4;
	repeated NHLCGNMFNOM khkbcoflind = 5;
	CLDFDLHPJDE iepipmjapkb = 6;
	repeated OOFDHEHENPH ondmhpndhad = 7;
	repeated OOFDHEHENPH nnconnmbloc = 8;
	repeated OOFDHEHENPH okonpedfmbi = 9;
	repeated OEFNBCPAHHB lcblblinepo = 10;
	repeated IPEOPNMEGPI hebchobifff = 11;
	repeated OOFDHEHENPH jdomijehenb = 12;
}

message LPCBABLOGKH {
	enum OPCACIKNEEI {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_ATTACK_ACTIONS = 2;
		ERROR_NOT_IN_RANGE = 3;
	}

	OPCACIKNEEI hhkodmoefol = 1;
	ACMJMCCMKOD epmnkbjjplo = 2;
	string dileendfikh = 3;
	CFCJGNJCLOK ldnobidlamf = 4;
	CFCJGNJCLOK gimkljmcjjp = 5;
	IJKFIEDNELI gaalacimldk = 6;
}

message LPCECKEPEHI {
	float gkkobjkdfni = 1;
	int32 okkjolhkcai = 2;
}

message LPCGPBCNJCK {
	float codieleicch = 1;
	float jngajgckfhg = 2;
	float ojcfefjdmdc = 3;
	float ijhlmkkcnpp = 4;
	float gihojbjhjfg = 5;
	BMIPJFMKCPG cfgblliojgm = 6;
	float cadhbjidlnf = 7;
	float ogabcacaejm = 8;
	float jgifpajcpmi = 9;
	int32 odheolikamb = 10;
	int32 pfogcanpecc = 11;
	float mdckfiiiocb = 12;
	float hpagaedofal = 13;
	float dkioofchmnm = 14;
	float afbbfgjcoki = 15;
	float nagpoeoomfc = 16;
	float hfnlemkindo = 17;
	float ppgnaiddncd = 18;
	int32 cdhidckdenb = 19;
	float ikcnabdbmeg = 20;
	float nbecobncapn = 21;
	float dacdlggelam = 22;
}

message LPJIIDADPIE {
	enum GIODHGBDACN {
		UNSET = 0;
		POKEMON_DETAILS = 1;
		RAID_LOBBY = 2;
		GYM_BATTLE_LOBBY = 3;
		NPC_COMBAT_LOBBY = 4;
		PLAYER_COMBAT_LOBBY = 5;
	}

}

message LPLHPGNDCFA {
	enum KPJKMELLJJL {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
		ERROR_INVALID_POKEMON = 7;
		ERROR_INSUFFICIENT_PAYMENT = 8;
		ERROR_TRADING_EXPIRED = 9;
		ERROR_TRADING_FINISHED = 10;
	}

	KPJKMELLJJL hhkodmoefol = 1;
	CLLOCMAOPDJ dmkmeeheamb = 2;
}

message LPMMKLIIDKO {
	enum HCELLBJIDDC {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_POKEMON_MISSING = 2;
		ERROR_INSUFFICIENT_RESOURCES = 3;
		ERROR_QUEST_INCOMPLETE = 4;
		ERROR_POKEMON_CANNOT_CHANGE = 5;
		ERROR_POKEMON_DEPLOYED = 6;
		ERROR_FEATURE_DISABLED = 7;
	}

	HCELLBJIDDC hhkodmoefol = 1;
	NHLCGNMFNOM bacedjogili = 2;
	int32 ainphkodlei = 3;
	int32 jhbbfkcbjlo = 4;
}

message Label {
	int32 min_zoom = 1;
	int32 max_zoom = 2;
	int32 priority = 3;
	repeated LabelContentLocalization localizations = 4;
}

message LabelContent {
	repeated LabelContentLocalization localizations = 1;
}

message LabelContentLocalization {
	string language = 1;
	string name = 2;
}

message LabelGeometry {
	PixelPointProto point = 1;
	int32 min_zoom = 2;
	int32 max_zoom = 3;
}

message LabelTile {
	repeated Label labels = 1;
}

message Layer {
	repeated Feature features = 1;
}

message LayerRule {
	enum GmmLayerType {
		AREA = 0;
		ROAD = 1;
		BUILDING = 2;
		LINE_MESH = 3;
	}

	enum GmmRoadPriority {
		PRIORITY_NONE = 0;
		PRIORITY_TERMINAL = 1;
		PRIORITY_LOCAL = 2;
		PRIORITY_MINOR_ARTERIAL = 3;
		PRIORITY_MAJOR_ARTERIAL = 4;
		PRIORITY_SECONDARY_ROAD = 5;
		PRIORITY_PRIMARY_HIGHWAY = 6;
		PRIORITY_LIMITED_ACCESS = 7;
		PRIORITY_CONTROLLED_ACCESS = 8;
		PRIORITY_NON_TRAFFIC = 9;
	}

	repeated MaskedColor fill_colors = 1;
	repeated GmmRoadPriority road_priority = 2;
	uint32 road_attribute_bitfield = 3;
}

message LeaveInteractionRangeTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	int64 client_timestamp = 4;
	string partner_id = 5;
	int64 time_spent = 6;
	string campaign_id = 7;
}

message LeavePointOfInterestTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	int64 client_timestamp = 4;
	string partner_id = 5;
	int64 time_spent = 6;
	string campaign_id = 7;
}

message LinkLoginTelemetry {
	bool linked = 1;
	string success = 2;
	string error = 3;
	string active_auth_provider_id = 4;
	string provider = 5;
}

message ListFriendsRequest {
	SocialClientFeatures.CrossGameSocialClientSettingsProto.FeatureType feature = 1;
}

message ListFriendsResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FEATURE_DISABLED = 3;
	}

	message FriendSummaryProto {
		string player_id = 1;
		bool is_calling_app_friend = 2;
		GetFriendsListOutProto.FriendProto calling_game_data = 3;
		ProfileSummaryProto profile = 4;
		PlayerStatusSummaryProto player_status = 5;
		SocialV2Enum.InvitationStatus invitation_status = 6;
		string nia_account_id = 7;
	}

	message PlayerStatusSummaryProto {
		enum PlayerStatusResult {
			UNSET = 0;
			SUCCESS = 1;
			ERROR_UNKNOWN = 2;
			ERROR_STATUS_UNKNOWN = 3;
			ERROR_STALE_DATA = 4;
		}

		PlayerStatusResult result = 1;
		SocialV2Enum.OnlineStatus online_status = 2;
		string last_played_app_key = 3;
	}

	message ProfileSummaryProto {
		string name = 1;
		string nickname = 2;
	}

	Result result = 1;
}

message ListLoginActionOutProto {
	bool success = 1;
	repeated LoginDetail login_detail = 2;
}

message LocationE6Proto {
	int32 latitude_e6 = 1;
	int32 longitude_e6 = 2;
}

message LocationPingProto {
	enum PingReason {
		UNSET = 0;
		ENTRANCE_EVENT = 1;
		EXIT_EVENT = 2;
		DWELL_EVENT = 3;
		VISIT_EVENT = 4;
		FITNESS_WAKEUP = 5;
		OTHER_WAKEUP = 6;
	}

	string geofence_identifier = 1;
}

message LoginActionTelemetry {
	LoginActionTelemetryIds login_action_id = 1;
	bool first_time = 2;
	bool success = 3;
	bool intent_existing = 4;
	string error = 5;
	string auth_status = 6;
}

message LoginDetail {
	IdentityProvider identity_provider = 1;
	string email = 2;
	string auth_provider_id = 3;
}

message MABKDNHDGJP {
}

message MADHNPBECMK {
	enum EBLBPFNCDIL {
		UNSET = 0;
		WITH_POKEMON_CP_LIMIT = 1;
		WITH_PLAYER_LEVEL = 2;
		WITH_POKEMON_TYPE = 3;
		WITH_POKEMON_CATEGORY = 4;
		WITH_UNIQUE_POKEMON = 5;
		POKEMON_WHITELIST = 6;
		POKEMON_BANLIST = 7;
		POKEMON_CAUGHT_TIMESTAMP = 8;
		POKEMON_LEVEL_RANGE = 9;
	}

	enum FDCLOKJDPDE {
		NONE = 0;
		STANDARD = 1;
		PREMIER = 2;
	}

	message BHAGNHNCMLN {
		oneof AILKFFLGAIH {
			JDKFLHHNLNH with_pokemon_cp_limit = 2;
			NFENEOKGAAG with_pokemon_type = 3;
			AMLJPMNGMEB with_pokemon_category = 4;
			KNGDDNHOJNE pokemon_whitelist = 5;
			CEOPNFFGHNG pokemon_banlist = 6;
			KCEKDICKLJK pokemon_caught_timestamp = 7;
			PHCELEMDIOB pokemon_level_range = 8;
		}

		EBLBPFNCDIL ldccnikjabe = 1;
	}

	message CEOPNFFGHNG {
		string edabjienhim = 1;
		repeated OPBDGHGJMPG piddpkfgmod = 2;
	}

	message KCEKDICKLJK {
		int64 heemnipgcah = 1;
		int64 agpfoahanfk = 2;
	}

	message KNGDDNHOJNE {
		string edabjienhim = 1;
		repeated OPBDGHGJMPG piddpkfgmod = 2;
	}

	message MBJAPFPBNEP {
		oneof MHDADGPGMDN {
			CFJIJIDMDII with_player_level = 3;
			JDKFLHHNLNH with_pokemon_cp_limit = 4;
			NFENEOKGAAG with_pokemon_type = 5;
			AMLJPMNGMEB with_pokemon_category = 6;
			KNGDDNHOJNE pokemon_whitelist = 7;
			CEOPNFFGHNG pokemon_banlist = 8;
			KCEKDICKLJK pokemon_caught_timestamp = 9;
			PHCELEMDIOB pokemon_level_range = 10;
		}

		EBLBPFNCDIL ldccnikjabe = 1;
		int32 kgkpomhoknh = 2;
	}

	message OPBDGHGJMPG {
		PCNMLNDPOML godfillmpmn = 1;
		IBGGKKNEKOA.IBGFAGKHKGN cdnlplomkgo = 2;
		repeated IBGGKKNEKOA.IBGFAGKHKGN jhaepipgfih = 3;
	}

	message PHCELEMDIOB {
		int32 hlpebdlcaca = 1;
		int32 idbckmkcbkn = 2;
	}

	string doblngnlada = 1;
	bool plmpdlcoemi = 2;
	repeated MBJAPFPBNEP hgbhepmganp = 3;
	repeated BHAGNHNCMLN gdfkgklmokn = 4;
	string nefcmignngd = 5;
	int32 hpjgnojdifn = 6;
	repeated PCNMLNDPOML noennfjkkbh = 7;
	DCAECPGGPON nhkgopbkbig = 8;
	int32 ilabmkghmlo = 9;
	string hnoepefmnpo = 10;
	FDCLOKJDPDE ibokinknkek = 11;
	string hpldbeepkgf = 12;
	bool ofpeinjdfpl = 13;
	repeated NJMFCLNADGI jgfkgdpdmep = 14;
}

message MAFFOPOLPBH {
	enum GNFCACPEFBJ {
		LEAVE_SUCCESS = 0;
		LEAVE_NOT_IN_LOBBY = 1;
		LEAVE_LOBBY_NOT_FOUND = 2;
		LEAVE_UNKNOWN_ERROR = 3;
	}

	GNFCACPEFBJ hhkodmoefol = 1;
}

message MAIHDOEJGIJ {
	string ljknacljjeb = 1;
	repeated JGBPDBGNMPB bdpmaafgkfi = 2;
	string gpchpipjlii = 3;
	string doblngnlada = 4;
	int32 hhjkoenlkdl = 5;
	repeated MAIHDOEJGIJ modlilikcma = 6;
	bool niddadogcka = 7;
	string ghkhhbkkaln = 8;
	string hekapeohoja = 9;
	string bacmgmlnapc = 10;
	string npnbimcoobl = 11;
	string fkakjfopnjd = 12;
	string lmpocejoflh = 13;
	string mfofampnfej = 14;
	string pdjmpbaiedm = 15;
	int32 dlidhlbkglp = 16;
	repeated IIMAEBGICEG lbmpcghjjhl = 17;
	int64 pipamadhlgi = 18;
	string fkfikgbdmpk = 19;
	string cnbgfoimfmk = 20;
	string aifiglccgol = 21;
	string lehpaaapokc = 22;
	string mfbcdfonnne = 23;
	string dcphkojbkha = 24;
	string medpliaocpa = 25;
	int32 ojcllackebh = 26;
}

message MAIMABBDCPD {
	BFABHCMKGCB acifngkjfjh = 1;
	PCNMLNDPOML igfdgcikjem = 2;
	int32 mjblcceblgj = 3;
}

message MANPNAHHEJB {
	string gfepbfmmdcc = 1;
	uint64 igfdgcikjem = 2;
	double icnndjclaef = 3;
	double ogmopfkhcpa = 4;
}

message MBGEDDOJOJI {
	oneof BEBLMFFJMBI {
		GMPALGCFLJJ throw_type = 1;
		bool hit = 2;
	}

}

message MBKJCODCAKE {
	oneof DIIIDCFHINA {
		OHLBDDFLAJB daily_quest = 2;
		MCONFJMLOBE multi_part = 3;
		JKGFLCFMDOL catch_pokemon = 4;
		CLBHKDDDJNK add_friend = 5;
		BKAKCOFMHMP trade_pokemon = 6;
		ALGKLIDGAJI daily_buddy_affection = 7;
		NBMNJLEFMOF quest_walk = 8;
		PFGDKCPLHPD evolve_into_pokemon = 9;
		MNBCJPNHADP get_stardust = 10;
		GDKIDBEOHIH mini_collection = 11;
		GHHBCHMFOAA geotargeted_quest = 12;
		JNHMPJDOBHP buddy_evolution_walk = 13;
		CJILJKBHOPF battle = 14;
		MEABINCDNDC take_snapshot = 15;
	}

	enum OEIDGAHAMII {
		UNSET = 0;
		STORY_QUEST = 1;
		CHALLENGE_QUEST = 2;
		DAILY_COIN_QUEST = 3;
		TIMED_STORY_QUEST = 4;
		NON_NARRATIVE_STORY_QUEST = 5;
		LEVEL_UP_QUEST = 6;
		TGC_TRACKING_QUEST = 7;
		EVOLUTION_QUEST = 8;
		TIMED_MINI_COLLECTION_QUEST = 9;
		REFERRAL_QUEST = 10;
		BRANCHING_QUEST = 11;
	}

	enum OEPPOAKABCG {
		STATUS_UNDEFINED = 0;
		STATUS_ACTIVE = 1;
		STATUS_COMPLETED = 2;
	}

	message EBOPNHPDDHP {
		string iiieopijgia = 1;
		bool ppkokdodhpn = 2;
	}

	EFDCDOBEKEN kobgohfemnn = 1;
	EPAMCAGKLGH hofjblboack = 98;
	PNBIGGFCOHE mlfhbanpgod = 99;
	string ljknacljjeb = 100;
	int64 jijpfchgmcp = 101;
	OEIDGAHAMII ojbfpdfnkia = 102;
	string bccgfkehaph = 103;
	int32 hldednomfjh = 104;
	JHKHBGIEONB plaajhenpea = 105;
	OEPPOAKABCG llponloodfk = 106;
	repeated NCFPKMAHCKB hlplebpebng = 107;
	int64 dfnocjfpleg = 108;
	int64 hagpohgehmf = 109;
	int64 cjniblimedb = 110;
	string gfepbfmmdcc = 111;
	bool epnbnfnlbmb = 112;
	bool bgehhcmjipp = 113;
	int32 gceafkjmand = 114;
	int64 kelhhealbli = 115;
	int32 ggjkmokhiid = 116;
	KEFCKGDMLFB ddffhkaiife = 117;
	string johlcjkelhj = 118;
	int64 hgkfdieioea = 119;
	bool npfhkhgildp = 120;
	EBOPNHPDDHP jodomplgohl = 121;
	repeated EILKKLBAKDI kklafdddjie = 122;
	bool hpefjacnfbb = 123;
}

message MCACJGPFFFD {
}

message MCGJABKCBEA {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	FOMDNLGEHKP dplecglipga = 3;
}

message MCIEPJICHFK {
	string lkheohlgndb = 1;
}

message MCOKMGFIKJE {
	message EONJGABALDG {
		string edabjienhim = 1;
		string apegjbkodcm = 2;
	}

	message MGHOANCJNNK {
		string kfecfadibeo = 1;
		repeated EONJGABALDG odkoacnjmbk = 6;
	}

	MGHOANCJNNK khfbmndfdfb = 1;
	repeated NCFPKMAHCKB aflnkbolkmh = 2;
}

message MCONFJMLOBE {
	repeated MBKJCODCAKE lghencehcal = 1;
}

message MDBOJGPBPCP {
	enum BEBBLCPAJEP {
		UNSET = 0;
		SUCCESS = 1;
		PAGE = 2;
		RETRY = 3;
	}

	BEBBLCPAJEP hhkodmoefol = 1;
	repeated CLIEJCCDICE ojgckfiagpm = 2;
	uint64 fojnmdbfmja = 3;
	int32 ddjilmjnhji = 4;
}

message MDBOKFBAPDA {
	BFABHCMKGCB acifngkjfjh = 1;
	ADELCOJBGFA bjlloamgphe = 2;
	int32 anlepkoecfn = 3;
}

message MDFLOKCEAAM {
	bool hjnhaaeepkm = 1;
}

message MDHKOBGLNDF {
	enum FKCIMGOPPGI {
		OPEN = 0;
	}

	FKCIMGOPPGI ndniclippln = 1;
}

message MDHOIKMFEGD {
	enum PNHHFFOMHHL {
		UNSET = 0;
		SUCCESS = 1;
		REWARDS_ALREADY_COLLECTED = 2;
		ERROR_UNKNOWN = 3;
	}

	PNHHFFOMHHL hhkodmoefol = 1;
	PAEHCJKJPLP acbpiimiphk = 2;
}

message MDKCHIECFMG {
	repeated DNICJAHCIJD dnjnhimhfoc = 1;
}

message MDKGHCMCNMF {
	FJDJKDCAOKK nojmgjhalcm = 1;
	OCGLMKHCMFN diebhohbacl = 2;
}

message MEABINCDNDC {
	repeated PCNMLNDPOML plncdpkcoml = 1;
}

message MEAENBGMNED {
	enum BJMHJPNALGP {
		LURE = 0;
		POWER_UP = 1;
	}

	GKLMOIKOIKE obkcbifngop = 1;
	BJMHJPNALGP pblcdkhfmgm = 2;
}

message MECABJOMLEH {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	BHCMFBEDOEL.GGFAOCIPGMF hhkodmoefol = 3;
}

message MEIOBOCAPJH {
	string gfepbfmmdcc = 1;
	int64 iblpbmeaann = 2;
	double chhgiikbnma = 3;
	double flaphjheime = 4;
	int32 neifnabaggg = 5;
	int32 phbmkiabedh = 6;
	int32 jdafopgmbbo = 7;
	bool plmpdlcoemi = 8;
	CLDFDLHPJDE iepipmjapkb = 9;
	int64 hnmkknnknfh = 10;
	bool kehmnmcnoad = 11;
	repeated BFABHCMKGCB fdoobkbhlom = 12;
	GKLMOIKOIKE pcdppeomhnn = 13;
	int64 pdmpjdmpkig = 14;
	CKMAHNACKCO.MINOKOJEAEI dhepmbneahf = 15;
	FBONFNPLEKK.KAKGPMHLBFJ ggnlmlfjpno = 16;
	int64 omoemljjpmc = 17;
	IBGGKKNEKOA mhfeghpibln = 18;
	bool jlglfckobbh = 19;
	MMJEAILADJO ekcodclomef = 20;
	NJADEJNLJLC oficpdmbkjk = 21;
	bool mcgaibpklmm = 22;
	int64 ppplpgagdip = 23;
	bool icpkpbljhoe = 24;
	string mpaekobkjkh = 25;
	bool hnbcllnjbao = 26;
	string jhpckhhlhkb = 27;
	string fkakjfopnjd = 28;
	bool aidndfebjba = 30;
	bool ajciifpccjb = 31;
	JOLDPAMFDLN ekljpdoiejk = 32;
	repeated JOLDPAMFDLN dmhfkllijio = 33;
	bool hinfcmbbbie = 34;
	string nkdijnnjonk = 35;
	string ohfllediidn = 36;
	int32 emnlnalikkc = 37;
	int64 joghfanihmi = 38;
	int64 cfflmcekkdc = 39;
	int64 agkanflkpfe = 40;
	repeated MEAENBGMNED ehcegglnpbc = 41;
	bool alnbnknelal = 42;
}

message MEMDKPJHMIN {
	bool aahifpaefgc = 1;
}

message MEOGMDKEPGH {
	message FBCIKFGKFHP {
		int64 igfdgcikjem = 1;
		float aginihehgel = 2;
		int64 hkpoheekhjc = 3;
		int32 lflohpdogfn = 4;
	}

	repeated FBCIKFGKFHP gbaanghebep = 1;
	repeated FBCIKFGKFHP eciednndiac = 2;
}

message MEPKFOMMHDK {
	GLDKJOBPOPF eihekoacemn = 1;
}

message MFBBHOMMCLC {
	float endegjgimdn = 1;
}

message MFDBCLLLINJ {
	enum CJNMBEDINPE {
		UNDEFINED = 0;
		SUCCESS = 1;
		BAD_RESPONSE = 3;
		ACTION_ERROR = 4;
		DISPATCH_ERROR = 5;
		SERVER_ERROR = 6;
		ASSIGNMENT_ERROR = 7;
		PROTOCOL_ERROR = 8;
		AUTHENTICATION_ERROR = 9;
		CANCELLED_REQUEST = 10;
		UNKNOWN_ERROR = 11;
		NORETRIES_ERROR = 12;
		UNAUTHORIZED_ERROR = 13;
		PARSING_ERROR = 14;
		ACCESS_DENIED = 15;
		ACCESS_SUSPENDED = 16;
	}

	KCMPDPEOJBB ipcldpmlhbj = 1;
	CJNMBEDINPE llponloodfk = 2;
}

message MFEHBKGPFGE {
	enum EKNDFCFNJCP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_BUDDY_NOT_VALID = 2;
		FAILED_INSUFFICIENT_RESOURCES = 3;
		FAILED_INVALID_ITEM_REQUIREMENT = 4;
		FAILED_BUDDY_STILL_FULL_FROM_POFFIN = 5;
	}

	EKNDFCFNJCP hhkodmoefol = 1;
	LJNAADNKMGN amanihbickm = 3;
	FOALJFDFEJF.MCCJAMOLHDC kdnpkeplngk = 4;
}

message MFFNNFPJENI {
	int64 plfolcclokm = 1;
	int64 dkgnihhompp = 2;
}

message MFGMLBKFEIH {
	enum AOIKKPLCIBO {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVALID_PLAYER_ID = 3;
		ERROR_FRIEND_NOT_FOUND = 4;
		ERROR_GIFT_DOES_NOT_EXIST = 5;
		ERROR_FRIEND_UPDATE = 6;
	}

	AOIKKPLCIBO hhkodmoefol = 1;
}

message MFJALKJICAJ {
	bool aahifpaefgc = 1;
}

message MFJBAGNLGGC {
	JMDPOIAHFCA.NOAECFHGDHN hhkodmoefol = 1;
}

message MFODNNLJKID {
	enum KGDIPIJPHBF {
		NONE = 0;
		DAY = 1;
		NIGHT = 2;
	}

	enum MDBLPPEOFHC {
		UNSET = 0;
		SUCCESS = 1;
		LOCATION_UNSET = 2;
		ERROR = 3;
	}

	repeated ADFJGNDBJFG mbehbjpolbm = 1;
	MDBLPPEOFHC llponloodfk = 2;
	KGDIPIJPHBF npelmkpclop = 3;
	repeated ClientWeatherProto dkfngddagic = 4;
}

message MGBIODJOCEE {
}

message MGGGJMCNAGK {
	LMMLJBEDMBD apgnpjbapog = 1;
	int32 bdimnladena = 2;
	IDJMLGDHNHI ldccnikjabe = 3;
	float pcccbbmbmkm = 4;
	float jcgokkjiaco = 5;
	float eleebdbcjom = 6;
	float abeclbddkcp = 7;
	float kgopdkicgog = 8;
	int32 hfgmofjfbik = 9;
	int32 kknkfbhmihn = 10;
	string oliokdkelhb = 11;
	int32 aeaajncnogj = 12;
	int32 nmklbgbmahe = 13;
	int32 kpkhjphakfb = 14;
	int32 ccmakpidfhl = 15;
	bool ohjndfkkoop = 16;
}

message MGJGCNALKDG {
	string hdhelgjcbfp = 1;
	int32 bfpedmlobmk = 2;
}

message MGJOAHEPGJJ {
	string plkjlhilhfb = 1;
}

message MGLDFKKPHCO {
	bool kdggpmfimgj = 1;
}

message MGNAIHBKIFH {
	enum HKNGBIGCNLM {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_ENABLED = 2;
		ERROR_TOO_MANY_REQUESTS = 3;
		ERROR_INVALID_FORMAT = 4;
		ERROR_EXCEEDS_SIZE_LIMIT = 5;
		ERROR_INTERNAL_ERROR = 6;
	}

	HKNGBIGCNLM hhkodmoefol = 1;
}

message MHODMLNNIIP {
	enum LJMHHPCIOCM {
		UNSET_SLOT = 0;
		HAIR = 1;
		SHIRT = 2;
		PANTS = 3;
		HAT = 4;
		SHOES = 5;
		EYES = 6;
		BACKPACK = 7;
		GLOVES = 8;
		SOCKS = 9;
		BELT = 10;
		GLASSES = 11;
		NECKLACE = 12;
		SKIN = 13;
		POSE = 14;
		FACE = 15;
		PROP = 16;
	}

	enum NIEILFCFIEN {
		UNSET_UNLOCK_TYPE = 0;
		DEFAULT = 1;
		MEDAL_REWARD = 2;
		IAP_CLOTHING = 3;
		LEVEL_REWARD = 4;
		COMBAT_RANK_REWARD = 5;
	}

	enum NOOHPPNHIIP {
		UNSET_PROMO_TYPE = 0;
		SALE = 1;
		FEATURED = 2;
	}

	bool plmpdlcoemi = 1;
	OHBIGINBFMN bkgmankfofi = 2;
	repeated LJMHHPCIOCM hhjkoenlkdl = 3;
	string malkbgnfpdm = 4;
	string cpflkamoodm = 5;
	string licaifodidl = 6;
	int32 ojcllackebh = 7;
	NIEILFCFIEN nboljaplhba = 8;
	repeated NOOHPPNHIIP impkgplphma = 9;
	DCAECPGGPON aenjcplallo = 10;
	string bkpkihglbka = 11;
	int32 chkipknhhcm = 12;
	string lmpocejoflh = 13;
	int32 bfginjgfdlk = 14;
	string adhofpjgppe = 15;
	bool hbjjjoneopa = 16;
	repeated string bijimmmcpib = 17;
}

message MIBMKCLCGJO {
	float banjpnkhlee = 1;
	float gakjcjkigij = 2;
	float ilpgcalmmbd = 3;
	float ehafflempkj = 4;
}

message MICFGODEFAE {
	repeated LIGOEELMONH lpmecpncmfo = 1;
	string djnonjbjbfc = 2;
	int64 admeafhiian = 3;
}

message MIDDDJBMIEJ {
	enum MGMHHOEAOFF {
		UNSET = 0;
		SUCCESS = 1;
		FAILED_POKEMON_MISSING = 2;
		FAILED_INSUFFICIENT_RESOURCES = 3;
		FAILED_POKEMON_CANNOT_EVOLVE = 4;
		FAILED_POKEMON_IS_DEPLOYED = 5;
		FAILED_INVALID_ITEM_REQUIREMENT = 6;
		FAILED_POKEMON_ALREADY_MEGA_EVOLVED = 7;
	}

	MGMHHOEAOFF hhkodmoefol = 1;
	NHLCGNMFNOM lcdnpbiiffe = 2;
	int32 ainphkodlei = 3;
	HDPCEHMGHOO dcdflocpcki = 4;
}

message MIGLGFFMILA {
	message BDBFCDCNDNG {
		int64 igfdgcikjem = 1;
		repeated uint64 iaaodidlhmb = 2;
		repeated uint64 jpjkhbehmjn = 3;
	}

	repeated BDBFCDCNDNG kbpoelmejon = 1;
}

message MIGOIFDBBLO {
	int64 bkkcjfmmhpl = 1;
	int64 icjdjdnofmh = 2;
	int64 ddamlnnedfe = 3;
	PCNMLNDPOML neheodjifem = 4;
	bool epeaamhlhke = 5;
	bool fpnbahjgobf = 6;
	bool oablhhlppnh = 7;
	bool fdminalpdhh = 8;
	bool njakbknjaab = 9;
	int64 aehegfapfbi = 10;
	bool ecehoohconl = 12;
	NHLCGNMFNOM dmkgchbbnmf = 14;
}

message MIHEBCJPCKE {
	repeated IBGGKKNEKOA.IBGFAGKHKGN akmhmjdlbni = 1;
	int32 pgihkaiebgb = 2;
	int32 decbgphhfcl = 3;
	BFABHCMKGCB eknmmlhgked = 4;
	repeated ECKCGMOEHGH kkgpbledhap = 5;
}

message MIHEHLCMGLI {
	enum JHCLPEIEIJL {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_POKEMON_NOT_IN_INVENTORY = 4;
		ERROR_NOT_ELIGIBLE_LEAGUE = 5;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 6;
		ERROR_ALREADY_TIMEDOUT = 8;
		ERROR_ALREADY_CANCELLED = 9;
		ERROR_FRIEND_NOT_FOUND = 10;
		ERROR_FAILED_TO_SEND_NOTIFICATION = 11;
		ERROR_ACCESS_DENIED = 12;
		ERROR_INELIGIBLE_OPPONENT = 13;
	}

	JHCLPEIEIJL hhkodmoefol = 1;
	JDHOCBHIAMN bniaebpgnal = 2;
}

message MIHKJLMMMGA {
	int32 klbdcmfdnpo = 2;
	int32 hjaoahoklif = 3;
	int32 aneafdbhioe = 4;
	int32 nlecicnokai = 5;
	int32 gihgnahnjfi = 6;
	int32 nbhkgpikcim = 7;
	int32 ggokaolekab = 8;
	int32 odacdjheeda = 9;
	string fpohlgfnmli = 10;
	string nomkoohnpfn = 11;
	string djibinjiphe = 12;
	string efoinefiifb = 13;
	string ofbfknpigib = 14;
	string doljokneaih = 15;
	string nkhkfecpimm = 16;
	string elfifdbdgfk = 17;
	string dgocecndcmm = 18;
	string bjngkjnechp = 19;
	string fcjkanbaela = 20;
	string cdaookpiego = 21;
	string bjboimbglpj = 22;
	string hoomglnpbda = 23;
	string jcnljhcgnbp = 24;
	string kanekdekign = 25;
}

message MILAAEIHFPP {
	bool pijnhodgkhc = 1;
}

message MIMBFFJPAMP {
	bool plmpdlcoemi = 1;
	int32 nppflknnlng = 2;
	bool dcpkbncgkhc = 3;
}

message MIMJGJBDMIH {
	enum FEJLGKDIHMN {
		UNSET = 0;
		INVALID_NUM_FORTS = 1;
		INVALID_NUM_CHECKPOINTS = 2;
		INVALID_TOTAL_DISTANCE = 3;
		INVALID_DISTANCE_BETWEEN_FORTS = 4;
		INVALID_DISTANCE_BETWEEN_CHECKPOINTS = 5;
		INVALID_FORT = 6;
		DUPLICATE_FORTS = 7;
		INVALID_START_OR_END = 8;
		INVALID_NAME_LENGTH = 9;
		INVALID_DESCRIPTION_LENGTH = 10;
		TOO_MANY_CHECKPOINTS_BETWEEN_FORTS = 11;
		INVALID_MAIN_IMAGE = 12;
		BAD_NAME = 13;
		BAD_DESCRIPTION = 14;
	}

	repeated FEJLGKDIHMN nidebmjcmme = 1;
}

message MJADPHMBILB {
	int32 menidjljmdn = 1;
}

message MJALJNLBMAB {
	oneof JEILFLPEKOL {
		GHJMFFCFIPM boot_time = 1;
		DKLOINCOEHD frame_rate = 2;
		GenericClickTelemetry generic_click_telemetry = 3;
		MapEventsTelemetry map_events_telemetry = 4;
		SpinPokestopTelemetry spin_pokestop_telemetry = 5;
		ProfilePageTelemetry profile_page_telemetry = 6;
		ShoppingPageTelemetry shopping_page_telemetry = 7;
		EncounterPokemonTelemetry encounter_pokemon_telemetry = 8;
		CatchPokemonTelemetry catch_pokemon_telemetry = 9;
		DeployPokemonTelemetry deploy_pokemon_telemetry = 10;
		FeedPokemonTelemetry feed_pokemon_telemetry = 11;
		EvolvePokemonTelemetry evolve_pokemon_telemetry = 12;
		ReleasePokemonTelemetry release_pokemon_telemetry = 13;
		NicknamePokemonTelemetry nickname_pokemon_telemetry = 14;
		NewsPageTelemetry news_page_telemetry = 15;
		ItemTelemetry item_telemetry = 16;
		BattlePartyTelemetry battle_party_telemetry = 17;
		PasscodeRedeemTelemetry passcode_redeem_telemetry = 18;
		LinkLoginTelemetry link_login_telemetry = 19;
		RaidTelemetry raid_telemetry = 20;
		PushNotificationTelemetry push_notification_telemetry = 21;
		AvatarCustomizationTelemetry avatar_customization_telemetry = 22;
		ReadPointOfInterestDescriptionTelemetry read_point_of_interest_description_telemetry = 23;
		WebTelemetry web_telemetry = 24;
		ChangeArTelemetry change_ar_telemetry = 25;
		WeatherDetailClickTelemetry weather_detail_click_telemetry = 26;
		UserIssueWeatherReport user_issue_weather_report = 27;
		PokemonInventoryTelemetry pokemon_inventory_telemetry = 28;
		SocialTelemetry social_telemetry = 29;
		CheckEncounterTrayInfoTelemetry check_encounter_info_telemetry = 30;
		PokemonGoPlusTelemetry pokemon_go_plus_telemetry = 31;
		RpcResponseTelemetry rpc_timing_telemetry = 32;
		SocialGiftCountTelemetry social_gift_count_telemetry = 33;
		AssetBundleDownloadTelemetry asset_bundle_telemetry = 34;
		AssetPoiDownloadTelemetry asset_poi_download_telemetry = 35;
		AssetStreamDownloadTelemetry asset_stream_download_telemetry = 36;
		AssetStreamCacheCulledTelemetry asset_stream_cache_culled_telemetry = 37;
		RpcSocketResponseTelemetry rpc_socket_timing_telemetry = 38;
		PermissionsFlowTelemetry permissions_flow = 39;
		DeviceServiceToggleTelemetry device_service_toggle = 40;
		NHJCDMEFBCE boot_telemetry = 41;
		UserAttributesProto user_attributes = 42;
		OnboardingTelemetry onboarding_telemetry = 43;
		LoginActionTelemetry login_action_telemetry = 44;
		ArPhotoSessionProto ar_photo_session_telemetry = 45;
		CCONMCEMGLM invasion_telemetry = 46;
		CombatMinigameTelemetry combat_minigame_telemetry = 47;
		LeavePointOfInterestTelemetry leave_point_of_interest_telemetry = 48;
		ViewPointOfInterestImageTelemetry view_point_of_interest_image_telemetry = 49;
		FGNPDEENPDB combat_hub_entrance_telemetry = 50;
		LeaveInteractionRangeTelemetry leave_interaction_range_telemetry = 51;
		ShoppingPageClickTelemetry shopping_page_click_telemetry = 52;
		ShoppingPageScrollTelemetry shopping_page_scroll_telemetry = 53;
		GLFDEFBJOFH device_specifications_telemetry = 54;
		GFLFAGKADLH screen_resolution_telemetry = 55;
		ARBuddyMultiplayerSessionTelemetry ar_buddy_multiplayer_session_telemetry = 56;
		BINLLKFOEDD buddy_multiplayer_connection_failed_telemetry = 57;
		HAIEMEKNGED buddy_multiplayer_connection_succeeded_telemetry = 58;
		BHMIGJOMIBB buddy_multiplayer_time_to_get_session_telemetry = 59;
		PlayerHudNotificationClickTelemetry player_hud_notification_click_telemetry = 60;
		MonodepthDownloadTelemetry monodepth_download_telemetry = 61;
		ArMappingTelemetryProto ar_mapping_telemetry = 62;
		RemoteRaidTelemetry remote_raid_telemetry = 63;
		ILEHKELGPHL device_os_telemetry = 64;
		NianticProfileTelemetry niantic_profile_telemetry = 65;
		ChangeOnlineStatusTelemetry change_online_status_telemetry = 66;
		DeepLinkingTelemetry deep_linking_telemetry = 67;
		ArMappingSessionTelemetryProto ar_mapping_session_telemetry = 68;
		PokemonHomeTelemetry pokemon_home_telemetry = 69;
		PokemonSearchTelemetry pokemon_search_telemetry = 70;
		ImageGalleryTelemetry image_gallery_telemetry = 71;
		PlayerShownLevelUpShareScreenTelemetry player_shown_level_up_share_screen_telemetry = 72;
		FHMNODLOFOC referral_telemetry = 73;
		UploadManagementTelemetry upload_management_telemetry = 74;
		WayspotEditTelemetry wayspot_edit_telemetry = 75;
		ClientSettingsTelemetry client_settings_telemetry = 76;
		PokedexCategorySelectedTelemetry pokedex_category_selected_telemetry = 77;
		PCAMDKHBNGN percent_scrolled_telemetry = 78;
		AddressBookImportTelemetry address_book_import_telemetry = 79;
		FPFPMOCOANF missing_translation_telemetry = 80;
		EggHatchTelemetry egg_hatch_telemetry = 81;
		PushGatewayTelemetry push_gateway_telemetry = 82;
		PushGatewayUpstreamErrorTelemetry push_gateway_upstream_error_telemetry = 83;
		DPHGHPBGKGD username_suggestion_telemetry = 84;
		TutorialTelemetry tutorial_telemetry = 85;
		MDHKOBGLNDF postcard_book_telemetry = 86;
		SocialInboxLatencyTelemetry social_inbox_telemetry = 87;
		HomeWidgetTelemetry home_widget_telemetry = 93;
		PokemonLoadDelay pokemon_load_delay = 94;
	}

	PlatformServerData neoecjfbjjn = 1001;
	PlatformCommonFilterProto cigiiadlokd = 1002;
}

message MJCOBPHOBBG {
	OBICLGNCNFN amgodpllbdb = 1;
}

message MJGAKBNIINJ {
	string hnmanfikgfm = 1;
	string napfadhmchh = 2;
	string cpmnhgfimmc = 3;
	string mdghoojiagd = 4;
}

message MJPAJDCCJEF {
	int64 ehmhemllaog = 1;
	double pbgcbcehagf = 2;
	double denhiohjebi = 3;
}

message MKADDJHFDBJ {
	string ahcgfgkkkdn = 1;
	int64 bkkcjfmmhpl = 2;
	double kbgeoncpmbj = 3;
	double jkgggjheffd = 4;
	int64 hjpplfcnhcp = 5;
	string fjegajkmdcb = 6;
}

message MKHHBJABCEE {
	enum OGLECOFNFLM {
		natural_scale = 0;
		gui_scale = 1;
		battle_pokemon_scale = 2;
		raid_boss_scale = 3;
		gym_topper_scale = 4;
		map_pokemon_scale = 5;
	}

	OGLECOFNFLM kjlmdgpclnj = 1;
	float pnjmiofgbgp = 2;
	float ciajodccfnp = 3;
}

message MKHHILENCDB {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	LFFJMGLIIPC.JPFKMBEAMNI hhkodmoefol = 3;
}

message MLCJKIIMCOP {
	NGNLLGHCIBC lkioaengjmj = 1;
	repeated OOFDHEHENPH acifngkjfjh = 2;
}

message MMDBEIHPHDL {
	enum KIOKJPGAPHO {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_BUDDY_NOT_VALID = 2;
	}

	KIOKJPGAPHO hhkodmoefol = 1;
	int64 mppmjljceic = 2;
	int64 femhedmfakk = 3;
	LJNAADNKMGN amanihbickm = 4;
}

message MMDPDKAHIMK {
	message DECHCEFAAGK {
		IBGGKKNEKOA.IBGFAGKHKGN inbllgglmge = 1;
		repeated IBGGKKNEKOA.IBGFAGKHKGN feeliglfejd = 2;
		string pbkifbmklnf = 3;
	}

	PCNMLNDPOML igfdgcikjem = 1;
	repeated DECHCEFAAGK gkhboofibmk = 2;
}

message MMEBGDDOFGJ {
	double bnmpffmoccm = 1;
}

message MMEKIFKJCDC {
	float omckkkgnpad = 1;
}

message MMJEAILADJO {
	int64 bkkcjfmmhpl = 1;
	int64 ebodjkinbgb = 2;
	int64 kllngcjjmff = 3;
	int64 ifolpogejbj = 4;
	NHLCGNMFNOM ogidgaedalf = 5;
	FNFFHJKDDJJ llmimjaeglc = 6;
	bool jlmgdcahpjl = 7;
	bool jechfnofahm = 8;
	bool fkdhaapflgl = 9;
	bool mjcalllnnec = 10;
	bool lpddipcaldc = 11;
	string apbfngdodan = 12;
}

message MMLPLPGAFPP {
	bool plmpdlcoemi = 1;
}

message MNBCJPNHADP {
	int32 mcladekkgmh = 1;
}

message MNGCJBFBMJJ {
	int64 akgnmofggao = 1;
}

message MOFGEHCDAAM {
	NKDPOODGENC.OHPOBKKLMHO bbgphpfaina = 1;
}

message MONHMCKGADL {
	oneof CBPJJGPMBAG {
		MDKCHIECFMG egg_incubators = 1;
	}

	MDKCHIECFMG ehljmelbfgn = 2;
	ODMPGICJNFB bcdihnecneg = 3;
}

message MPDCACMCEEI {
	OBICLGNCNFN bjjlaoeigol = 1;
	int32 niehhpdibho = 2;
	bool fgpokkbnaak = 3;
	bool pgpkpalnmjp = 4;
}

message MapArea {
	string description = 1;
	int32 epoch = 2;
	string map_provider = 3;
	repeated BoundingRect bounding_rect = 4;
	string minimum_client_version = 5;
}

message MapCompositionRoot {
	repeated MapArea map_area = 1;
	repeated MapProvider map_provider = 2;
	repeated NamedMapSettings named_map_settings = 3;
}

message MapEventsTelemetry {
	MapEventsTelemetryIds map_event_click_id = 1;
	string fort_id = 2;
	repeated int32 guard_pokemon_level = 3;
	int32 team = 4;
	bool is_player_in_range = 5;
}

message MapProvider {
	enum MapType {
		UNSET = 0;
		GMM = 1;
		OSM = 2;
		BLANK = 3;
		GMM_BUNDLE = 4;
		NIANTIC_BUNDLE = 5;
	}

	oneof Settings {
		GmmSettings gmm_settings = 4;
		string settings_name = 5;
	}

	message BundleZoomRange {
		int32 min_zoom = 1;
		int32 max_zoom = 2;
		int32 request_zoom_offset = 3;
	}

	string name = 1;
	string base_url = 2;
	string query_format = 3;
	MapType map_type = 6;
	bool hide_attribution = 7;
	int32 min_tile_level = 8;
	int32 max_tile_level = 9;
	repeated BundleZoomRange bundle_zoom_range = 10;
}

message MapTile {
	int32 zoom = 1;
	int32 x = 2;
	int32 y = 3;
	repeated Layer layers = 4;
}

message MapTileBundle {
	int32 format_version = 1;
	int32 tile_zoom = 2;
	int32 bundle_zoom = 3;
	int32 bundle_x = 4;
	int32 bundle_y = 5;
	int32 epoch = 6;
	repeated MapTile tiles = 7;
}

message MapTileDataProto {
	MapTileProto map_tile = 1;
	bytes tile_data = 2;
	bytes label_data = 3;
}

message MapTileProto {
	enum TextSizeEnum {
		TEXT_SIZE_ENUM_UNSET = 0;
		SMALL = 1;
		MEDIUM = 2;
		LARGE = 3;
	}

	enum TileTypeEnum {
		TILE_TYPE_ENUM_UNSET = 0;
		MAP_ATLAS = 2;
		SATELLITE = 3;
		TRAFFIC = 4;
		GIF_ATLAS = 5;
		HYBRID = 6;
		TERRAIN = 7;
		CLICKABLE_LAYER = 8;
		STREET_VIEW = 9;
		VECTOR_ATLAS = 10;
		ROAD_GRAPH = 11;
		TERRAIN_NO_LABELS = 12;
		VECTOR_TRANSIT = 13;
		INDOOR = 14;
		LABELS_ONLY = 15;
		PERSONALIZED_SMARTMAPS = 16;
	}

	uint32 tile_variant = 1;
	int32 tile_index_x = 2;
	int32 tile_index_y = 3;
	int32 zoom_level = 4;
	string indoor_level_id = 5;
	int32 pertile_epoch = 6;
}

message MaskedColor {
	uint32 color_argb = 1;
	uint32 color_mask_argb = 2;
}

message MonodepthDownloadTelemetry {
	bool downloaded_package = 1;
	bool skipped_package = 2;
	string model_downloaded = 3;
}

message NAAGKBHDDIL {
	NHLCGNMFNOM piddpkfgmod = 1;
	int64 pkljdiaplkc = 2;
	string nbpjjkhmncc = 3;
	DCMHMGIGNLJ ppgjiaakcmg = 4;
	int32 gceielnimla = 5;
	FNFFHJKDDJJ llmimjaeglc = 6;
	string gfepbfmmdcc = 7;
	bool jechfnofahm = 8;
	bool bajgfmmjfeg = 9;
}

message NABADAFLIPI {
	int64 dcnhcomnobj = 1;
	int32 iaplbahjkfi = 2;
	OBICLGNCNFN aakfgnpaojf = 3;
	OBICLGNCNFN gpkghaclhme = 4;
	double dhbecdbmnjo = 5;
	int32 gdhihbdihod = 6;
}

message NACCNEKOJKO {
	enum MPLJFEDBNCM {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVALID_ROUTE = 3;
		ERROR_OLD_VERSION = 4;
		ERROR_ROUTE_STATE_NOT_IN_PROGRESS = 5;
		ERROR_TOO_MANY_RECENT_SUBMISSIONS = 6;
		ERROR_ROUTE_SUBMISSION_UNAVAILABLE = 7;
		ERROR_UNVISITED_FORT = 8;
		ERROR_MATCHES_REJECTION = 9;
	}

	MPLJFEDBNCM hhkodmoefol = 1;
	NDDJFAGALDG eiomfgbmggo = 2;
	MIMJGJBDMIH bhnpoihopkm = 3;
}

message NACHJFJJCOO {
	int32 hbmmfopjbce = 1;
}

message NADFALIGENL {
	repeated CJPOCHPCJEE conddnnhlpf = 1;
}

message NADKFNKAFPK {
	enum CMCHBDINAOP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_QUEST_NOT_FOUND = 2;
		ERROR_EXCEEDED_GEOTARGETED_SUBMISSION_LIMIT = 3;
		ERROR_VALIDATION_FAILED = 4;
	}

	CMCHBDINAOP llponloodfk = 1;
	BGOGOGOMLBN bkmmhnbfabl = 2;
}

message NADPEMMHNAN {
	ALOCBADNLJC.IFINICEPNLK llponloodfk = 1;
	JGHBGMKOLJK kanajhkhmhb = 2;
}

message NAGODODJLEC {
	KELAPNFCPCK.HKFNONHMCIH hhkodmoefol = 1;
	repeated int32 gdghkinahdb = 2;
	int32 nmjabfdimbb = 3;
	uint32 inlfgafelia = 4;
	uint32 jkkjldogial = 5;
	uint32 olefkchkbcj = 6;
	uint32 mjgpmjflemg = 7;
	string fjegajkmdcb = 8;
	bool cljhadgjijo = 9;
	uint32 ohegpfhejka = 10;
	int32 hcbbknlppog = 11;
	GameplayWeatherProto.WeatherCondition icnjpmpgnnk = 12;
}

message NAOCHLCDONI {
	bool bldfjlfhibl = 1;
	repeated DCAECPGGPON abehgofphgh = 2;
	repeated int32 hkpfigmkjnm = 3;
	repeated string ckdihiinphi = 4;
}

message NBBAHDOGFOL {
	NHLCGNMFNOM bcdccldmnci = 1;
}

message NBHAGEDANMM {
	bool gkachadhcoj = 1;
}

message NBMNJLEFMOF {
	float jdbpnpfbcfi = 1;
}

message NCCAGPGHANA {
	uint64 pkljdiaplkc = 1;
	int64 iblpbmeaann = 2;
	double chhgiikbnma = 3;
	double flaphjheime = 4;
	string jccjpokpejh = 5;
	NHLCGNMFNOM piddpkfgmod = 7;
	int32 lkmnfemdfoc = 11;
}

message NCFPKMAHCKB {
	oneof EBFMOKEABGP {
		int32 exp = 2;
		DMOJAKFBNME item = 3;
		int32 stardust = 4;
		LLJHOLGBOOO candy = 5;
		string avatar_template_id = 6;
		string quest_template_id = 7;
		AMKKJIAEOGO pokemon_encounter = 8;
		int32 pokecoin = 9;
		LLJHOLGBOOO xl_candy = 10;
		int32 level_cap = 11;
		DDEKKKFNPKF sticker = 12;
		LLJHOLGBOOO mega_resource = 13;
		OHHJGCNHOFN incident = 14;
		OFMCIOLCLHL player_attribute = 15;
	}

	enum ECDELAOLLDG {
		UNSET = 0;
		EXPERIENCE = 1;
		ITEM = 2;
		STARDUST = 3;
		CANDY = 4;
		AVATAR_CLOTHING = 5;
		QUEST = 6;
		POKEMON_ENCOUNTER = 7;
		POKECOIN = 8;
		XL_CANDY = 9;
		LEVEL_CAP = 10;
		STICKER = 11;
		MEGA_RESOURCE = 12;
		INCIDENT = 13;
		PLAYER_ATTRIBUTE = 14;
	}

	ECDELAOLLDG ldccnikjabe = 1;
}

message NCHIICAKHAC {
	enum DIAOEMPLFIA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_POKEMON_NOT_FOUND = 2;
		ERROR_POKEMON_IS_EGG = 3;
	}

	DIAOEMPLFIA hhkodmoefol = 1;
}

message NCJABLLOEPN {
	COPMENHFKJN pnmahpbodhl = 1;
	int32 khhccfocaee = 2;
}

message NCJGEGGFIDI {
	string jlpmmlbclok = 1;
}

message NCMGABAEPNB {
	int64 lcmgoghdhno = 1;
	int64 lhbggbnlddb = 2;
	repeated DCAECPGGPON fdjpakfeepj = 3;
	bool kmdioebgkbb = 4;
}

message NDBFIHDAJPN {
	enum IBLBHHIHGOB {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_POKEMON_NOT_FOUND = 2;
		ERROR_INSUFFICIENT_RESOURCES = 3;
		ERROR_UPGRADE_NOT_AVAILABLE = 4;
		ERROR_POKEMON_IS_DEPLOYED = 5;
		ERROR_DUPLICATE_REQUEST = 6;
	}

	message BGODIDCAIAO {
		int32 dnpkkjjggel = 1;
		int32 alppkihahie = 2;
		int32 oknigabllhh = 3;
		int32 pglcnkmlaem = 4;
		int32 lijgkmefooe = 5;
		float kkbhagnnmak = 6;
		int32 hpfcnkblogj = 7;
	}

	IBLBHHIHGOB hhkodmoefol = 1;
	NHLCGNMFNOM oaacpimheob = 2;
	NHLCGNMFNOM hfnhennibam = 3;
	repeated BGODIDCAIAO lmpclbiljgk = 4;
}

message NDCFBHIGMPI {
	enum FHBNNNKJFBB {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	FHBNNNKJFBB hhkodmoefol = 1;
	repeated GDAHCDPEMBJ mmahfegdpio = 2;
}

message NDDJFAGALDG {
	enum PDHKKGPJLGB {
		UNSET = 0;
		IN_PROGRESS = 1;
		SUBMITTED = 2;
		REJECTED = 3;
	}

	message IAPJPEANDCO {
		string plblkakflim = 1;
	}

	int64 godfillmpmn = 1;
	int64 pljhinldecj = 2;
	int64 aacpjnafclj = 3;
	int64 gmphemkckei = 4;
	GKLNKCNCPHP ciffdecapka = 5;
	PDHKKGPJLGB llponloodfk = 6;
	repeated IAPJPEANDCO gmfhghkanbk = 7;
	repeated int64 mmbegapgaki = 8;
}

message NDJEFPMAHEL {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	EJIANFIDLHB.POAKDNMLGGC hhkodmoefol = 3;
	PPMOEEBFKKG bniaebpgnal = 4;
}

message NDJMIFJGCAB {
	repeated uint64 iepbdcjdpfk = 1;
}

message NDKANLHIAFK {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	NLFLFKMOECB.BFNLEOHKOAN hhkodmoefol = 3;
	PPMOEEBFKKG bniaebpgnal = 4;
}

message NDLCKIKMCOO {
	LIPCKNBPFMD ljnfgbnhmdh = 1;
	bool aododpcpnoj = 2;
	bool fiegabkkkdo = 3;
}

message NECCKHDNPKM {
	string oocggedbcke = 1;
	string gfepbfmmdcc = 2;
	double kdfjiijebjg = 3;
	double agndimhpnjk = 4;
	NKDPOODGENC.CDIKKLMHAHB likhphmlcgl = 5;
}

message NEJJDLIMPDA {
	bool cljhadgjijo = 1;
	bool gpgbcmjccjh = 2;
}

message NENJNLBAEIA {
	int32 hbmmfopjbce = 1;
}

message NFBABJFGHNG {
	int32 hbmmfopjbce = 1;
	repeated int32 ephkplfnblk = 2;
}

message NFENEOKGAAG {
	repeated IDJMLGDHNHI lojbhbgllgp = 1;
}

message NFJGPNCNAHJ {
	string likhphmlcgl = 1;
}

message NFNIMOMCIKL {
	int32 lcofijplldf = 1;
	int32 fodomkjiffk = 2;
	int32 idlkoobhdmi = 3;
	int32 lebfkccjemo = 4;
	float bghfigenlnb = 5;
}

message NFOKIFKJMAG {
	enum NBJGGMAGFKG {
		UNSET = 0;
		POKEMON_CAPTURED = 1;
		POKEMON_FLED = 2;
		POKEMON_HATCHED = 3;
	}

	NBJGGMAGFKG hhkodmoefol = 1;
	int32 blhabfdhobn = 2;
	int32 gfghaaephjj = 3;
	uint64 igfdgcikjem = 4;
	IBGGKKNEKOA nnnmmlpnchp = 5;
}

message NFPLAAMPDAM {
	BFABHCMKGCB acifngkjfjh = 1;
	uint64 igfdgcikjem = 2;
}

message NGDKDGEKHMI {
	enum LKGDPNDAJAI {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_DISABLED = 2;
		ERROR_UNKNOWN = 3;
	}

	repeated FCLDEPJJJHM cdlbnjfckaa = 1;
	repeated FCLDEPJJJHM jbfakinalij = 2;
	LKGDPNDAJAI llponloodfk = 3;
}

message NGFMDOMIKDG {
	float banjpnkhlee = 1;
}

message NHAAPGGNFPA {
	string flnekghfefk = 1;
}

message NHBKEGIAKIC {
	enum GIIEIPJCFBH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_GYM_NOT_FOUND = 2;
		ERROR_GYM_NEUTRAL = 3;
		ERROR_GYM_WRONG_TEAM = 4;
		ERROR_GYM_EMPTY = 5;
		ERROR_INVALID_DEFENDER = 6;
		ERROR_TRAINING_INVALID_ATTACKER_COUNT = 7;
		ERROR_ALL_POKEMON_FAINTED = 8;
		ERROR_TOO_MANY_BATTLES = 9;
		ERROR_TOO_MANY_PLAYERS = 10;
		ERROR_GYM_BATTLE_LOCKOUT = 11;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 12;
		ERROR_NOT_IN_RANGE = 13;
		ERROR_POI_INACCESSIBLE = 14;
		ERROR_RAID_ACTIVE = 15;
	}

	GIIEIPJCFBH hhkodmoefol = 1;
	KLGNLFGLMEM hdlfefpaljd = 2;
}

message NHCKMIAOOLM {
	int32 cmpkbagaina = 1;
	int32 fhminkidfpg = 2;
	int32 hmoaccpipnd = 3;
	float hpofffhpikg = 4;
	float bomaogbojjg = 5;
	float fcefgcbphcg = 6;
	float edejdclkepo = 7;
	int32 ocglcnlclof = 8;
	int32 ehjmeaghppp = 9;
	float knglpbedpaj = 10;
	float mkpmgcjfjea = 11;
	float abfobkllggp = 12;
	float hnflpbdmjbk = 13;
	int32 hodofolmiko = 14;
	int32 gfeelblaijd = 15;
	uint32 ficmgmlbhmp = 16;
	bool plmpdlcoemi = 17;
}

message NHHFPHJCFNG {
	int32 ndppfnlpjlj = 1;
}

message NHJCDMEFBCE {
	float miladjepkdl = 1;
	int32 deicmecompj = 2;
}

message NHLCGNMFNOM {
	uint64 godfillmpmn = 1;
	int32 igfdgcikjem = 2;
	int32 pamcojidban = 3;
	int32 ijjgponbajg = 4;
	int32 agedjchhpkd = 5;
	int32 afgdgnmpmae = 6;
	int32 plhdcjeoiif = 7;
	string hkniecpjojl = 8;
	string pcdlkchlolo = 9;
	bool ppmhoppighf = 10;
	double ehkbgpodemc = 11;
	double dfehcmcdgdf = 12;
	FLOAAKNKCME bbgphpfaina = 14;
	float hmondlleojh = 15;
	float enmjhddcenb = 16;
	int32 nckphldmbhl = 17;
	int32 cioaphnbeme = 18;
	int32 nhmffbamnde = 19;
	float bmfgcfjdnjo = 20;
	BFABHCMKGCB ihccaegggcb = 21;
	int64 hdbgmahoggb = 22;
	int32 ebofnhpahem = 23;
	int32 epenillbpke = 24;
	string iahnklihlfa = 25;
	int64 mhjanooklad = 26;
	int32 ekhddbjjahg = 27;
	float akkgngjadad = 28;
	bool jlhkneckmal = 29;
	string mgajgldjfcb = 30;
	bool fjfhhlilkah = 31;
	int32 ffiekckbebi = 32;
	float icljhgmmjhe = 33;
	int32 cnppgieghcf = 34;
	int32 flccfamdahk = 35;
	IBGGKKNEKOA nnnmmlpnchp = 36;
	bool jombbmppkdm = 37;
	bool lhfilifmcbb = 38;
	int32 lflohpdogfn = 39;
	int64 haolcojmkgj = 40;
	int64 imimloleail = 41;
	float flnkjflnlmi = 42;
	int32 gmfnbdghdgc = 43;
	string fpmohllfknl = 44;
	int64 ohobhdjchmh = 45;
	bool felbonfpjil = 46;
	int32 jkmdcoekemo = 47;
	FNHEHEPKICP pggmohlpcao = 48;
	FNHEHEPKICP fiacadpaeie = 49;
	bool feiighaflfa = 50;
	string dejlljmgakp = 51;
	int32 oagpmohgdka = 52;
	float hhnfjclfomc = 53;
	double hkbbmiphpni = 55;
	double bmnodfnbbmj = 56;
	bool ckhgpnhchkl = 57;
	AEKJDLCIPPD omjdcbdmnmh = 58;
	int32 ockgcocgclf = 59;
	float ggaoboekinl = 60;
	float hfbfpfaajko = 61;
	repeated GMICNCPLCMG dglmpeecdpe = 63;
	repeated GBDIMJIPAEJ bnjppmpkeei = 64;
	KCNIILBABPN ghnmjapigme = 66;
	repeated uint64 mchbejcfakl = 67;
	repeated string enefdfkhehh = 68;
	JIIAGLOABPO hjijniepjdb = 69;
	DAHEPDACPBK nijkkegdbmf = 70;
	BDCHOGFOPJM ipfdpnkiben = 71;
}

message NHNEGBEGMIK {
	enum ONGAHHCCIBN {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_QUEST_NOT_FOUND = 2;
		ERROR_STORY_QUEST_NOT_REMOVABLE = 3;
	}

	ONGAHHCCIBN llponloodfk = 1;
}

message NIABKGFEDBD {
	KDEFEFGCANM cpmfkoedaek = 1;
	string edabjienhim = 2;
	bool mbphipodmll = 3;
	int32 ojcllackebh = 4;
	bool kabaebcbjna = 5;
	string pojadiblgjd = 6;
	string mpaekobkjkh = 7;
	string gpchpipjlii = 8;
	int32 befikhanoep = 9;
	string pdacmlcobnm = 10;
}

message NIAHNHJLNKG {
	map<int32, GNKEIIFKIBL> aoapobnhdni = 1;
}

message NIBGBALKPGB {
	enum BKFGHDMECLB {
		UNSET = 0;
		SUCCESS = 1;
	}

	BKFGHDMECLB hhkodmoefol = 1;
	PAEHCJKJPLP acbpiimiphk = 2;
	int32 hbifmojlajb = 3;
	float mfebogokilh = 4;
	int32 lbnmdfgegnp = 5;
	float boilbofojol = 6;
	int32 pgappnpfpkm = 7;
	int32 epbpheeedlo = 8;
}

message NIGNFDDCCGK {
	message PIHAHHODGJN {
		int32 bdignaabmki = 1;
		int32 cokpmipkcli = 2;
		int32 eebdppbbkdm = 3;
		int32 fkibcdobpce = 4;
	}

	ALOCBADNLJC.IFINICEPNLK llponloodfk = 1;
	NHLCGNMFNOM kgjddncolkh = 2;
	DCMHMGIGNLJ ihnhoapaepl = 3;
	BFABHCMKGCB kkagkkighdm = 4;
	int32 gceielnimla = 5;
	uint64 pkljdiaplkc = 6;
	string albfofbkfle = 7;
	PIHAHHODGJN cgljigkjblp = 8;
}

message NIHBJDDHHNM {
	MEIOBOCAPJH cbfbkbmekag = 1;
	repeated NOAKNAGOMFI imemkjagkmo = 2;
	bool mhdghkcgplo = 3;
}

message NIHCLKDDILH {
	NECCKHDNPKM pgdgeobanmh = 1;
}

message NJADEJNLJLC {
	repeated FCJACLIKCIL eeafebkafbc = 1;
	int32 amfacglgelm = 2;
	double jkenibghgmc = 3;
	int32 gohalnlghmd = 4;
	int64 aojhhjijdhm = 5;
}

message NJEANIJBGEB {
	enum DFFANDNMJCL {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		TIMED_OUT = 3;
	}

	DFFANDNMJCL hhkodmoefol = 1;
	ClientInbox acfiigogdgm = 2;
}

message NJIMMANEGIC {
	BFABHCMKGCB acifngkjfjh = 1;
}

message NJJCJFGFHBJ {
	enum GPKFDFBKIHP {
		INCENSE_ENCOUNTER_UNKNOWN = 0;
		INCENSE_ENCOUNTER_SUCCESS = 1;
		INCENSE_ENCOUNTER_NOT_AVAILABLE = 2;
		POKEMON_INVENTORY_FULL = 3;
	}

	GPKFDFBKIHP hhkodmoefol = 1;
	NHLCGNMFNOM piddpkfgmod = 2;
	DCMHMGIGNLJ ihnhoapaepl = 3;
	BFABHCMKGCB kkagkkighdm = 4;
	int32 mhigdejohkh = 5;
}

message NJNMABOHHOD {
	enum FIKFNLKKAIF {
		UNKNOWN = 0;
		SUCCESS = 1;
		INCENSE_ALREADY_ACTIVE = 2;
		NONE_IN_INVENTORY = 3;
		LOCATION_UNSET = 4;
		INCENSE_DISABLED = 5;
	}

	FIKFNLKKAIF hhkodmoefol = 1;
	IJOIPMJCHKC ihflcogokfh = 2;
	PAEHCJKJPLP ondmhpndhad = 3;
}

message NKBFOKJALNM {
	int32 hhikhpnhloa = 1;
	int32 onafholaljg = 2;
	int32 fgalndapmlb = 3;
	int32 oiahmgjngng = 8;
}

message NKBGDIFIKIF {
	enum HPLMKCBGHMP {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_NOT_FRIENDS = 3;
		ERROR_MILESTONE_ALREADY_AWARDED = 4;
		ERROR_FAILED_TO_UPDATE = 5;
	}

	HPLMKCBGHMP hhkodmoefol = 1;
	int64 lnfpjaciddc = 2;
	string mkdlflaoaki = 3;
}

message NKDPOODGENC {
	enum BMIEKPGKNMG {
		EXPRESSION_UNSET = 0;
		PLACEHOLDER_1 = 1;
		PLACEHOLDER_2 = 2;
		PLACEHOLDER_3 = 3;
		PLACEHOLDER_4 = 4;
		GREETING = 5;
		CHALLENGE = 6;
		VICTORY = 7;
		DEFEAT = 8;
	}

	enum CDIKKLMHAHB {
		POKESTOP_INCIDENT = 0;
		ROCKET_BALLOON = 1;
		QUEST_REWARD_INCIDENT = 2;
	}

	enum EALAKMIFPHD {
		UNSET = 0;
		TEAM_LEADER = 1;
		GRUNT = 2;
		ARLO = 3;
		CLIFF = 4;
		SIERRA = 5;
		GIOVANNI = 6;
		GRUNTBF = 7;
		GRUNTBM = 8;
		EVENT_NPC = 9;
		PLAYER_TEAM_LEADER = 10;
	}

	enum GBKCKHAINCA {
		POKESTOP_NORMAL = 0;
		POKESTOP_ROCKET_INVASION = 1;
		POKESTOP_ROCKET_VICTORY = 2;
	}

	enum OHPOBKKLMHO {
		CHARACTER_UNSET = 0;
		CHARACTER_BLANCHE = 1;
		CHARACTER_CANDELA = 2;
		CHARACTER_SPARK = 3;
		CHARACTER_GRUNT_MALE = 4;
		CHARACTER_GRUNT_FEMALE = 5;
		CHARACTER_BUG_GRUNT_FEMALE = 6;
		CHARACTER_BUG_GRUNT_MALE = 7;
		CHARACTER_DARKNESS_GRUNT_FEMALE = 8;
		CHARACTER_DARKNESS_GRUNT_MALE = 9;
		CHARACTER_DARK_GRUNT_FEMALE = 10;
		CHARACTER_DARK_GRUNT_MALE = 11;
		CHARACTER_DRAGON_GRUNT_FEMALE = 12;
		CHARACTER_DRAGON_GRUNT_MALE = 13;
		CHARACTER_FAIRY_GRUNT_FEMALE = 14;
		CHARACTER_FAIRY_GRUNT_MALE = 15;
		CHARACTER_FIGHTING_GRUNT_FEMALE = 16;
		CHARACTER_FIGHTING_GRUNT_MALE = 17;
		CHARACTER_FIRE_GRUNT_FEMALE = 18;
		CHARACTER_FIRE_GRUNT_MALE = 19;
		CHARACTER_FLYING_GRUNT_FEMALE = 20;
		CHARACTER_FLYING_GRUNT_MALE = 21;
		CHARACTER_GRASS_GRUNT_FEMALE = 22;
		CHARACTER_GRASS_GRUNT_MALE = 23;
		CHARACTER_GROUND_GRUNT_FEMALE = 24;
		CHARACTER_GROUND_GRUNT_MALE = 25;
		CHARACTER_ICE_GRUNT_FEMALE = 26;
		CHARACTER_ICE_GRUNT_MALE = 27;
		CHARACTER_METAL_GRUNT_FEMALE = 28;
		CHARACTER_METAL_GRUNT_MALE = 29;
		CHARACTER_NORMAL_GRUNT_FEMALE = 30;
		CHARACTER_NORMAL_GRUNT_MALE = 31;
		CHARACTER_POISON_GRUNT_FEMALE = 32;
		CHARACTER_POISON_GRUNT_MALE = 33;
		CHARACTER_PSYCHIC_GRUNT_FEMALE = 34;
		CHARACTER_PSYCHIC_GRUNT_MALE = 35;
		CHARACTER_ROCK_GRUNT_FEMALE = 36;
		CHARACTER_ROCK_GRUNT_MALE = 37;
		CHARACTER_WATER_GRUNT_FEMALE = 38;
		CHARACTER_WATER_GRUNT_MALE = 39;
		CHARACTER_PLAYER_TEAM_LEADER = 40;
		CHARACTER_EXECUTIVE_CLIFF = 41;
		CHARACTER_EXECUTIVE_ARLO = 42;
		CHARACTER_EXECUTIVE_SIERRA = 43;
		CHARACTER_GIOVANNI = 44;
		CHARACTER_DECOY_GRUNT_MALE = 45;
		CHARACTER_DECOY_GRUNT_FEMALE = 46;
		CHARACTER_GHOST_GRUNT_FEMALE = 47;
		CHARACTER_GHOST_GRUNT_MALE = 48;
		CHARACTER_ELECTRIC_GRUNT_FEMALE = 49;
		CHARACTER_ELECTRIC_GRUNT_MALE = 50;
		CHARACTER_BALLOON_GRUNT_FEMALE = 51;
		CHARACTER_BALLOON_GRUNT_MALE = 52;
		CHARACTER_GRUNTB_FEMALE = 53;
		CHARACTER_GRUNTB_MALE = 54;
		CHARACTER_BUG_BALLOON_GRUNT_FEMALE = 55;
		CHARACTER_BUG_BALLOON_GRUNT_MALE = 56;
		CHARACTER_DARK_BALLOON_GRUNT_FEMALE = 57;
		CHARACTER_DARK_BALLOON_GRUNT_MALE = 58;
		CHARACTER_DRAGON_BALLOON_GRUNT_FEMALE = 59;
		CHARACTER_DRAGON_BALLOON_GRUNT_MALE = 60;
		CHARACTER_FAIRY_BALLOON_GRUNT_FEMALE = 61;
		CHARACTER_FAIRY_BALLOON_GRUNT_MALE = 62;
		CHARACTER_FIGHTING_BALLOON_GRUNT_FEMALE = 63;
		CHARACTER_FIGHTING_BALLOON_GRUNT_MALE = 64;
		CHARACTER_FIRE_BALLOON_GRUNT_FEMALE = 65;
		CHARACTER_FIRE_BALLOON_GRUNT_MALE = 66;
		CHARACTER_FLYING_BALLOON_GRUNT_FEMALE = 67;
		CHARACTER_FLYING_BALLOON_GRUNT_MALE = 68;
		CHARACTER_GRASS_BALLOON_GRUNT_FEMALE = 69;
		CHARACTER_GRASS_BALLOON_GRUNT_MALE = 70;
		CHARACTER_GROUND_BALLOON_GRUNT_FEMALE = 71;
		CHARACTER_GROUND_BALLOON_GRUNT_MALE = 72;
		CHARACTER_ICE_BALLOON_GRUNT_FEMALE = 73;
		CHARACTER_ICE_BALLOON_GRUNT_MALE = 74;
		CHARACTER_METAL_BALLOON_GRUNT_FEMALE = 75;
		CHARACTER_METAL_BALLOON_GRUNT_MALE = 76;
		CHARACTER_NORMAL_BALLOON_GRUNT_FEMALE = 77;
		CHARACTER_NORMAL_BALLOON_GRUNT_MALE = 78;
		CHARACTER_POISON_BALLOON_GRUNT_FEMALE = 79;
		CHARACTER_POISON_BALLOON_GRUNT_MALE = 80;
		CHARACTER_PSYCHIC_BALLOON_GRUNT_FEMALE = 81;
		CHARACTER_PSYCHIC_BALLOON_GRUNT_MALE = 82;
		CHARACTER_ROCK_BALLOON_GRUNT_FEMALE = 83;
		CHARACTER_ROCK_BALLOON_GRUNT_MALE = 84;
		CHARACTER_WATER_BALLOON_GRUNT_FEMALE = 85;
		CHARACTER_WATER_BALLOON_GRUNT_MALE = 86;
		CHARACTER_GHOST_BALLOON_GRUNT_FEMALE = 87;
		CHARACTER_GHOST_BALLOON_GRUNT_MALE = 88;
		CHARACTER_ELECTRIC_BALLOON_GRUNT_FEMALE = 89;
		CHARACTER_ELECTRIC_BALLOON_GRUNT_MALE = 90;
		CHARACTER_EVENT_NPC_0 = 500;
		CHARACTER_EVENT_NPC_1 = 501;
		CHARACTER_EVENT_NPC_2 = 502;
		CHARACTER_EVENT_NPC_3 = 503;
		CHARACTER_EVENT_NPC_4 = 504;
		CHARACTER_EVENT_NPC_5 = 505;
		CHARACTER_EVENT_NPC_6 = 506;
		CHARACTER_EVENT_NPC_7 = 507;
		CHARACTER_EVENT_NPC_8 = 508;
		CHARACTER_EVENT_NPC_9 = 509;
		CHARACTER_EVENT_NPC_10 = 510;
		CHARACTER_EVENT_NPC_BLANCHE = 511;
		CHARACTER_EVENT_NPC_CANDELA = 512;
		CHARACTER_EVENT_NPC_SPARK = 513;
		CHARACTER_EVENT_NPC_11 = 514;
		CHARACTER_EVENT_NPC_12 = 515;
		CHARACTER_EVENT_NPC_13 = 516;
		CHARACTER_EVENT_NPC_14 = 517;
		CHARACTER_EVENT_NPC_15 = 518;
		CHARACTER_EVENT_NPC_16 = 519;
		CHARACTER_EVENT_NPC_17 = 520;
		CHARACTER_EVENT_NPC_18 = 521;
		CHARACTER_EVENT_NPC_19 = 522;
		CHARACTER_EVENT_NPC_20 = 523;
	}

}

message NKLLDPMCJFD {
}

message NLCDGMHJFIE {
	string hkdkncgnodk = 1;
	KDEFEFGCANM cpmfkoedaek = 2;
	int32 ojcllackebh = 3;
	bool mbphipodmll = 6;
	bool ckljghkkeoi = 7;
	string iocpallgmln = 8;
	string doblngnlada = 9;
	string gpchpipjlii = 10;
	string loedbnpefkm = 11;
	string ggaacalakge = 12;
	int64 chjobnegncc = 13;
	int64 ckmlepnegol = 14;
	repeated string imjhjmhaipc = 15;
	string mpaekobkjkh = 16;
}

message NLFLFKMOECB {
	enum BFNLEOHKOAN {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_POKEMON_NOT_IN_INVENTORY = 4;
		ERROR_NOT_ELIGIBLE_LEAGUE = 5;
		ERROR_ALREADY_TIMEDOUT = 6;
		ERROR_ALREADY_CANCELLED = 7;
		ERROR_ACCESS_DENIED = 8;
		ERROR_ALREADY_DECLINED = 9;
	}

	BFNLEOHKOAN hhkodmoefol = 1;
	JDHOCBHIAMN bniaebpgnal = 2;
}

message NLKJGDMLNBM {
	message DCJLDCGFJBH {
		int32 hpdpkdppolo = 1;
		int32 gaobojkgidd = 2;
		int32 nhphofpfnoe = 3;
		int32 hkfjopfpmeo = 4;
		float ocglbdlmoco = 5;
	}

	LMMLJBEDMBD apgnpjbapog = 1;
	IDJMLGDHNHI ldccnikjabe = 2;
	float pcccbbmbmkm = 3;
	string oliokdkelhb = 4;
	int32 ljiipjnjmjm = 5;
	int32 ccmakpidfhl = 6;
	DCJLDCGFJBH emfohfdimjb = 7;
}

message NLNPGCIIIMD {
	AOGNGKLAGMF hbfphpkipgh = 1;
	GBCIHGGJMLI joobkfellmc = 2;
	int32 jpdekcllgjf = 3;
	int32 jmaeiblkcia = 4;
	int32 nbangammjjo = 5;
	int64 lpfggpedood = 6;
}

message NMFMCABJPHG {
	float dgmmciifggg = 1;
	float eimgkidpmlc = 2;
	float nbpfkjcnjng = 3;
	float ckdfjeeglhb = 4;
	float pheiflphfom = 5;
	float abgpcgphali = 6;
	float iohhkbigejj = 7;
	float mdamlgnofmd = 8;
	float bmgncldgobo = 9;
	int32 kfnbommiemp = 10;
	float mpnccmmlfji = 11;
	float nicjalglijf = 12;
	float lpnofmhakgb = 13;
	float bdejmldhpfo = 14;
	float igfimeijjbd = 15;
	HJPLDJFIEPI kigcnpkcake = 16;
	KJEFONPBKCL mfjanaieoag = 17;
	float kjcchoiimng = 18;
	float efmibchbfkd = 19;
	float hbilpcaeppl = 20;
	float ibdigihabkb = 21;
	int32 idaeljjkehk = 22;
	int32 ccmoacphbjb = 23;
	int32 ljpbhdbekoj = 24;
	int32 debmgdgnmno = 25;
	int32 hckkdheldfh = 26;
	int32 cefmhiplckl = 27;
	int32 fmboiejokga = 28;
	int32 gpmgfammppd = 29;
	float ejjkibjlamh = 30;
	float mobakbjcbld = 31;
	float ikebajciopd = 32;
	repeated NJMFCLNADGI jgfkgdpdmep = 35;
	bool caehcpdliol = 36;
	OHKMACCJLMG jgdbmpknkjn = 38;
	CGFCDJPNIHG bnmlndpmdca = 39;
	int32 pilemmanngf = 40;
}

message NMILENBBBIB {
	repeated int32 cgllnofgfag = 1;
	repeated int32 ccmlgmaakok = 2;
	repeated int32 mmpdcklpamf = 3;
	repeated int32 felmfagakpk = 4;
}

message NMNDIPIFJKD {
	int32 iohegophpfa = 1;
	int32 oihpgkgoikl = 2;
	string hldnijilbaf = 3;
}

message NMPNHJKHDIA {
}

message NNEEDJLDFDI {
	bool plmpdlcoemi = 1;
	bool hejmnpognic = 2;
	bool eamodemppbg = 3;
	bool fmefkcejhcg = 4;
}

message NNEGJCOCFOP {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	MIHEHLCMGLI.JHCLPEIEIJL hhkodmoefol = 3;
	PPMOEEBFKKG bniaebpgnal = 4;
}

message NNFAMMCGNIB {
	int32 ajkfgidlchb = 3;
	int32 beadgmocfbh = 4;
	repeated MIGOIFDBBLO foakaifaplh = 5;
	int32 habmdkncako = 6;
}

message NNGBBEPJIDA {
	repeated int32 gdghkinahdb = 1;
	repeated ELEGOIEBFIM nchjmfampac = 2;
	int64 ampgobbbigj = 3;
	int64 ldmomnoaeof = 4;
	int64 cagknkfkohk = 5;
	int64 nfpgkmhfapp = 6;
	string fjegajkmdcb = 8;
	string bggaflamine = 9;
	bool cljhadgjijo = 10;
	int64 ckiakhbffmf = 11;
	int32 hcbbknlppog = 12;
	GameplayWeatherProto.WeatherCondition icnjpmpgnnk = 13;
	repeated string lofpgnjeeop = 14;
}

message NNIGHOLPDLI {
	enum JMNFKAMPOCF {
		UNSET = 0;
		SUCCESS = 1;
		NO_ENCOUNTER_AVAILABLE = 2;
		POKEMON_INVENTORY_FULL = 3;
		ERROR_UNKNOWN = 4;
	}

	JMNFKAMPOCF hhkodmoefol = 1;
	NHLCGNMFNOM piddpkfgmod = 2;
	DCMHMGIGNLJ ihnhoapaepl = 3;
	BFABHCMKGCB kkagkkighdm = 4;
	int32 mhigdejohkh = 5;
}

message NOAKNAGOMFI {
	NHLCGNMFNOM piddpkfgmod = 1;
	JNPCNHMKDMB jnpheagceai = 2;
	NHLCGNMFNOM ahmlcgifakb = 3;
}

message NOEENCDADGA {
	enum ONLGPPLPNGP {
		SUCCESS = 0;
		MALFORMED = 1;
		EXPIRED = 2;
	}

	ONLGPPLPNGP llponloodfk = 1;
}

message NOOMJLPBOKA {
}

message NPANMHAOFMF {
	string edabjienhim = 1;
	string doblngnlada = 2;
	string gpchpipjlii = 3;
	string bhnognndpoi = 4;
	string jpkgakblhhn = 5;
	string egdbhfjelob = 6;
	string ibfgniakdoe = 7;
}

message NPDCAEKNKAJ {
	enum KFPKDGPHNFE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_QUEST_NOT_FOUND = 2;
		ERROR_NO_DIALOG = 3;
	}

	KFPKDGPHNFE llponloodfk = 1;
}

message NPKKHCFAMHJ {
	int32 hbmmfopjbce = 1;
	HKFBKGFPFCA ipcldpmlhbj = 2;
}

message NamedMapSettings {
	string name = 1;
	GmmSettings gmm_settings = 2;
}

message NewInboxMessage {
}

message NewsPageTelemetry {
	NewsPageTelemetryIds news_page_click_id = 1;
}

message NianticProfileTelemetry {
	enum NianticProfileTelemetryIds {
		UNDEFINED = 0;
		OPEN_MY_PROFILE = 1;
		OPEN_FRIEND_PROFILE = 2;
	}

	NianticProfileTelemetryIds niantic_profile_telemetry_id = 1;
}

message NicknamePokemonTelemetry {
	PokemonTelemetry pokemon = 1;
	string nickname = 2;
}

message NotifyContactListFriendsRequest {
	int64 notify_timestamp_ms = 1;
}

message NotifyContactListFriendsResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_ALREADY_SENT = 3;
	}

	Result result = 1;
}

message OABJGGDCBMM {
	uint64 pkljdiaplkc = 1;
	string komegjnnkib = 2;
}

message OACPBLNLBKM {
	enum GOJNEONPCFF {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
	}

	GOJNEONPCFF llponloodfk = 1;
	KANPDIBKAEP negeoiigdpk = 2;
	int32 ceebnhkhmkp = 3;
	int32 ghnmeaaiapf = 4;
	string lbcoedmpjff = 5;
	repeated string jiohlfddcnk = 6;
}

message OAEBHHGMEPD {
	repeated NKDPOODGENC.OHPOBKKLMHO bagjhbklioc = 1;
}

message OAHEFLEBFNK {
	enum IJHBNGKLGKD {
		UNSET = 0;
		FOUND = 1;
		NEARBY = 2;
		OUT_OF_RANGE = 3;
		ALREADY_CAUGHT = 4;
		NOT_AVAILABLE = 5;
	}

	IJHBNGKLGKD hhkodmoefol = 1;
	int32 mjmaeleiiob = 2;
	string nbpjjkhmncc = 3;
}

message OAJHJHDNFBN {
	enum IJEFOCMJEEC {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	IJEFOCMJEEC llponloodfk = 1;
	string ipioohaepnm = 2;
}

message OBBKDENPCOH {
	bool mlenihpnhen = 1;
	repeated string dapjmjbdkfn = 2;
}

message OBPBNKCOEFC {
	enum KNPFLCCNGEF {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_ALREADY_HAS_TUTORIAL_EGG = 2;
		ERROR_FAILED_TO_ADD_EGG = 3;
		ERROR_NOT_V2_FLOW = 4;
	}

	KNPFLCCNGEF hhkodmoefol = 1;
}

message OBPMCJJLNJA {
}

message OCCOFDCHDFJ {
	int32 blhabfdhobn = 1;
	float hgobedphmmj = 2;
	uint64 pkljdiaplkc = 3;
	string gfepbfmmdcc = 4;
	string omejlbelfjm = 5;
	IBGGKKNEKOA nnnmmlpnchp = 6;
}

message OCDDBOELMMF {
	NECCKHDNPKM pgdgeobanmh = 1;
	int32 jgdpdgjemkd = 2;
	repeated uint64 iepbdcjdpfk = 3;
	int64 djlhjjcekee = 4;
}

message OCIFIIGACHF {
	NIHBJDDHHNM jfaagkakakb = 1;
	repeated ELEGOIEBFIM ljnppafippg = 2;
	repeated int32 aloohjdlpfj = 3;
	int64 cboghllieon = 4;
	int32 bhlfcechdpo = 5;
	PHKNAKANAEL kgbppjkpedi = 6;
	repeated GJHNNHNENIM ecdgfdcpibo = 7;
	repeated PAEHCJKJPLP fbaolkdmhli = 8;
	repeated NAAGKBHDDIL abjpmkjliog = 9;
	repeated DMPNAOEDHIF dpmplnjinki = 10;
	repeated PAEHCJKJPLP nagaiflcbho = 11;
	int64 ocmheaihihe = 12;
	BHANAENDPCM jkiipkacpkd = 13;
}

message OCJDEIKFKJB {
	int32 epongcjlgki = 1;
}

message OCOFAEOLDFH {
	EJMIOBEDOHP mebcjpidnjm = 1;
	repeated KMHCCPJEION lgjopanebao = 2;
}

message ODHPGPPOFFI {
	enum HIKJFHODKAE {
		UNSET = 0;
		SUCCESS = 1;
		NO_NEWS_FOUND = 2;
	}

	HIKJFHODKAE hhkodmoefol = 1;
	MICFGODEFAE klehcacanip = 2;
}

message ODIIOABFMDJ {
	float dcilplfocan = 1;
	float labkolgkgco = 2;
	float knnfkcjapha = 3;
}

message ODMPGICJNFB {
	float fmjkpaieijn = 1;
	float pmldfennokj = 2;
	repeated FOALJFDFEJF.MCCJAMOLHDC ifjenlhajbb = 3;
	OMCCLHKGJGC iiaaeobhjll = 4;
	int64 dmcmcojppma = 5;
	int64 hglbapgippg = 6;
	bool eafpipomhla = 7;
}

message OEBJAFJHHIF {
	enum MMMDKBAFHOL {
		UNSET = 0;
		SUCCESS = 1;
	}

	MMMDKBAFHOL hhkodmoefol = 1;
	int32 bemcjldghlf = 2;
}

message OEFBGCJNKAI {
	enum FEEADAPLNCA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INSUFFICIENT_FUNDS = 3;
		ERROR_POKEMON_DEPLOYED = 4;
		ERROR_POKEMON_NOT_FOUND = 5;
		ERROR_POKEMON_NOT_SHADOW = 6;
	}

	FEEADAPLNCA llponloodfk = 1;
	NHLCGNMFNOM gledndgoacl = 2;
}

message OEFHKKIAFHD {
	enum ILNMIDHIPGP {
		UNSET = 0;
		SUCCESS = 1;
		IN_COOL_DOWN = 2;
		NO_BALLOON_AVAILABLE = 3;
		DISABLED = 4;
		EQUIPPED_ITEM_INVALID = 5;
		SUCCESS_BALLOON_ALREADY_EXISTS = 6;
	}

	ILNMIDHIPGP llponloodfk = 1;
	PFMPOMPNJNP pplgileafni = 2;
}

message OEFNBCPAHHB {
	uint64 ghadpgjcoel = 1;
	string blpnlkdpbla = 2;
	string hianpamgdph = 3;
	string gfepbfmmdcc = 4;
	double kdfjiijebjg = 5;
	double agndimhpnjk = 6;
	int64 ilcelenmoki = 7;
	int64 ibanadhajai = 8;
	int64 dmbednlijfm = 9;
}

message OENHIOKELCC {
	FJIHIBMJOKK ebkpdjhogdo = 1;
	int64 bfigigdalmk = 2;
}

message OEOCFMAELMK {
	bool cecjedgihdm = 1;
}

message OFFIAAIDNDD {
	NABADAFLIPI hkpghaalhog = 1;
	repeated JLDJJCPLJLP ikckkafcfhl = 2;
	string bebimkogphh = 3;
	string mgajgldjfcb = 4;
	int64 pjfaeckamld = 5;
	bool felbonfpjil = 6;
	int32 dopoogoolfd = 7;
}

message OFGNGLJIHED {
	int32 dleaoabojcc = 1;
	int32 cngapecejdf = 2;
	int64 jiiljjokdom = 3;
	int64 pjokbfcchhf = 4;
	int64 cenmmljjihd = 5;
}

message OFIICCAFHPC {
	string ohjjpkccmcc = 1;
	string nkffpcdjbmg = 2;
	string aibghjbfdco = 3;
	string jgddphbdflm = 4;
}

message OFMCIOLCLHL {
	string oaebkkifhhl = 1;
	string oaecmhjobag = 2;
	bool dlnjaioiicl = 3;
}

message OFMGHCANDBK {
	repeated string ickfpogdkoc = 1;
}

message OGCBIFJINJG {
	int64 bajolmeabfd = 1;
	int64 lpddlokhgnh = 2;
	GKLNKCNCPHP hklhffeencf = 3;
}

message OGFIOGCONNP {
}

message OGICPCNNEEK {
	repeated PMNHFFJBFBC gnkandbokgp = 1;
}

message OGLLHANMMGE {
}

message OHHJGCNHOFN {
	string calpffkbihe = 1;
}

message OHIGOFFDPMH {
	enum HKADHLDAIKA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_ITEM_TYPE = 2;
		ERROR_STARDUST_BOOST_ALREADY_ACTIVE = 3;
		ERROR_NO_ITEMS_REMAINING = 4;
		ERROR_LOCATION_UNSET = 5;
	}

	HKADHLDAIKA hhkodmoefol = 1;
	HCLDOPDIFHO pncjajihjhk = 2;
}

message OHKMACCJLMG {
	int32 hgpdnbinoec = 1;
	bool plmpdlcoemi = 2;
}

message OHLBDDFLAJB {
	int32 bfnclmccing = 1;
	int32 bmlfjjmfmei = 2;
}

message OHNNAANLAHN {
	string mkdlflaoaki = 1;
	string iolbgobapjn = 2;
}

message OIHDBJLBCPP {
}

message OIHHMHJMIKG {
	DCAECPGGPON ogkohaojlcc = 1;
	int32 jeaggaghjic = 2;
	int64 pafmggabgbp = 3;
}

message OIODPNENHPF {
	repeated FLBDBALKHCH fbijdhjflgf = 1;
}

message OJCKMIHPCIA {
}

message OJGLKFGNEFK {
	int64 ijjfnkfgiii = 1;
	float knpidmombbd = 2;
	float hmmhbkjehlp = 3;
	int32 akmlilfcmpg = 4;
	bool igbmoeajpjh = 5;
	int32 bpadipoicmh = 6;
	bool fihkoapfjld = 7;
	bool oejikgdcmcf = 8;
	int32 ljjnjipfbne = 9;
	int32 gemophkafab = 10;
	bool agcbjimdlci = 11;
}

message OJKLEMHLDMA {
	string pofcpnikfel = 1;
	string cpmfkoedaek = 2;
	int32 ckoanjblkno = 3;
	int32 ojcllackebh = 4;
	bool hcfijcjebld = 5;
}

message OJNDMKPEHHM {
	int32 bijnkihoffe = 1;
	repeated int32 kobdlgiefli = 2;
	int32 efabkpoojhj = 3;
	repeated string bgbmfjijghb = 4;
	int64 mlbpmkbdmko = 5;
	bool bbagcoamfnh = 6;
	bool behcbcejoih = 7;
}

message OJNEGPGHBAO {
	enum NOFKOEOFBJA {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_BAG_FULL = 3;
		ERROR_GIFT_REDEEMED = 4;
	}

	NOFKOEOFBJA hhkodmoefol = 1;
	PAEHCJKJPLP acbpiimiphk = 2;
}

message OKNKHIIENKO {
	enum DBBBNHCJCED {
		UNSET = 0;
		SUCCESS = 1;
		POKEMON_DEPLOYED = 2;
		FAILED = 3;
		ERROR_POKEMON_IS_EGG = 4;
		ERROR_POKEMON_IS_BUDDY = 5;
	}

	DBBBNHCJCED llponloodfk = 1;
	int32 jhbbfkcbjlo = 2;
	int32 ghnhlkpncig = 3;
	map<int32, int32> dabfcdbomhd = 4;
}

message OKPBNAGPEBG {
	enum JJNNMIAKACC {
		UNSET = 0;
		SUCCESS = 1;
		PHOTOBOMB_NOT_AVAILABLE = 2;
		ENCOUNTER_ALREADY_COMPLETED = 3;
		ERROR_UNKNOWN = 4;
	}

	JJNNMIAKACC llponloodfk = 1;
	PCNMLNDPOML igfdgcikjem = 2;
	double ddpmccoobod = 3;
	double jcolbanhgpk = 4;
	string komegjnnkib = 5;
	uint64 pkljdiaplkc = 6;
	int64 ncbidhhllff = 7;
	IBGGKKNEKOA nnnmmlpnchp = 8;
}

message OLBJHJGBGFK {
	string godfillmpmn = 1;
	int32 neifnabaggg = 2;
	repeated NHLCGNMFNOM piddpkfgmod = 3;
	string edabjienhim = 4;
	repeated string mpaekobkjkh = 5;
	int32 dkkhmiaglej = 6;
	int32 ijjgponbajg = 7;
	int32 agedjchhpkd = 8;
	CLDFDLHPJDE iepipmjapkb = 9;
	double chhgiikbnma = 10;
	double flaphjheime = 11;
	string gpchpipjlii = 12;
	repeated PHEHLCHCFBF npceiblfacj = 13;
	bool dioedpedoif = 14;
	string epheklamajk = 15;
	BKLHBIHALGD bighegammkk = 16;
	repeated string nhciomkdeid = 17;
	string kdhocdmlffi = 18;
	LNBENCBGFDF llmngmeeapb = 19;
	string nkdijnnjonk = 20;
	string ohfllediidn = 21;
	int32 jejpkcdpnhg = 22;
	int32 emnlnalikkc = 23;
	int64 joghfanihmi = 24;
	int64 agkanflkpfe = 25;
}

message OLJBFDHAOKG {
	repeated CLIEJCCDICE bgphjbdjplf = 1;
}

message OMEHEGPJEBD {
	string nbpjjkhmncc = 1;
	int64 pkljdiaplkc = 2;
	double oedjmlkfadc = 3;
	double ohdbdabebkk = 4;
	ECBJDBHKDAE iphfojfkcnl = 5;
	double ijnamcgedif = 6;
	double mefbjkabloe = 7;
}

message OMHKOCDGMHI {
	enum PMFKHDPNENE {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALD_NUMBER_ATTACKING_POKEMON_IDS = 2;
	}

	PMFKHDPNENE hhkodmoefol = 1;
	LKJIPKPOENA mmapjdfoeej = 2;
	PAEHCJKJPLP acbpiimiphk = 3;
	int32 fkepfjjhoch = 4;
}

message OMJEACDEGEN {
	enum DFAAGEMDGCH {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	DFAAGEMDGCH llponloodfk = 1;
}

message OMPKDFLHKOK {
	map<string, string> mjkffbkbfnb = 1;
}

message ONBPMCNHIHB {
	bool plmpdlcoemi = 1;
	bool jjgkmmjhidj = 2;
	bool fihkoapfjld = 3;
	bool oejikgdcmcf = 4;
}

message ONIHKNMBJCO {
	enum JEMNMOIENNO {
		UNSET = 0;
		SUCCESS = 1;
		CODENAME_NOT_AVAILABLE = 2;
		CODENAME_NOT_VALID = 3;
		CURRENT_OWNER = 4;
		CODENAME_CHANGE_NOT_ALLOWED = 5;
	}

	string bebimkogphh = 1;
	string jhldodapbpo = 2;
	bool mdoijhfacda = 3;
	JEMNMOIENNO llponloodfk = 4;
	EHIECBBPACE doadjpohlbg = 5;
	repeated string jhbmcjjeakp = 6;
}

message OOAKMOHGDOE {
	int32 faimamngeoe = 1;
}

message OOBOINDKCDH {
	OGMPIKOPPBG njjhleanche = 1;
	float mijmkbigbcm = 2;
	float cpnnbpcdbkk = 3;
	float bcgcciephhj = 4;
}

message OOEFMODIHFC {
	enum HPFDIIGLFHO {
		UNSET = 0;
		SUCCESS = 1;
	}

	HPFDIIGLFHO hhkodmoefol = 1;
	bool jechfnofahm = 2;
	repeated OOFDHEHENPH ojgckfiagpm = 3;
	repeated OOFDHEHENPH ipjoilonklk = 4;
	int32 mcladekkgmh = 5;
	repeated IPEOPNMEGPI hebchobifff = 6;
	bool pdaebghpkdb = 7;
	LLJHOLGBOOO fncfgnfheob = 8;
}

message OOELKNDMLGC {
	double icnndjclaef = 1;
	double ogmopfkhcpa = 2;
	MDKGHCMCNMF jlpegfaaibo = 3;
}

message OOFDHEHENPH {
	BFABHCMKGCB acifngkjfjh = 1;
	int32 fjdhldkllcc = 2;
	bool oeelmhimaad = 3;
}

message OOLNBAGGMME {
	int32 lgncdnccagi = 1;
	int32 feikfoemoca = 2;
	IDJMLGDHNHI oalonmbmdbi = 3;
	IDJMLGDHNHI jdbdhjigpla = 4;
	string jccjpokpejh = 5;
	uint64 pkljdiaplkc = 6;
}

message OOMIGMFPAID {
	bool allmgnnjbfo = 1;
}

message OONFHGDBFBC {
	string ahcgfgkkkdn = 1;
	string dileendfikh = 2;
	repeated BKMJKOAKFIM enimilkdmhc = 3;
	BKMJKOAKFIM pkmkkebhfcc = 4;
	double icnndjclaef = 5;
	double ogmopfkhcpa = 6;
	int64 ehmhemllaog = 7;
}

message OOPHDOEABGM {
	LDKENAMCIPK.NFOKKLIKGJA llponloodfk = 1;
	int64 clolhfeopbf = 2;
}

message OPAFGJPFCNH {
	string olfeleebkpn = 1;
	KMHCCPJEION.LGFABOIJPEN.MHEKLBNOJBN pdeokhohkdn = 2;
}

message OPGFDDNNKMF {
	double chhgiikbnma = 2;
	double flaphjheime = 3;
}

message OPHGLHPHJHJ {
	string igiphkghjki = 1;
	BFABHCMKGCB acifngkjfjh = 2;
	EDKEANBNKIH haekpimdkdc = 4;
}

message OPINACMJBIJ {
	message EBNIJDNIANL {
		string ooahcaffiec = 1;
		string konhpkeikce = 2;
	}

	repeated EBNIJDNIANL objdnjdaacd = 1;
}

message OnboardingTelemetry {
	OnboardingPathIds onboarding_path = 1;
	OnboardingEventIds event_id = 2;
	int32 data = 3;
	string conversation = 4;
	OnboardingArStatus ar_status = 5;
}

message OptOutProto {
	repeated string categories = 1;
}

message OutgoingFriendInviteDisplayProto {
	OutgoingFriendInviteProto invite = 1;
	PlayerSummaryProto player = 2;
}

message OutgoingFriendInviteProto {
	enum Status {
		UNSET = 0;
		PENDING = 1;
		CANCELLED = 2;
		DECLINED = 3;
	}

	Status status = 1;
	string player_id = 2;
	int64 created_ms = 3;
	string full_name = 4;
	string nia_account_id = 5;
}

message PAEHCJKJPLP {
	repeated IPEOPNMEGPI nfklimhbdgj = 1;
}

message PAFGFALCEAD {
	int32 icobichodpg = 1;
	bool nchdblllnom = 2;
}

message PAFGGEBNACL {
	double afaefdbhijh = 1;
	int32 neiejlcipmp = 2;
	double phlpkkephio = 3;
	int64 ibhlcknfbaa = 4;
}

message PAKJDBKLCPM {
	int32 hncmdndfdmf = 1;
	repeated string emblphbmccl = 2;
	bytes kfbafemenif = 3;
}

message PAONEICNKNF {
	repeated uint64 aaiobpipigj = 1;
	repeated int64 fcjcolgjcfh = 2;
	double oedjmlkfadc = 3;
	double ohdbdabebkk = 4;
}

message PBAHNKEJLCA {
	BFABHCMKGCB acifngkjfjh = 1;
	uint64 igfdgcikjem = 2;
	bool fokepnmdmgm = 3;
	LMMLJBEDMBD edmkeokkild = 4;
}

message PBAIBDONLJH {
	int64 pkljdiaplkc = 1;
}

message PBFHCLIKLME {
	string ljknacljjeb = 1;
}

message PBFOCNBCDCK {
	MBJGAPHFDHC neifnabaggg = 1;
}

message PBHIBLENFNN {
	bool gooadobgppi = 1;
}

message PBLNEPEBOOA {
	enum KIJLJFCDLLD {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_LEVEL_TOO_LOW = 2;
	}

	KIJLJFCDLLD hhkodmoefol = 1;
	repeated CLBPAJOPOEH gbhakbakmnm = 2;
	bool fahllcglhcb = 3;
}

message PCAMDKHBNGN {
	double nfkbjcnbbhi = 1;
	string dpkpakbhapp = 2;
}

message PCIDIODOOHF {
}

message PDDKFOEOCNI {
	NKDPOODGENC.OHPOBKKLMHO eonalmmgobe = 1;
}

message PDJAMOCJAAA {
}

message PDJIPBFNCIH {
	repeated uint64 iepbdcjdpfk = 1;
	string ppdgmncjohj = 2;
	int64 djlhjjcekee = 3;
}

message PDJMKDKBADI {
	double hjepienagkp = 1;
	double dgpglnnbdil = 2;
	double lbfjbkkacaa = 3;
	float edlbbmaicic = 4;
	float omhmmjfnpha = 5;
	float eiedffhgpjl = 6;
	string jgckbbgehnk = 7;
	int32 bdnganbnnmi = 8;
	bool jjdlfmdcocj = 9;
	float nhcgkcjmlbm = 10;
	string npokmgobilf = 11;
	bool abcigellhbb = 12;
}

message PEEGIIGIAME {
	message ADAOFMGMBKH {
		int32 mhmgmobcnji = 1;
		KOALJFNPGBK hiicikpehkj = 2;
		repeated DCAECPGGPON ibejnjjfamn = 3;
	}

	repeated ADAOFMGMBKH ooajplfloln = 1;
}

message PEFCPDOBMAK {
	repeated FOKDNDBFMHJ gchehaplefh = 1;
	repeated int64 ijbkmdlcjmc = 2;
	int64 fdinejminep = 3;
	int64 mdbpodinjag = 4;
	string bigmchmhlpg = 5;
}

message PEMMCOFGLGC {
	GKOJINOCBHK jdoolomdhcj = 1;
	int32 hpddfnnbnmi = 2;
	PCNMLNDPOML jlfaceahdjj = 3;
}

message PFBJBODIBMH {
	int32 chhakhamlam = 1;
	int32 akioaaijeak = 2;
}

message PFFLKCBDFCF {
	NKDPOODGENC.GBKCKHAINCA gghaofibkea = 1;
}

message PFGDKCPLHPD {
	repeated PCNMLNDPOML plncdpkcoml = 1;
}

message PFGIAPAJEGI {
	enum IFBDKJKFOAI {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
	}

	IFBDKJKFOAI llponloodfk = 1;
}

message PFIANKPDNLB {
	enum PMLMJFFGGPC {
		NO_EXCEPTION = 0;
	}

	int32 eeiecpioghn = 1;
	PMLMJFFGGPC ohhklmidagh = 2;
}

message PFMPOMPNJNP {
	enum MADJBBDECJD {
		ROCKET = 0;
		ROCKET_B = 1;
	}

	MADJBBDECJD ldccnikjabe = 1;
	CMCFEKKOLBJ ehnoinnaann = 2;
}

message PFNJFDBEKAK {
	enum JKIGDHOPEOB {
		ENCOUNTER_ERROR = 0;
		ENCOUNTER_SUCCESS = 1;
		ENCOUNTER_NOT_FOUND = 2;
		ENCOUNTER_CLOSED = 3;
		ENCOUNTER_POKEMON_FLED = 4;
		ENCOUNTER_NOT_IN_RANGE = 5;
		ENCOUNTER_ALREADY_HAPPENED = 6;
		POKEMON_INVENTORY_FULL = 7;
	}

	enum PNIKIPCFCGB {
		PARK = 0;
		DESERT = 1;
	}

	NCCAGPGHANA piddpkfgmod = 1;
	PNIKIPCFCGB phoackmbnbb = 2;
	JKIGDHOPEOB llponloodfk = 3;
	DCMHMGIGNLJ ihnhoapaepl = 4;
	BFABHCMKGCB kkagkkighdm = 5;
	int32 mhigdejohkh = 6;
}

message PGBMMOAHKDF {
	enum CNIANMDPCJJ {
		UNSET = 0;
		ACTIVE = 1;
		UNLOCKED = 2;
	}

	FFKJOOMBLDO eibnojbkfkk = 1;
	CNIANMDPCJJ llponloodfk = 2;
	int32 hldednomfjh = 3;
}

message PGCDJCOLNHF {
	float lhaolbcbeid = 1;
	int32 okkjolhkcai = 2;
}

message PGFBOGCMGHJ {
}

message PGFFOJDBEOF {
	int32 nmajeiohpji = 1;
	int32 pajgfefnhba = 2;
	repeated float ohjjjgfhjgi = 3;
	repeated float hgcobhpbnnk = 4;
}

message PGJLEPEIDEI {
	enum AGPFILKPMNE {
		UNSET = 0;
		SUCCESSFULLY_CANCELLED = 1;
		ERROR_ALREADY_MATCHED = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
		ERROR_QUEUE_NOT_FOUND = 4;
	}

	AGPFILKPMNE hhkodmoefol = 1;
}

message PGLLLFPLPPK {
	GKOJINOCBHK jdoolomdhcj = 1;
	int32 hoanpjoekbf = 2;
	repeated DAONAJEMBHP ecpmnemaflg = 3;
	int32 afalhlfjafi = 4;
}

message PGMLNDOAFLL {
	float nlacbmlnbnd = 1;
	float cddbonpmkge = 2;
	int32 dgadjmgdgfp = 3;
	int32 pnlbbohhdjj = 4;
	float hmpdacaefbk = 5;
}

message PGOIBEPLELO {
	enum NNDDFPIMOGE {
		UNSET = 0;
		SUCCESS = 1;
		COOLDOWN_ACTIVE = 2;
		NOT_QUALIFIED = 3;
	}

	NNDDFPIMOGE hhkodmoefol = 1;
	OIHHMHJMIKG egojdhclldn = 2;
}

message PGPFHAIMLNH {
	enum JNPCCKPJKOA {
		UNSET_RAID_STAT = 0;
		FINAL_STRIKE_PLAYER = 1;
		DAMAGE_DEALT_PLAYER = 2;
		REMOTE_DISTANCE_PLAYER = 4;
		USE_MEGA_EVO_PLAYER = 5;
		USE_BUDDY_PLAYER = 6;
		CUSTOMIZE_AVATAR_PLAYER = 7;
		NUM_FRIENDS_IN_RAID_PLAYER = 8;
		RECENT_WALKING_DISTANCE_PLAYER = 10;
		NUM_CHARGED_ATTACKS_PLAYER = 11;
		SURVIVAL_DURATION_POKEMON = 15;
		POKEMON_HEIGHT_POKEMON = 22;
	}

	JNPCCKPJKOA ieobcbiblkk = 1;
	JNPCNHMKDMB ekchioebfim = 3;
	double ochjfobmcbe = 4;
	EPIFPKBJMIL piddpkfgmod = 5;
	bool gijobegnkmb = 6;
	int32 knleifffbdd = 7;
}

message PHEFFICABAI {
	enum AMGLHNLMDCL {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_COMBAT_NOT_FOUND = 2;
		ERROR_INVALID_COMBAT_STATE = 3;
		ERROR_PLAYER_NOT_IN_COMBAT = 4;
	}

	AMGLHNLMDCL hhkodmoefol = 1;
	JGHBGMKOLJK kanajhkhmhb = 2;
}

message PHEHLCHCFBF {
	BFABHCMKGCB fgajkiejlgl = 1;
	int64 iobgcgmbkod = 2;
	string ahdjdodckml = 3;
}

message PHJEENCEHBB {
	GNPJGEDGNAF bhmdkemneoi = 1;
	int32 gamknmibogn = 2;
	float enbdhjfbodc = 3;
}

message PHKNAKANAEL {
	MEIOBOCAPJH jimcojleikf = 1;
	repeated ANFMPHJKPBJ nbackpkggmk = 2;
}

message PHNHGJIJDFC {
	PAEHCJKJPLP acbpiimiphk = 1;
}

message PHNMAHKHINE {
}

message PIDMOKGJKOO {
	string ljknacljjeb = 1;
}

message PJHMIONLPBE {
	int32 anlepkoecfn = 1;
	ADELCOJBGFA bjlloamgphe = 2;
}

message PJICJPPOCOI {
	int64 aeaajncnogj = 1;
	int32 ebcgkoeohnj = 2;
	int32 npgcpkplogd = 3;
	int32 cbihfdeekgn = 4;
}

message PJKPDPFAKFB {
	enum FNCNHAKDOGB {
		UNSET = 0;
		EGG_INCUBATORS = 1;
		BUDDY_STATS = 2;
	}

	FNCNHAKDOGB kckjjffepeh = 1;
	repeated FNCNHAKDOGB kgmhahfplce = 2;
}

message PJLBLLIIDMG {
	enum NBGEPKLBAHL {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_GYM_NOT_FOUND = 2;
		ERROR_BATTLE_NOT_FOUND = 3;
		ERROR_INVALID_ATTACK_ACTIONS = 4;
		ERROR_NOT_PART_OF_BATTLE = 5;
		ERROR_BATTLE_ID_NOT_RAID = 6;
	}

	NBGEPKLBAHL hhkodmoefol = 1;
	IJKFIEDNELI gaalacimldk = 2;
	FBPJJHIIEEN kijlbkjoeen = 3;
	FEJOFJDIKPO dcjoeebdaec = 4;
}

message PJPCFIEPNOF {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	CLANJDIEDLA.PEKHLDKLAIH hhkodmoefol = 3;
	FNMDDHBCCFB kanajhkhmhb = 4;
}

message PJPHKJOCJJL {
	enum FJLCIAIAOGG {
		UNSET_LABEL = 0;
		DEFAULT = 1;
		OWNED = 2;
		FEATURED = 3;
		NEW = 4;
		SALE = 5;
		PURCHASABLE = 6;
		UNLOCKABLE = 7;
		VIEWED = 8;
		LOCKED_PURCHASABLE = 9;
	}

	enum IFIIEGJOAIC {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	message LPMLFLLKNIM {
		string hdhelgjcbfp = 1;
		repeated FJLCIAIAOGG liapbmpdmkj = 2;
	}

	IFIIEGJOAIC hhkodmoefol = 1;
	repeated LPMLFLLKNIM gkepeeojflm = 2;
}

message PKEKDHLGPDG {
	enum FEHMEKFJDJJ {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_ENOUGH_COPIES = 2;
		ERROR_CANNOT_RECYCLE_INCUBATORS = 3;
	}

	FEHMEKFJDJJ hhkodmoefol = 1;
	int32 acgddinhbgp = 2;
}

message PKELEFINKJM {
	uint64 igfdgcikjem = 1;
	repeated uint64 jokgfiibhhn = 2;
}

message PKFBNCCEGMJ {
	string ahcgfgkkkdn = 1;
	repeated uint64 iepbdcjdpfk = 2;
	uint64 pkgeddilfgb = 3;
	double icnndjclaef = 4;
	double ogmopfkhcpa = 5;
}

message PKHBHFELMEE {
	enum ACBEBOJODLM {
		NONE_MAP_EXPLORE_STATE = 0;
		GYM_ROOT_COMPLETE = 1;
	}

	enum BELFLBDBEOK {
		NONE_RAID_LOBBY_STATE = 0;
		ENTER_RAID_LOBBY_STATE = 1;
		EXIT_RAID_LOBBY_STATE = 2;
		CREATE_LOBBY = 3;
		CREATE_LOBBY_FOR_REAL = 4;
		START_RAID_BATTLE_STATE = 5;
		CANCEL_RAID_BATTLE_TRANSITION = 6;
	}

	enum IJJNKDDAABJ {
		NONE_RAID_RESOLVE_STATE = 0;
		ENTER_RAID_RESOLVE_STATE = 1;
		EXIT_RAID_RESOLVE_STATE = 2;
		INIT_RAID_RESOLVE_STATE = 3;
	}

	enum JIDIMBIHGKD {
		NONE_ENCOUNTER_STATE = 0;
		SETUP_ENCOUNTER = 1;
		BEGIN_ENCOUNTER_APPROACH = 2;
		ENCOUNTER_STATE_COMPLETE = 3;
		EXIT_ENCOUNTER_STATE = 4;
	}

	enum KMIELIPIKBM {
		NONE_RAID_BATTLE_STATE = 0;
		ENTER_RAID_BATTLE_STATE = 1;
		EXIT_RAID_BATTLE_STATE = 2;
		OBSERVE_BATTLE_FRAMES = 3;
		START_RAID_BATTLE = 4;
		START_RAID_BATTLE_WHEN_READY = 5;
		END_BATTLE_WHEN_READY = 6;
	}

	enum LPDPALOHJAF {
		NONE_RAID_STATE = 0;
		EXIT_GYM_RAID_STATE = 1;
	}

	enum MAGECPJDCLI {
		NONE_RAID_RESOLVE_UI_CONTROLLER = 0;
		INIT_RAID_RESOLVE_UI_CONTROLLER = 1;
		CLOSE_RAID_RESOLVE_UI_CONTROLLER = 2;
	}

	enum MJEEIMJFKCH {
		NONE_GYM_GYM_ROOT_CONTROLLER = 0;
		EXIT_GYM_GYM_ROOT_CONTROLLER = 1;
	}

	oneof OMLFPKJIOIO {
		MJEEIMJFKCH gym_root_controller_function = 2;
		LPDPALOHJAF raid_state_function = 3;
		BELFLBDBEOK raid_lobby_state_function = 4;
		PNEBCOFFBDP raid_lobby_gui_controller_function = 5;
		KMIELIPIKBM raid_battle_state_function = 6;
		IJJNKDDAABJ raid_resolve_state_function = 7;
		MAGECPJDCLI raid_resolve_uicontroller_function = 8;
		JIDIMBIHGKD encounter_state_function = 9;
		ACBEBOJODLM map_explore_state_function = 10;
	}

	enum PNEBCOFFBDP {
		NONE_RAID_LOBBY_GUI_CONTROLLER = 0;
		INIT_RAID_LOBBY_GUI_CONTROLLER = 1;
		SET_DEPENDANT_VISUALS = 2;
		START_LOBBY_INTRO = 3;
		LOBBY_INTRO = 4;
		ON_LOBBY_INTRO_COMPLETE = 5;
		SHOW_BATTLE_PREP_GUI = 6;
		HANDLE_DISMISS_COMPLETE = 7;
		START_TIMEOUT_SCREEN = 8;
		REJOIN_BATTLE = 9;
		UPDATE_AVATARS = 10;
		START_POLLING_GET_RAID_DETAILS = 11;
		PLAY_BATTLE_INTRO = 12;
		LEAVE_LOBBY = 13;
		ON_POKEMON_INVENTORY_OPENED = 14;
		ON_CLICK_INVENTORY = 15;
		ON_TAP = 16;
		HANDLE_RAID_BATTLE_COMPLETE = 17;
	}

	int32 bpgngpbcdli = 1;
}

message PKHHMKIPNGC {
}

message PKJJOAGPANE {
	DCAECPGGPON cdanjeoicjj = 1;
	int64 ccehjdceell = 2;
	string eachachiggl = 3;
	string cilejoppmbm = 4;
	string anblljnccia = 6;
	repeated DCAECPGGPON ehcmblmgpfl = 7;
	repeated string hkmopdinlap = 8;
	repeated string jnfhjbicbei = 9;
	string mmihmoablnd = 10;
	repeated string achcjhobpac = 11;
	bool dgfmmlejebo = 12;
	BFABHCMKGCB bcpakinnkhh = 13;
	BFABHCMKGCB ajbhokdcfjj = 14;
	string papgbfcfepg = 15;
	string nmkkfhghnjc = 16;
	int64 ojmaoepeohm = 100;
	int64 jgnlnkbhfga = 101;
}

message PKPBLDALKLL {
	repeated uint64 ghadpgjcoel = 1;
	string lkheohlgndb = 2;
}

message PLABKMADJNB {
	float jpcbjbblhin = 1;
	float aepfjekgfkj = 2;
	float dfknhlpenel = 3;
	float ccghcdhkmbd = 4;
	float knfjkekagnk = 5;
}

message PLDDPIAHAOI {
	FNFFHJKDDJJ llmimjaeglc = 1;
	string jcmllilkjek = 2;
}

message PLGJANAOHME {
	bool ijehjphkkog = 1;
	int32 aobjclcmmek = 2;
}

message PLHFDCHKMBC {
	bytes dpneefelkgi = 1;
}

message PLNEPDGILLK {
	repeated LDFALHFIDDC baejdbomnio = 1;
	repeated GNADEEPKNPK mnmfeekffkf = 2;
}

message PLOBBGOGMNB {
	int32 hbmmfopjbce = 1;
	uint32 pigccfgkgop = 2;
	BLHOAMLPHPM.CNEGOAFOKDN hhkodmoefol = 3;
}

message PLPADMHFABD {
	COPMENHFKJN ohhklmidagh = 1;
}

message PMFDLMLCDLK {
	enum HEKFJOELNKB {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NO_POKEMON = 2;
		ERROR_CANNOT_USE = 3;
		ERROR_DEPLOYED_TO_FORT = 4;
	}

	HEKFJOELNKB hhkodmoefol = 1;
	int32 ijjgponbajg = 2;
}

message PMFJIFGBIJN {
	bool ljcclhodpjg = 1;
	bool hcnjjgkaanb = 2;
}

message PMHCLJNHGAM {
	GMICNCPLCMG kmboffachcn = 1;
	int32 abgnikhoaga = 2;
	string ppdochkmnff = 3;
}

message PMJOHFOHGFG {
	string eeeblolnnbk = 1;
	KMHCCPJEION.LGFABOIJPEN.MHEKLBNOJBN pdeokhohkdn = 2;
}

message PMNHFFJBFBC {
	KHOFOOOHEMH cokadbeohcj = 1;
	int64 okcgkecdnnb = 2;
	string bajolmeabfd = 3;
	string gfepbfmmdcc = 4;
}

message PNBIGGFCOHE {
	int32 nlbmhbmdooc = 1;
}

message PNDLOAIPIMP {
	enum AKOFGMCIKAC {
		UNSET = 0;
		APPROVE = 1;
		REJECT = 2;
	}

	int64 bajolmeabfd = 1;
	int64 lpddlokhgnh = 2;
	AKOFGMCIKAC eifnkmnioan = 3;
}

message PODMIPFIBGP {
	uint64 ghadpgjcoel = 1;
	string blpnlkdpbla = 2;
	repeated string ncmogglbdib = 3;
}

message POILAFPCEPF {
	repeated OMDCMKIAADD cabpealgccm = 1;
}

message POLNBIMJBIC {
	PAEHCJKJPLP acbpiimiphk = 1;
	NKDPOODGENC.OHPOBKKLMHO idpjkdmgjao = 2;
}

message PPAJDKBHIHP {
	OFKHNHHPPBD kkfblfmelbk = 1;
	string hinjeppgdph = 2;
	string ambapacfacm = 3;
	string kjokpkcjmmg = 4;
	uint32 npfplijbieh = 5;
	bool kdjgjagmpgc = 6;
	int32 ddjilmjnhji = 7;
	uint64 oidifpamkel = 8;
}

message PPGEILOALJH {
	uint64 igfdgcikjem = 1;
	GMICNCPLCMG ngfdagnmgpe = 2;
	bool dcdflocpcki = 3;
	LPJIIDADPIE.GIODHGBDACN fpjfbinloac = 4;
}

message PPHHNEDFGBH {
	message MJCCJMDEGNC {
		EFDCDOBEKEN kobgohfemnn = 1;
		int32 fjdhldkllcc = 2;
		int32 ljafcllohfl = 3;
		int32 amidjnpljli = 4;
	}

	repeated MJCCJMDEGNC dninmoipdep = 1;
}

message PPIPIFFBMPJ {
	string flnekghfefk = 1;
}

message PPKCBJGDFKI {
	float omacmhglfpm = 1;
	float jhmomaapmko = 2;
	float plcngecnenm = 3;
	int32 nphadglgmjl = 4;
	float lpmpfgccabi = 5;
	int32 ggplbaanhde = 6;
	float jhdpcgphkoe = 7;
	int32 allfkkadicd = 8;
}

message PPKEGIDGICI {
	enum IJDLJIBINLM {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_LEVEL_TOO_LOW = 2;
		TAG_DOES_NOT_EXIST = 3;
		INVALID_TAG_NAME = 4;
		INVALID_TAG_SORT_INDEX = 5;
		TAG_NAME_CONTAINS_PROFANITY = 6;
	}

	repeated IJDLJIBINLM jldpfpcnoch = 2;
}

message PPKFHJGPKFB {
	int64 bkkcjfmmhpl = 1;
	string ahcgfgkkkdn = 2;
	repeated int32 gdghkinahdb = 3;
}

message PPMBMHICCLC {
	string jlpmmlbclok = 1;
}

message PPMOEEBFKKG {
	OMDCMKIAADD ldccnikjabe = 1;
	repeated int32 ahemfnnhnka = 2;
	repeated int32 affdnmklkgo = 3;
	JDHOCBHIAMN.BBHGMAEIPLP aihkgechdic = 4;
	uint32 ahohfacohpn = 5;
	uint32 hdbiaccmnbp = 6;
}

message PPOMIDJFNIG {
	string lkheohlgndb = 1;
}

message PasscodeRedeemTelemetry {
	string result = 1;
	string passcode = 2;
	string country_code = 3;
	string language_code = 4;
	string bundle_version = 5;
}

message PermissionsFlowTelemetry {
	PermissionContextTelemetryIds permission_context_telemetry_ids = 1;
	DeviceServiceTelemetryIds device_service_telemetry_ids = 2;
	PermissionFlowStepTelemetryIds permission_flow_step_telemetry_ids = 3;
	bool success = 4;
}

message PixelPointProto {
	int32 pixel_x = 1;
	int32 pixel_y = 2;
	int32 zoom_level = 3;
}

message PlatformCommonFilterProto {
	string application_identifier = 1;
	string operating_system_name = 2;
	string device_model = 3;
	string locale_country_code = 4;
	string locale_language_code = 5;
	double sampling_probability = 6;
	string quality_level = 7;
	string network_connectivity_type = 8;
	string game_context = 9;
}

message PlatformMetricData {
	oneof DatapointValue {
		int64 long_value = 2;
		double double_value = 3;
		bool boolean_value = 4;
		Distribution distribution = 5;
	}

	enum Kind {
		UNSPECIFIED = 0;
		GAUGE = 1;
		DELTA = 2;
		CUMULATIVE = 3;
	}

	TelemetryCommon common_telemetry = 1;
	Kind metric_kind = 6;
}

message PlatformRedeemAppleReceiptOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Status status = 1;
	repeated string provisioned_transaction_tokens = 2;
}

message PlatformRedeemAppleReceiptProto {
	string receipt = 1;
	string purchase_currency = 2;
	int32 price_paid_e6 = 3;
	int64 price_paid_e6_long = 4;
}

message PlatformRedeemSamsungReceiptOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Status status = 1;
	string purchase_id = 2;
}

message PlatformRedeemSamsungReceiptProto {
	string purchase_data = 1;
	string purchase_id = 2;
	string purchase_currency = 3;
	int64 price_paid_e6_long = 4;
}

message PlatformServerData {
	string user_id = 1;
	string telemetry_id = 2;
	string session_id = 3;
	string event_request_id = 4;
	int64 server_timestamp_ms = 5;
}

message PlayerHudNotificationClickTelemetry {
	string notification_category = 1;
}

message PlayerSettingsProto {
	bool opt_out_online_status = 1;
	repeated SocialSettings.TutorialType completed_tutorials = 2;
}

message PlayerShownLevelUpShareScreenTelemetry {
	bool player_viewed_photo = 1;
	bool player_shared_photo = 2;
	int32 player_level = 3;
}

message PlayerSubmissionResponseProto {
	enum Status {
		STATUS_UNSPECIFIED = 0;
		SUCCESS = 1;
		INTERNAL_ERROR = 2;
		TOO_MANY_RECENT_SUBMISSIONS = 3;
		MINOR = 4;
		NOT_AVAILABLE = 5;
		INVALID_INPUT = 6;
		MISSING_IMAGE = 7;
		DISTANCE_VALIDATION_FAILED = 8;
	}

	Status status = 1;
	string submission_id = 2;
	repeated string messages = 3;
}

message PlayerSummaryProto {
	string player_id = 1;
	string codename = 2;
	bytes public_data = 3;
	string team = 4;
	string fb_user_id = 5;
	int32 level = 6;
	int64 experience = 7;
	string nia_account_id = 8;
}

message PoiCategorizationEntryTelemetry {
	enum EntryType {
		UNSET = 0;
		EDIT = 1;
		NOMINATION = 2;
	}

	EntryType entry_type = 1;
	int64 session_start_time = 2;
	string lang_country_code = 3;
}

message PoiCategorizationOperationTelemetry {
	enum OperationType {
		UNSET = 0;
		EDIT_SUBMITTED = 1;
		EDIT_CANCELLED = 2;
		NOMINATION_EXIT_FORWARD = 3;
		NOMINATION_EXIT_BACKWARD = 4;
	}

	OperationType operation_type = 1;
	int64 session_start_time = 2;
	repeated string selected_ids = 3;
	string lang_country_code = 4;
}

message PoiCategoryRemovedTelemetry {
	int64 session_start_time = 1;
	string removed_id = 2;
	repeated string remaining_ids = 3;
	string lang_country_code = 4;
}

message PoiCategorySelectedTelemetry {
	int64 session_start_time = 1;
	string selected_id = 2;
	int32 selected_index = 3;
	bool search_entered = 4;
	bool parent_selected = 5;
	string lang_country_code = 6;
}

message PoiSubmissionPhotoUploadErrorTelemetry {
	enum PoiSubmissionPhotoUploadErrorIds {
		UNSET = 0;
		POI_PHOTO_UPLOAD_ERROR = 1;
		POI_PHOTO_UPLOAD_TIMEOUT = 2;
	}

	PoiSubmissionPhotoUploadErrorIds error_id = 1;
	PoiImageType image_type = 2;
	string error_message = 3;
}

message PoiSubmissionTelemetry {
	enum PoiCameraStepIds {
		UNSET = 0;
		ENTER = 1;
		RETAKE = 2;
		CONFIRM = 3;
		EXIT = 4;
	}

	enum PoiSubmissionGuiEventId {
		UNKNOWN = 0;
		POI_NOMINATION_ENTER = 1;
		POI_TUTORIAL_COMPLETE = 2;
		POI_MAP_CHANGEDVIEW_MAP = 3;
		POI_MAP_CHANGEDVIEW_SATELLITE = 4;
		POI_MAP_CENTER_LOCATION = 5;
		POI_LOCATION_SET = 6;
		POI_PHOTO_CAMERA_ENTER = 7;
		POI_PHOTO_CAMERA_EXIT = 8;
		POI_TITLE_ENTERED = 9;
		POI_DESCRIPTION_ENTER = 10;
		POI_DETAILS_CONFIRM = 11;
		POI_SUPPORTINGINFO_ENTER = 12;
		POI_SUBMIT_BUTTON_HIT = 13;
		POI_EXIT_BUTTON_HIT = 14;
		POI_NOMINATION_GUIDELINES_HIT = 15;
		POI_MAP_TOGGLE_POIS_OFF = 16;
		POI_MAP_TOGGLE_POIS_ON = 17;
		POI_MAP_WAYSPOTS_LOADED = 18;
		POI_MAP_SELECT_POI = 19;
		POI_MAP_SELECT_POI_ABANDON = 20;
		POI_MAP_SELECT_POI_COMPLETED = 21;
		POI_MAP_TUTORIAL_SELECTED = 22;
	}

	PoiSubmissionGuiEventId gui_event_id = 1;
	PoiImageType image_type = 2;
	PoiCameraStepIds camera_step_id = 3;
	string poi_id = 4;
}

message PoiVideoSubmissionMetadataProto {
	string poi_id = 1;
	LocationE6Proto location = 2;
	int32 player_level = 3;
}

message PointList {
	repeated uint32 coords = 1;
}

message PokedexCategorySelectedTelemetry {
	FFKJOOMBLDO category = 1;
}

message PokemonGoPlusTelemetry {
	PokemonGoPlusIds pgp_event_ids = 1;
	int32 count = 2;
	int32 version = 3;
}

message PokemonHomeTelemetry {
	PokemonHomeTelemetryIds pokemon_home_click_ids = 1;
}

message PokemonInventoryTelemetry {
	PokemonInventoryTelemetryIds pokemon_inventory_click_ids = 1;
	string sort_id = 2;
}

message PokemonLoadDelay {
	PokemonLoadTelemetry pokemon = 1;
	float load_delay = 2;
}

message PokemonLoadTelemetry {
	int32 pokemon_id = 1;
	IBGGKKNEKOA.BNNGGJPIPIH costume = 2;
	IBGGKKNEKOA.KJGDPFEEFAJ gender = 3;
	bool shiny = 4;
	IBGGKKNEKOA.IBGFAGKHKGN form = 5;
	IBGGKKNEKOA.DDEDEGGJGPH alignment = 6;
	GMICNCPLCMG temporary_evolution_id = 7;
}

message PokemonSearchTelemetry {
	enum PokemonSearchSourceIds {
		UNDEFINED = 0;
		FROM_SEARCH_PILL_CLICK = 1;
		LATEST_SEARCH_ENTRY_CLICK = 2;
	}

	PokemonSearchSourceIds pokemon_search_source_id = 1;
	string prepended_search_string = 2;
	string search_term_string = 3;
	string appended_search_string = 4;
	repeated int32 experiment_id = 5;
}

message PokemonTelemetry {
	int32 pokemon_id = 1;
	int32 cp = 2;
	float weight_kg = 3;
	float height_m = 4;
	int32 pokemon_level = 5;
}

message PokestopReward {
	int32 item_id = 1;
	int32 item_count = 2;
}

message Polyline {
	repeated uint32 coords = 1;
}

message PolylineList {
	repeated Polyline polylines = 1;
}

message ProfileDetailsProto {
	string profile_name_app_key = 1;
	string nickname = 2;
	string profile_name = 4;
}

message ProfilePageTelemetry {
	ProfilePageTelemetryIds profile_page_click_id = 1;
}

message ProxyRequestProto {
	uint32 action = 1;
	string host = 2;
	bytes payload = 3;
}

message ProxyResponseProto {
	enum Status {
		UNSET = 0;
		COMPLETED = 1;
		COMPLETED_AND_REASSIGNED = 2;
		ACTION_NOT_FOUND = 3;
		ASSIGNMENT_ERROR = 4;
		PROXY_UNAUTHORIZED_ERROR = 5;
		INTERNAL_ERROR = 6;
		BAD_REQUEST = 7;
		ACCESS_DENIED = 8;
		TIMEOUT_ERROR = 9;
		RATE_LIMITED = 10;
	}

	Status status = 1;
	string assigned_host = 2;
	bytes payload = 3;
}

message PurchaseSkuOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		BALANCE_TOO_LOW = 3;
		SKU_NOT_AVAILABLE = 4;
		OVER_INVENTORY_LIMIT = 5;
	}

	Status status = 1;
}

message PurchaseSkuProto {
	string sku_id = 1;
}

message PushGatewayTelemetry {
	PushGatewayTelemetryIds push_gateway_telemetry_id = 1;
}

message PushGatewayUpstreamErrorTelemetry {
	int32 upstream_response_status = 1;
	int64 token_expire_timestamp = 2;
	int64 client_timestamp = 3;
	int64 server_timestamp = 4;
}

message PushNotificationRegistryOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NO_CHANGE = 2;
	}

	Result result = 1;
}

message PushNotificationRegistryProto {
	ApnToken apn_token = 1;
	GcmToken gcm_token = 2;
}

message PushNotificationTelemetry {
	PushNotificationTelemetryIds notification_id = 1;
	string category = 2;
}

message RaidTelemetry {
	RaidTelemetryIds raid_telemetry_id = 1;
	string bundle_version = 2;
	float time_since_enter_raid = 3;
	float time_since_last_raid_telemetry = 4;
	int32 raid_level = 5;
	bool private_lobby = 6;
	string ticket_item = 7;
	int32 num_players_in_lobby = 8;
	int32 battle_party_number = 9;
}

message ReadPointOfInterestDescriptionTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	string partner_id = 4;
	string campaign_id = 5;
}

message RedeemGoogleReceiptOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Status status = 1;
	string transaction_token = 2;
}

message RedeemGoogleReceiptProto {
	string receipt = 1;
	string receipt_signature = 2;
	string purchase_currency = 3;
	int32 price_paid_e6 = 4;
	int64 price_paid_e6_long = 5;
	string country_code = 6;
}

message RedeemPasscodeRequestProto {
	string passcode = 1;
}

message RedeemPasscodeResponseProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NOT_AVAILABLE = 2;
		OVER_INVENTORY_LIMIT = 3;
		ALREADY_REDEEMED = 4;
		OVER_PLAYER_REDEMPTION_LIMIT = 5;
	}

	message AcquiredItem {
		string item = 1;
		int64 count = 2;
	}

	Result result = 1;
	bytes acquired_items_proto = 2;
	string passcode = 3;
}

message RedeemSamsungReceiptOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Status status = 1;
	string purchase_id = 2;
}

message RedeemSamsungReceiptProto {
	string purchase_data = 1;
	string purchase_id = 2;
	string purchase_currency = 3;
	int64 price_paid_e6_long = 4;
}

message ReferContactListFriendRequest {
	message ReferralProto {
		string referral_code = 1;
		string referral_link = 2;
	}

	SocialV2Enum.ContactMethod contact_method = 1;
	string contact_info = 2;
	string contact_id = 3;
	string receiver_name = 4;
	string app_store_link = 5;
	ReferralProto referral = 6;
}

message ReferContactListFriendResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_CONTACT_NOT_FOUND = 3;
		ERROR_FAILED_TO_SEND_EMAIL = 4;
		ERROR_EXCEED_LIMIT = 5;
		ERROR_NO_SENDER_NAME = 6;
		ERROR_INAPPROPRIATE_RECEIVER_NAME = 7;
		ERROR_ALREADY_SIGNED_UP = 8;
	}

	Result result = 1;
}

message RegisterBackgroundDeviceActionProto {
	string device_type = 1;
	string device_id = 2;
}

message RegisterBackgroundDeviceResponseProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	Status status = 1;
	BackgroundToken token = 2;
}

message ReleasePokemonTelemetry {
	PokemonTelemetry pokemon = 1;
}

message RemoteRaidTelemetry {
	RemoteRaidTelemetryIds remote_raid_telemetry_id = 1;
	RemoteRaidJoinSource remote_raid_join_source = 2;
	RemoteRaidInviteAcceptSource remote_raid_invite_accept_source = 3;
}

message RemoveFriendOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_DOES_NOT_EXIST_DELETED = 2;
		ERROR_PLAYER_NOT_A_FRIEND = 3;
	}

	Result result = 1;
}

message RemoveFriendProto {
	string player_id = 1;
	string nia_account_id = 2;
}

message RemoveLoginActionOutProto {
	enum Status {
		UNSET = 0;
		LOGIN_NOT_REMOVABLE = 1;
	}

	bool success = 1;
	repeated LoginDetail login_detail = 2;
	Status status = 3;
}

message RemoveLoginActionProto {
	IdentityProvider identity_provider = 1;
	string auth_provider_id = 2;
}

message RoadMetadata {
	bool is_tunnel = 1;
	bool railway_is_siding = 2;
	string network = 3;
	string shield_text = 4;
	string route = 5;
}

message RpcResponseTelemetry {
	enum ConnectionType {
		UNKNOWN = 0;
		WIFI = 1;
		CELL_DEFAULT = 2;
		CELL_1G = 3;
		CELL_2G = 4;
		CELL_3G = 5;
		CELL_4G = 6;
		CELL_5G = 7;
		CELL_6G = 8;
		CELL_7G = 9;
	}

	float window_duration = 1;
	repeated RpcResponseTime response_timings = 2;
	ConnectionType connection_type = 3;
}

message RpcResponseTime {
	KCMPDPEOJBB rpc_id = 1;
	int32 count_call = 2;
	float average_response_time = 3;
	int32 timeout_count = 4;
}

message RpcSocketResponseTelemetry {
	float window_duration = 1;
	repeated RpcSocketResponseTime response_timings = 2;
}

message RpcSocketResponseTime {
	uint64 request_id = 1;
	string probe_id = 2;
	float response_time = 3;
	bool side_channel = 4;
	bool ad_hoc = 5;
	float ad_hoc_delay = 6;
}

message SavePlayerSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
}

message SavePlayerSettingsProto {
	PlayerSettingsProto settings = 1;
}

message SearchPlayerOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
	}

	Result result = 1;
	PlayerSummaryProto player = 2;
}

message SearchPlayerProto {
	string friend_code = 1;
}

message SendContactListFriendInviteRequest {
	repeated string emails = 1;
	repeated string phone_numbers = 2;
}

message SendContactListFriendInviteResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_OUTBOX_FULL = 3;
		ERROR_PLAYER_INBOX_FULL = 4;
		ERROR_SENDER_HAS_MAX_FRIENDS = 5;
		ERROR_RECEIVER_HAS_MAX_FRIENDS = 6;
		ERROR_ALREADY_A_FRIEND = 7;
		ERROR_INVITE_ALREADY_SENT = 8;
		ERROR_INVITE_ALREADY_RECEIVED = 9;
		ERROR_CANNOT_SEND_INVITES_TO_YOURSELF = 10;
		ERROR_CONTACT_NOT_FOUND = 11;
		ERROR_RECEIVER_NOT_FOUND = 12;
		ERROR_NO_SENDER_NAME = 13;
	}

	Result result = 1;
}

message SendFriendInviteOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_ALREADY_A_FRIEND = 3;
		ERROR_PLAYER_DOES_NOT_EXIST_DELETED = 4;
		ERROR_PLAYER_INBOX_FULL = 5;
		ERROR_PLAYER_OUTBOX_FULL = 6;
		ERROR_SENDER_HAS_MAX_FRIENDS = 7;
		ERROR_INVITE_ALREADY_SENT = 8;
		ERROR_CANNOT_SEND_INVITES_TO_YOURSELF = 9;
		ERROR_INVITE_ALREADY_RECEIVED = 10;
		ERROR_RECEIVER_HAS_MAX_FRIENDS = 11;
	}

	Result result = 1;
}

message SendFriendInviteProto {
	string player_id = 1;
	string friend_code = 2;
	bool read_only = 3;
	string nia_account_id = 4;
}

message ServerRecordMetadata {
	string user_id = 1;
	string telemetry_name = 2;
	string session_id = 3;
	string request_id = 4;
	int64 server_timestamp_ms = 5;
}

message SetAccountSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INAPPROPRIATE_NAME = 3;
	}

	Result result = 1;
}

message SetAccountSettingsProto {
	AccountSettingsProto settings = 1;
}

message SetInGameCurrencyExchangeRateOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Status status = 1;
}

message SetInGameCurrencyExchangeRateProto {
	string in_game_currency = 1;
	string fiat_currency = 2;
	int64 fiat_currency_cost_e6_per_in_game_unit = 3;
}

message SetInGameCurrencyExchangeRateTrackingProto {
	string in_game_currency = 1;
	string fiat_currency = 2;
	int64 fiat_currency_cost_e6_per_in_game_unit = 3;
	string status = 4;
}

message ShoppingPageClickTelemetry {
	ShoppingPageTelemetryIds shopping_page_click_id = 1;
	ShoppingPageTelemetrySource shopping_page_click_source = 2;
	string item_sku = 3;
	bool has_item = 4;
	string ml_bundle_tracking_id = 5;
}

message ShoppingPageScrollTelemetry {
	ShoppingPageScrollIds scroll_type = 1;
	int32 scroll_row = 2;
	int32 total_rows = 3;
}

message ShoppingPageTelemetry {
	ShoppingPageTelemetryIds shopping_page_click_id = 1;
}

message SkuPresentationProto {
	string key = 1;
	string value = 2;
}

message SkuStorePrice {
	string currency_code = 1;
	int64 price_paid_e6 = 2;
}

message SocialClientFeatures {
	message CrossGameSocialClientSettingsProto {
		enum AppLinkType {
			NO_LINK = 0;
			WEB_LINK = 1;
			APP_STORE_LINK = 2;
		}

		enum FeatureType {
			UNSET = 0;
			NIANTIC_PROFILE = 1;
			ONLINE_STATUS = 2;
			CROSS_GAME_FRIEND_LIST = 3;
			GAME_INVITE_SENDER = 4;
			SHARED_FRIEND_GRAPH = 5;
			NICKNAME = 6;
			CROSS_GAME_ONLINE_STATUS = 7;
			GAME_INVITE_RECEIVER = 8;
			ADDRESS_BOOK_IMPORT = 9;
		}

		repeated FeatureType disabled_features = 1;
		AppLinkType app_link = 2;
	}

	CrossGameSocialClientSettingsProto cross_game_social_settings = 1;
}

message SocialClientGlobalSettings {
	message CrossGameSocialSettingsProto {
		bool niantic_profile_codename_opt_out_enabled = 1;
		repeated string disabled_outgoing_game_invite_app_key = 2;
		repeated string unreleased_app_key = 3;
		int32 contact_list_sync_page_size = 4;
		int64 contact_list_sync_interval_ms = 5;
		int32 max_friends = 6;
		int32 contact_list_concurrent_rpc_size = 7;
	}

	CrossGameSocialSettingsProto cross_game_social_settings = 1;
}

message SocialGiftCountTelemetry {
	int32 unopened_gift_count = 1;
	int32 unsent_gift_count = 2;
}

message SocialInboxLatencyTelemetry {
	int32 latency_ms = 1;
	string category = 2;
}

message SocialProto {
	enum AppKey {
		INVALID = 0;
		INGRESS_DELETED = 1;
		HOLOHOLO_DELETED = 2;
		LEXICON_DELETED = 3;
	}

}

message SocialSettings {
	enum ConsentStatus {
		UNKNOWN = 0;
		OPT_IN = 1;
		OPT_OUT = 2;
	}

	enum TutorialType {
		UNSET = 0;
		PROFILE = 1;
		CROSS_GAME_FRIEND_LIST = 2;
		ONLINE_STATUS_OVERVIEW = 3;
		ONLINE_STATUS_TOGGLE = 4;
		ADDRESS_BOOK_IMPORT = 5;
		ADDRESS_BOOK_DISCOVERABILITY = 6;
	}

}

message SocialTelemetry {
	SocialTelemetryIds social_click_id = 1;
	int32 pages_scrolled_in_friends_list = 2;
}

message SocialV2Enum {
	enum ContactMethod {
		CONTACT_METHOD_UNSET = 0;
		EMAIL = 1;
		SMS = 2;
	}

	enum InvitationStatus {
		INVITATION_STATUS_UNSET = 0;
		INVITED = 1;
	}

	enum OnlineStatus {
		STATUS_UNSET = 0;
		STATUS_UNKNOWN = 1;
		STATUS_ONLINE = 2;
		STATUS_OFFLINE = 3;
	}

}

message SpinPokestopTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	repeated PokestopReward pokestop_rewards = 4;
	int32 total_rewards = 5;
}

message SubmitNewPoiOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		INTERNAL_ERROR = 3;
		TOO_MANY_RECENT_SUBMISSIONS = 4;
		INVALID_INPUT = 5;
		MINOR = 6;
		NOT_AVAILABLE = 7;
	}

	Status status = 1;
	string submission_id = 2;
	repeated string messages = 3;
}

message SubmitNewPoiProto {
	string title = 1;
	string long_description = 2;
	int32 lat_e6 = 3;
	int32 lng_e6 = 4;
	string supporting_statement = 5;
	bool async_file_upload = 6;
	repeated string player_submitted_category_ids = 7;
	string category_suggestion = 8;
}

message SubmitPlayerImageVoteForPoiOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		POI_NOT_FOUND = 2;
		POI_IMAGE_NOT_FOUND = 3;
		INVALID_REQUEST = 6;
	}

	Status status = 1;
}

message SubmitPlayerImageVoteForPoiProto {
	repeated string image_ids_to_vote_for = 1;
	repeated string image_ids_to_unvote = 2;
	string poi_id = 3;
}

message SubmitPoiCategoryVoteRecordProto {
	string poi_id = 1;
	repeated string player_submitted_category_ids = 2;
	string category_suggestion = 3;
}

message SubmitPoiImageProto {
	string poi_id = 1;
	bool async_file_upload = 2;
}

message SubmitPoiLocationUpdateProto {
	string poi_id = 1;
	LocationE6Proto location = 2;
}

message SubmitPoiTakedownRequestProto {
	string poi_id = 1;
	PoiInvalidReason invalid_reason = 2;
}

message SubmitPoiTextMetadataUpdateProto {
	string poi_id = 1;
	string title = 2;
	string description = 3;
}

message SubmitSponsorPoiLocationUpdateProto {
	string poi_id = 1;
	LocationE6Proto location = 2;
}

message SubmitSponsorPoiReportProto {
	string poi_id = 1;
	SponsorPoiInvalidReason invalid_reason = 2;
	string additional_details = 3;
}

message SuperAwesomeTokenProto {
	string token = 1;
}

message SyncContactListRequest {
	message ContactProto {
		string contact_id = 1;
		repeated string email = 2;
		repeated string phone_number = 3;
	}

	repeated ContactProto contact = 1;
}

message SyncContactListResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
		ERROR_EXCEEDS_MAX_CONTACTS_PER_QUERY = 4;
	}

	message ContactPlayerProto {
		enum ContactStatus {
			UNSET = 0;
			INVITED = 1;
			REMOVED = 2;
		}

		message PlayerProto {
			bool is_calling_game_player = 1;
			bool is_newly_signed_up_player = 2;
			bool is_self = 3;
			bool is_friend = 4;
		}

		string contact_id = 1;
		repeated PlayerProto player = 2;
		ContactStatus status = 3;
	}

	Result result = 1;
	repeated ContactPlayerProto contact_player = 2;
}

message TelemetryCommon {
	int64 timestamp = 1;
	string correlation_vector = 2;
	string event_id = 3;
	int64 client_timestamp_ms = 4;
}

message TemplateVariable {
	string name = 1;
	string literal = 2;
	string key = 3;
	string lookup_table = 4;
	bytes byte_value = 5;
}

message TiledBlob {
	int32 format_version = 1;
	int32 zoom = 2;
	int32 x = 3;
	int32 y = 4;
	int32 epoch = 5;
	bytes encoded_data = 6;
}

message TopicProto {
	string topic_id = 1;
	string namespace = 2;
}

message TransitMetadata {
	string route = 1;
	string agency = 2;
	string color_name = 3;
}

message TriangleList {
	repeated uint32 coords = 1;
	bytes exterior_edges = 2;
}

message TutorialTelemetry {
	enum TutorialTelemetryId {
		UNDEFINED = 0;
		TAG_LEARN_MORE_BUTTON_CLICKED = 1;
		TAG_POPUP_TUTORIAL_SHOWN = 2;
		FRIEND_LIST_LEARN_MORE_BUTTON_CLICKED = 3;
		FRIEND_DETAIL_HELP_BUTTON_CLICKED = 4;
		TASK_TUTORIAL_CURVE_BALL_VIEWED = 5;
		TASK_TUTORIAL_THROW_TYPE_VIEWED = 6;
		TASK_TUTORIAL_GIFT_VIEWED = 7;
		TASK_TUTORIAL_TRADING_VIEWED = 8;
		TASK_TUTORIAL_SNAPSHOT_WILD_VIEWED = 9;
		TASK_TUTORIAL_SNAPSHOT_INVENTORY_VIEWED = 10;
		TASK_TUTORIAL_SNAPSHOT_BUDDY_VIEWED = 11;
		GIFT_TUTORIAL_INTRODUCTION_SHOWN = 12;
		PLAYER_VIEWED_GIFT_TUTORIAL = 13;
		PLAYER_SKIPPED_GIFT_TUTORIAL = 14;
		PLAYER_COMPLETED_GIFT_TUTORIAL = 15;
		LURE_TUTORIAL_INTRODUCTION_SHOWN = 16;
		PLAYER_VIEWED_LURE_TUTORIAL = 17;
		PLAYER_SKIPPED_LURE_TUTORIAL = 18;
		PLAYER_COMPLETED_LURE_TUTORIAL = 19;
		GYM_TUTORIAL_BUTTON_CLICKED = 20;
		RAID_TUTORIAL_BUTTON_CLICKED = 21;
		POTION_AND_REVIVE_TUTORIAL_INTRODUCTION_SHOWN = 22;
		PLAYER_COMPLETED_REVIVE_TUTORIAL = 23;
		PLAYER_COMPLETED_POTION_TUTORIAL = 24;
		BERRY_CATCH_TUTORIAL_SHOWN = 25;
		TRADE_TUTORIAL_INTRODUCTION_SHOWN = 26;
		PLAYER_VIEWED_TRADING_TUTORIAL = 27;
		PLAYER_SKIPPED_TRADING_TUTORIAL = 28;
		PLAYER_COMPLETED_TRADING_TUTORIAL = 29;
		LUCKY_TRADE_TUTORIAL_SHOWN = 30;
		LUCKY_FRIENDS_UNLOCKED_TUTORIAL_SHOWN = 31;
		LUCKY_FRIENDS_TUTORIAL_BUTTON_CLICKED = 32;
	}

	TutorialTelemetryId telemetry_id = 1;
}

message UpdateAdventureSyncFitnessRequestProto {
}

message UpdateAdventureSyncFitnessResponseProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Status status = 1;
}

message UpdateAdventureSyncSettingsRequestProto {
	AdventureSyncSettingsProto adventure_sync_settings = 1;
}

message UpdateAdventureSyncSettingsResponseProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
	}

	Status status = 1;
}

message UpdateFacebookStatusOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
		ERROR_FACEBOOK_API = 4;
		ERROR_ALREADY_EXISTS = 5;
	}

	Result result = 1;
}

message UpdateFacebookStatusProto {
	string fb_access_token = 1;
	bool force_update = 2;
}

message UpdateFriendshipRequest {
	message FriendProfileProto {
		string nickname = 1;
	}

	string friend_id = 1;
	string friend_nia_account_id = 2;
	FriendProfileProto friend_profile = 3;
}

message UpdateFriendshipResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_NOT_FRIEND = 3;
		ERROR_NICKNAME_WRONG_FORMAT = 4;
		ERROR_FILTERED_NICKNAME = 5;
		ERROR_EXCEEDED_CHANGE_LIMIT = 6;
	}

	Result result = 1;
}

message UpdateIncomingGameInviteRequest {
	enum NewStatus {
		UNSET = 0;
		SEEN = 1;
		READ = 2;
	}

	string app_key = 1;
	NewStatus new_status = 2;
}

message UpdateIncomingGameInviteResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
}

message UpdateNotificationOutProto {
}

message UpdateNotificationProto {
	repeated string notification_ids = 1;
	repeated int64 create_timestamp_ms = 2;
	NotificationState state = 3;
}

message UpdateProfileRequest {
	message ProfileProto {
		string profile_name_app_key = 1;
	}

	ProfileProto profile = 1;
}

message UpdateProfileResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_EMPTY_PROFILE_NAME = 3;
	}

	Result result = 1;
}

message UploadManagementTelemetry {
	enum UploadManagementEventId {
		UNKNOWN = 0;
		UPLOAD_ALL_FROM_ENTRY_POINT = 1;
		UPLOAD_ALL_FROM_UPLOAD_MGMT_MENU = 2;
		CANCEL_ALL_FROM_ENTRY_POINT = 3;
		CANCEL_ALL_FROM_UPLOAD_MGMT_MENU = 4;
		CANCEL_INDIVIDUAL_UPLOAD = 5;
		DELETE_INDIVIDUAL_UPLOAD = 6;
		UPLOAD_ALL_SUCCESS = 7;
		UPLOAD_ALL_FAILURE = 8;
	}

	UploadManagementEventId upload_management_telemetry_id = 1;
}

message Upstream {
	oneof Message {
		SubscriptionRequest subscribe = 3;
		ProbeResponse probe = 4;
	}

	message ProbeResponse {
		enum NetworkType {
			UNSET = 0;
			DATA = 1;
			WIFI = 2;
		}

		int64 probe_start_ms = 1;
		string game_context = 2;
		NetworkType network_type = 3;
	}

	message SubscriptionRequest {
		repeated TopicProto topics = 1;
	}

	int64 request_id = 1;
	bytes token = 2;
}

message UserAttributesProto {
	int32 level = 1;
	int64 xp_percentage = 2;
	int64 pokecoin_count = 3;
	int32 team = 4;
	int32 catch_streak = 5;
	int32 spin_streak = 6;
	string buddy_name = 7;
	bool is_egg_incubating = 8;
	bool has_eggs = 9;
	int32 star_piece_count = 10;
	int32 lucky_egg_count = 11;
	int32 incense_ordinary_count = 12;
	int32 incense_spicy_count = 13;
	int32 incense_cool_count = 14;
	int32 incense_floral_count = 15;
	int32 lure_ordinary_count = 16;
	int32 lure_mossy_count = 17;
	int32 lure_glacial_count = 18;
	int32 lure_magnetic_count = 19;
	bool using_star_piece = 20;
	bool using_lucky_egg = 21;
	bool using_incense_ordinary = 22;
	bool using_incense_spicy = 23;
	bool using_incense_cool = 24;
	bool using_incense_floral = 25;
	bool using_lure_ordinary = 26;
	bool using_lure_mossy = 27;
	bool using_lure_glacial = 28;
	bool using_lure_magnetic = 29;
	bool adventure_sync_opt_in = 30;
	bool geo_fence_opt_in = 31;
	int32 kanto_dex_count = 32;
	int32 johto_dex_count = 33;
	int32 hoenn_dex_count = 34;
	int32 sinnoh_dex_count = 35;
	int32 friend_count = 36;
	int32 field_research_stamp_progress = 37;
	int32 level_up = 38;
	bool sent_friend_request = 39;
	string is_egg_incubating_v2 = 40;
	string has_eggs_v2 = 41;
	string using_star_piece_v2 = 42;
	string using_lucky_egg_v2 = 43;
	string using_incense_ordinary_v2 = 44;
	string using_incense_spicy_v2 = 45;
	string using_incense_cool_v2 = 46;
	string using_incense_floral_v2 = 47;
	string using_lure_ordinary_v2 = 48;
	string using_lure_mossy_v2 = 49;
	string using_lure_glacial_v2 = 50;
	string using_lure_magnetic_v2 = 51;
	string adventure_sync_opt_in_v2 = 52;
	string geo_fence_opt_in_v2 = 53;
	int32 unova_dex_count = 54;
	int32 balloon_battles_completed = 55;
	int32 balloon_battles_won = 56;
	int32 kalos_dex_count = 57;
	int32 alola_dex_count = 58;
	int32 galar_dex_count = 59;
}

message UserIssueWeatherReport {
	string gameplayer_weather = 1;
	bool alert_active = 2;
	int32 severity = 3;
	int32 user_report = 4;
}

message ViewPointOfInterestImageTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	bool in_range = 4;
	bool was_gym_interior = 5;
	string partner_id = 6;
	string campaign_id = 7;
}

message WayfarerOnboardingFlowTelemetry {
	enum EventType {
		UNSET = 0;
		ENTER_WAYFARER_WEBSITE = 1;
		DEFER_WAYFARER_ONBOARDING = 2;
		SIMPLIFIED_ONBOARDING_OK = 3;
	}

	EventType event_type = 1;
}

message WayspotEditTelemetry {
	enum WayspotEditEventId {
		UNKNOWN = 0;
		EDIT_IMAGE_UPLOAD_NOW = 1;
		EDIT_IMAGE_UPLOAD_LATER = 2;
	}

	WayspotEditEventId wayspot_edit_telemetry_id = 1;
}

message WeatherAlertProto {
	enum Severity {
		NONE = 0;
		MODERATE = 1;
		EXTREME = 2;
	}

	bool warn_weather = 2;
}

message WeatherDetailClickTelemetry {
	string gameplay_weather_type = 1;
	bool alert_active = 2;
	int32 severity = 3;
}

message WebTelemetry {
	WebTelemetryIds web_click_ids = 1;
	string url = 2;
	string fort_id = 3;
	string partner_id = 4;
	string campaign_id = 5;
}
